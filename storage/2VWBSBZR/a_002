(()=>{function e(e,n){for(var t=0;t<n.length;t++){var s=n[t];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}var n=function(){function n(e){!
/*!**********************************************!*\
  !*** ../assets/src/scripts/utils/fpstats.js ***!
  \**********************************************/
function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),this.config={endpoint:e.endpoint,sessionDomain:e.sessionDomain||window.location.hostname,sessionPath:e.sessionPath||"/",sessionPrefix:e.sessionPrefix||"__FP_SESS",sessionTimeout:e.sessionTimeout||30,debug:-1!==window.location.href.search("[?&]fpstatsDebug="),referrer:document.referrer}}var t,s,o;return t=n,s=[{key:"page",value:function(){this.push({type:"view"})}},{key:"track",value:function(e){this.push({type:"event",label:e.label,action:e.action||null,category:e.category||null,value:e.value||null})}},{key:"getIp",value:function(e){var n=new XMLHttpRequest;n.open("GET","https://ifconfig.me/ip",!0),n.setRequestHeader("Content-Type","application/json"),n.send(),n.onreadystatechange=function(){4==n.readyState&&e(n.response)}}},{key:"hash",value:function(e){for(var n=0,t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n&=n;return Math.abs(n)}},{key:"trackSearch",value:function(e){return e.type="event",e.category="Forms",e.label="Search",e.value=this.getParam("s"),e}},{key:"getParam",value:function(e){var n=null,t=[];return location.search.substr(1).split("&").forEach((function(s){(t=s.split("="))[0]===e&&(n=decodeURIComponent(t[1]).replace("+"," "))})),n}},{key:"addUAparams",value:function(e){if("function"==typeof UAParser){var n=(new UAParser).getResult();e.os_name=n.os.name||null,e.os_version=n.os.version||null,e.device_vendor=n.device.vendor||null,e.device_type=n.device.type||null,e.device_model=n.device.model||null,e.browser_name=n.browser.name||null,e.browser_version=n.browser.major||null}return e}},{key:"addUTMparams",value:function(e){for(var n=window.location.search.substring(1).split("&"),t=0;t<n.length;t++){var s=n[t].split("=");decodeURIComponent(s[0]).includes("utm_")&&(e[decodeURIComponent(s[0])]=decodeURIComponent(s[1]))}return e}},{key:"addContext",value:function(e){var n=this,t=n.getUser(),s=n.extendSession();return e.env=window.oPageData.env||null,e.post_id=window.oPageData.post_id||null,e.post_type=window.oPageData.post_type||null,e.href=window.location.href,e.profile_uid=t,e.session_uuid=s.uuid,e.url=window.oPageData.url||null,e.referrer_url=n.config.referrer||"Direct",e.created_at=(new Date).toISOString().slice(0,19).replace("T"," "),e=n.addUAparams(e),"search"===(e=n.addUTMparams(e)).post_type&&(e=n.trackSearch(e)),e}},{key:"push",value:function(e){var n=this;if(!1!==n.getUser()){var t=new XMLHttpRequest;e=n.addContext(e),n.config.debug&&(console.log("FP Stats Push: ",n.getSession(),e,window.oPageData),t.addEventListener("error",(function(e){console.log("FP Stats Push: Ajax Error ",e)}))),t.open("POST",n.config.endpoint,!0),t.setRequestHeader("Content-Type","application/json"),t.send(JSON.stringify(e))}else n.config.debug&&console.log("FP Stats Push: Failed (User not available)")}},{key:"getUser",value:function(){var e=this;return e.propertyExists(window,"FP","Singletons","UserAltAccess","ipAccessData","client_guid")?window.FP.Singletons.UserAltAccess.ipAccessData.client_guid:e.propertyExists(window,"FP","Singletons","User","userData","uid")?FP.Singletons.User.userData.uid:(e.removeSession(),!1)}},{key:"genSessionId",value:function(){var e,n=this,t=Date.now(),s=n.getUser();return null!==(e=t.toString().replace(".","")+"-"+s+"-"+n.hash(JSON.stringify(n.addUAparams({}))))&&void 0!==e?e:"-"}},{key:"extendSession",value:function(){var e=this;if(e.sessionExists()){var n=e.getSession();if(e.getUser()!==n.uid)return e.newSession();var t=new Date,s=new Date(t.getTime());return s.setMinutes(s.getMinutes()+e.config.sessionTimeout),n.updatedAt=t.getTime(),n.expiresAt=s.getTime(),e.saveSession(n,s)}return e.newSession()}},{key:"getSession",value:function(){var e=decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*"+encodeURIComponent(this.config.sessionPrefix).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*([^;]*).*$)|^.*$"),"$1"))||null;return null!==e?JSON.parse(e):void 0}},{key:"saveSession",value:function(e,n){var t=this,s="; expires="+n.toUTCString(),o=encodeURIComponent(t.config.sessionPrefix)+"="+encodeURIComponent(JSON.stringify(e))+s+(t.config.sessionDomain?"; domain="+t.config.sessionDomain:"")+(t.config.sessionPath?"; path="+t.config.sessionPath:"");return document.cookie=o,t.getSession()}},{key:"newSession",value:function(){var e=this;if(!e.config.sessionPrefix||/^(?:expires|max\-age|path|domain|secure)$/i.test(e.config.sessionPrefix))return!1;var n=new Date,t=new Date(n.getTime()),s=e.getUser(),o=e.genSessionId();t.setMinutes(t.getMinutes()+e.config.sessionTimeout);var i={uuid:o,createdAt:n.getTime(),expiresAt:t.getTime(),updatedAt:n.getTime(),uid:s};return e.saveSession(i,t)}},{key:"removeSession",value:function(){var e=this;return!(!e.config.sessionPrefix||!e.sessionExists()||(document.cookie=encodeURIComponent(e.config.sessionPrefix)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT"+(e.config.sessionDomain?"; domain="+e.config.sessionDomain:"")+(e.config.sessionPath?"; path="+e.config.sessionPath:""),0))}},{key:"sessionExists",value:function(){return new RegExp("(?:^|;\\s*)"+encodeURIComponent(this.config.sessionPrefix).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=").test(document.cookie)}},{key:"propertyExists",value:function(e){for(var n=Array.prototype.slice.call(arguments,1),t=0;t<n.length;t++){if(!e||!Object.prototype.hasOwnProperty.call(e,n[t]))return!1;e=e[n[t]]}return!0}}],s&&e(t.prototype,s),o&&e(t,o),Object.defineProperty(t,"prototype",{writable:!1}),n}(),t=0,s=setInterval((function(){t>=15&&clearInterval(s),void 0!==window.pianoReady&&window.pianoReady&&(clearInterval(s),window.fpstats=new n({endpoint:"/endpoint/fpstats?__fp_endpoint_fpstats=1"}),window.fpstats.page()),t++}),500)})();;
!function(s){s(document).ready(function(){var e={authorWrapper:s(".calerts-authors"),tagWrapper:s(".calerts-tags"),wrappers:s(".calerts-authors, .calerts-tags"),authorHeadline:s(".calerts-authors__alert-headline"),authorBody:s(".calerts-authors__alert-body"),tagHeadline:s(".calerts-tags__alert-headline"),tagBody:s(".calerts-tags__alert-body"),authorChkWrappers:s(".calerts-authors__author-wrapper"),tagChkWrappers:s(".calerts-tags__tag-wrapper"),checkmarkToggles:s("input.calerts-checkbox"),authorInputs:s('input[data-type="author_tag_alerts"]'),topicInputs:s('input[data-type="topic_tag_alerts"]'),regionalInputs:s('input[data-type="regional_tag_alerts"]'),email:"",uid:"",requests:[],tid:"",running:!1,init:function(){var e=this;if((window.customAlerts=e).wrappers.length&&!e.running){e.running=!0;var t="none";switch(e.propertyExists(window,"FP","Singletons","User","isReg")&&window.FP.Singletons.User.isReg&&(t="registered"),e.propertyExists(window,"FP","Singletons","User","isSub")&&window.FP.Singletons.User.isSub&&(t="subscriber"),t=e.propertyExists(window,"FP","Singletons","User","isIPAccess")&&window.FP.Singletons.User.isIPAccess?"ipaccess":t){case"none":var a=1<parseInt(e.authorWrapper.data("num-authors"))?" these authors are published. ":" this author are published. ";e.showAlert(["NEW EMAIL ALERTS","NEW EMAIL ALERTS"],["FP subscribers can now receive alerts when new stories written by"+a,"FP subscribers can now receive alerts when new stories on these topics and regions are published. "],"all").map(function(e){e.after(s("<a />",{text:"Sign in",href:"#",class:"-user -signin FP-paywall--login"}).click(function(e){e.preventDefault(),tp.pianoId.show({displayMode:"modal",screen:"login"})})).after(" | ").after(s("<a />",{text:"Subscribe now",href:"#",class:""}).click(function(e){e.preventDefault(),tp.offer.show({offerId:"OFJ7T1Z58NES",templateId:"OTQ3CIY6MBHM",displayMode:"modal"})}))}),e.wrappers.css({display:"inline"});break;case"registered":a=1<parseInt(e.authorWrapper.data("num-authors"))?" these authors are published. ":" this author are published. ";e.showAlert(["NEW EMAIL ALERTS","NEW EMAIL ALERTS"],["FP subscribers can now receive alerts when new stories written by"+a,"FP subscribers can now receive alerts when new stories on these topics and regions are published. "],"all").map(function(e){e.after(s("<a />",{text:"Subscribe now",href:"#",class:""}).click(function(e){e.preventDefault(),tp.offer.show({offerId:"OFJ7T1Z58NES",templateId:"OTQ3CIY6MBHM",displayMode:"modal"})}))}),e.wrappers.css({display:"inline"});break;case"subscriber":e.email=window.FP.Singletons.User.userData.email||"",e.uid=window.FP.Singletons.User.userData.uid||"",e.checkSubscription(),e.addEventListeners(),e.getAllSubscriptions(),e.amRun();break;case"ipaccess":e.wrappers.css({display:"none"})}}},addEventListeners:function(){var a=this;a.checkmarkToggles.on("click",function(e){e.preventDefault(),e.stopPropagation(),a.toggleSubscription(this)}),window.addEventListener("beforeunload",function(e){var t;if(a.requests.length)return t="We are still updating your preferences, leaving the page now will result in unsaved changes. Are you sure you want to leave the page?",(e||window.event).returnValue=t})},handleDisplay:function(){var e=this,t=!1,a=!1;e.authorInputs.each(function(){s(this).prop("checked")||(t=!0)}),e.topicInputs.each(function(){s(this).prop("checked")||(a=!0)}),e.regionalInputs.each(function(){s(this).prop("checked")||(a=!0)}),e.authorWrapper.css({display:t||e.authorWrapper.hasClass("message")?"inline":"none"}),e.tagWrapper.css({display:a||e.tagWrapper.hasClass("message")?"block":"none"})},getAllSubscriptions:function(){var t=this,e={customAlerts:{email:t.email,uid:t.uid,method:"get",wpnonce:customAlertsLocal.wpNonce||""}};t.amAddReq({type:"POST",url:"/endpoint/custom-alerts/?__fp_endpoint_custom_alerts=1",data:e,success:function(e){e.hasOwnProperty("data")&&!e.data.hasOwnProperty("code")?t.updateDom(e):t.errorHandler(e)},error:function(e){t.errorHandler(e)}})},updateDom:function(e){var t=this;for(alertType in e.data)t.updateSwitches(alertType,e.data[alertType]);t.handleDisplay(),t.wrappers.removeClass("loading")},updateSwitches:function(e,a){var t=this,r=!1;switch(e){case"author_tag_alerts":r=t.authorInputs;break;case"topic_tag_alerts":r=t.topicInputs;break;case"regional_tag_alerts":r=t.regionalInputs}!1!==r&&r.length&&r.each(function(e,t){s(t).parent().removeClass("loading"),s(t).removeAttr("disabled"),s(t).attr("name").split(",").filter(function(e){return""!==e&&null!=e}).every(function(e){return-1!==a.indexOf(e)})?s(t).prop("checked",!0):s(t).prop("checked",!1)})},toggleSubscription:function(t){var a=this,e={customAlerts:{email:a.email,uid:a.uid,method:s(t).is(":checked")?"add_subscription":"remove_subscription",wpnonce:customAlertsLocal.wpNonce||"",subject:s(t).attr("name"),type:s(t).data("type")}};s(t).parent().addClass("loading"),s(t).attr("disabled","disabled"),a.amAddReq({type:"POST",url:"/endpoint/custom-alerts/?__fp_endpoint_custom_alerts=1",data:e,success:function(e){e.hasOwnProperty("data")&&e.data.hasOwnProperty(s(t).data("type"))?(s(t).parent().removeClass("loading"),s(t).removeAttr("disabled"),setTimeout(function(){s(t).is(":checked")?s(t).prop("checked",!1):s(t).prop("checked",!0)},100)):a.errorHandler(e,t)},error:function(e){a.errorHandler(e,t)}})},checkSubscription:function(t){var a=this,e={customAlerts:{email:a.email,uid:a.uid,method:"is_subscribed",wpnonce:customAlertsLocal.wpNonce||""}};a.amAddReq({type:"POST",url:"/endpoint/custom-alerts/?__fp_endpoint_custom_alerts=1",data:e,success:function(e){if(e.hasOwnProperty("data")){switch(e.data){case"normal":case"error":a.wrappers.removeClass("message");break;case"unsub":a.showAlert("DISABLED","You have opted out of receiving all news alerts. To begin receiving alerts and manage your settings, ","all").map(function(e){e.siblings("a").remove(),e.after(s("<a />",{text:"click here.",href:"#",class:""}).click(function(e){e.preventDefault(),s(this).text("please wait..."),a.manageSubscription("subscribe",function(){})}))})}void 0!==t&&t()}else a.errorHandler(e)},error:function(e){a.errorHandler(e)}})},manageSubscription:function(e,t){var a=this,e={customAlerts:{email:a.email,uid:a.uid,method:e,wpnonce:customAlertsLocal.wpNonce||""}};a.amAddReq({type:"POST",url:"/endpoint/custom-alerts/?__fp_endpoint_custom_alerts=1",data:e,success:function(e){e.hasOwnProperty("data")?a.checkSubscription(t):a.errorHandler(e)},error:function(e){a.errorHandler(e)}})},errorHandler:function(e,t){if(e.hasOwnProperty("data")&&e.data.hasOwnProperty("message")&&e.data.hasOwnProperty("code"))switch(e.data.code){case 100:case 101:case 102:case 103:case 106:case 109:case 110:case 111:case 112:this.showAlert("Error! ",e.data.message,"all");break;case 104:case 105:void 0!==t&&(s(t).parent().removeClass("loading"),s(t).removeAttr("disabled"),setTimeout(function(){s(t).is(":checked")?s(t).prop("checked",!1):s(t).prop("checked",!0)},100))}else this.showAlert("Error!","An unkown serious error has occured, please report to support@foreignpolicy.com","all")},showAlert:function(e,t,a){var r=this;if(0===e.length||0===t.length||0===a.length)return!1;switch(r.wrappers.css({display:"block"}),r.wrappers.addClass("message"),a){case"all":return Array.isArray(e)?(r.authorHeadline.text(e[0]),r.authorBody.text(t[0]),r.tagHeadline.text(e[1]),r.tagBody.text(t[1])):(r.authorHeadline.text(e),r.authorBody.text(t),r.tagHeadline.text(e),r.tagBody.text(t)),[r.authorBody,r.tagBody];case"author":return r.authorHeadline.text(e),r.authorBody.text(t),r.authorBody;case"tag":return r.tagHeadline.text(e),r.tagBody.text(t),r.tagBody}return!1},amAddReq:function(e){this.requests.push(e)},amRemoveReq:function(e){-1<s.inArray(e,self.requests)&&self.requests.splice(s.inArray(e,self.requests),1)},amRun:function(){var e,t=this;t.requests.length?(e=t.requests[0].complete,t.requests[0].complete=function(){"function"==typeof e&&e(),t.requests.shift(),t.amRun.apply(t,[])},s.ajax(t.requests[0])):t.tid=setTimeout(function(){t.amRun.apply(t,[])},1e3)},amStop:function(){this.requests=[],clearTimeout(this.tid)},propertyExists:function(e){for(var t=Array.prototype.slice.call(arguments,1),a=0;a<t.length;a++){if(!e||!e.hasOwnProperty(t[a]))return!1;e=e[t[a]]}return!0}},t=setInterval(function(){void 0!==window.pianoReady&&window.pianoReady&&(e.init(),clearInterval(t))},300)})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,;
!function($){

  var _siteHeader = $( '.site-header' );

  var _hamburgerButton = $( '.hamburger-button' );

  var _headerNavWrapper = $( '.header-nav-wrapper' );

  var _headerNavParent = $( '.-parent' );
  
  var _headerNavParentLink = $( '.-parent > a' );

  var _headerNav = $( '.header-nav-main > .header-menu > li' );
  var _headerNavAlt = $( '.chinadaily-feed .header-menu > li' );

  var _headerNavNestedMenu = $( '.header-nav-main > .header-menu .header-menu' );
  
  var _headerSubNavWrapper = $( '.header-subnav-wrapper' );/* (user welcome message, sign in/manage link, search icon) */

  var _closeNav = $( '.close-nav' );/* "Close X" button for main nav items */


  function isMobileScreen() {
    if($( window ).width() > 979) return false;
    return true;
  }

  function isHeaderAltLayout() {
    return _siteHeader.hasClass('header-alt-layout');
  }


  function mobileNav() {
    _hamburgerButton.on( 'click', function() {
      /* set elements that should not be allowed to scroll while hamburger nav is open */
      var _elsNoScroll = $('.post-content, .grid--container');
      /* nav is currently open */
      if(_headerNavWrapper.is(':visible')) {
        /* hide nav */
        _headerNavWrapper.hide();
        /* update hamburger button to three horizontal lines */
        _hamburgerButton.removeClass('mobile-nav-open');
        /* hide header subnav */
        $('.header-subnav-wrapper').show();
        /* remove open class from open parents */
        $('.header-menu-item').removeClass('open');
        /* hide any open nested lists */
        _headerNavNestedMenu.hide();
        /* show all main level nav */
        _headerNav.removeAttr('style');
        _headerNavAlt.removeAttr('style');
        /* hide option to close nested children */
        _closeNav.hide();
        /* Enable scrolling */
        $('body').removeClass('overlay-no-scroll');
        _elsNoScroll.removeClass('overlay-no-scroll').attr('style','');
        _elsNoScroll.unbind('touchmove');
      /* nav is not currently open */
      } else {
        /* show nav */
        _headerNavWrapper.show();
        /* update hamburger button to "X" */
        _hamburgerButton.addClass('mobile-nav-open');
        /* hide header subnav */
        $('.header-subnav-wrapper').hide();
        /* Disable scrolling */
        $('body').addClass('overlay-no-scroll').attr('style','');
        _elsNoScroll.addClass('overlay-no-scroll');/* TO-DO - explore this solution to prohibit scrolling - .attr('style','height:0');*/
        _elsNoScroll.on("touchmove", function(e) {
          e.preventDefault();
        });
      }

    });

    _headerNavParentLink.on( 'click', function() {
      /* this code should not be run if not on mobile and if alternate condensed/mobile layout is not in place */
      if(!isMobileScreen() && !isHeaderAltLayout()) return false;
      /* get <li> parent of <a> element clicked */
      var _this = $(this).parent();
      /* hide all other main level nav items */
      _headerNav.not(_this).fadeTo(100, 0, function(){
        $(this).fadeOut(1, function(){
          $(this).hide();
        });
      });
      setTimeout( function(){ 
        /* add class to clicked element */
        _this.addClass('open');
        /* toggle display of child <ul> element */
        _this.children('ul').fadeIn();
        /* show close nav button */
        _closeNav.css('display','block');
      }, 110);
    });

  }
  mobileNav();


  function desktopNav() {
    /* toggle display of nested nav when parent is clicked */ 
    _headerNavParentLink.on( 'click', function() {
      /* this code should not be run if on mobile or if the alternate condensed/mobile layout is in place */
      if(isMobileScreen() || isHeaderAltLayout()) return false;
      /* set variables for use below */ 
      var _this = $(this).parent();
      var _offset = _this.offset();
      var _leftOffset = _offset.left - ( parseInt($('.logo').outerWidth()) + parseInt(_siteHeader.css('padding-left')) );
      /* add class to clicked element */
      _this.addClass('open');
      /* hide all other main level nav items */
      _headerNav.not('.open').fadeTo(100, 0, function(){
        $(this).fadeOut(1, function(){
          /* retain left position before animating */ 
          _this.css({
            'margin-left': _leftOffset
          });
          /* animate left position to 0 */
          _this.animate({
            'margin-left': 0 
          }, 200, function(){
            /* show nested children of clicked nav item */
            _this.children('ul').fadeIn();
            /* show option to close nested children */
            _closeNav.css('display','block');
          });
        });
      });

    });

    /* close nested nav children */
    _closeNav.on( 'click touchstart', function(){
      /* get open nav parent */ 
      var _open = $( '.open' );
      /* hide option to close nested children */
      _closeNav.hide();
      /* hide open nav item */
      _open.fadeOut(200, function(){
        /* hide nested nav uls */
        _headerNav.children('ul').hide();
        /* hide open nav parent */
        _open.removeClass('open').removeAttr('style').css('opacity','0');
        /* show main nav */
        _headerNav.removeAttr('style').fadeTo(200, 1);
        _headerNavAlt.removeAttr('style').fadeTo(200, 1);
      });
    });

  }
  desktopNav();


  /* hide nav when sign in is clicked to avoid z-index conflict */
  $('.header-mobile-subnav .FP-paywall--login').click(function() {
    _hamburgerButton.trigger('click');
  });


  /* handle nav display changes when window is resized */
  $( window ).resize(function() {
    /* check for any parent nav items that are open */
    var navItemIsOpen = $('.-parent.open').length;
    /* enable scrolling */
    $('body').removeClass('overlay-no-scroll');
    /* manage inline styles and display settings for screen specific nav */
    /* check if user on mobile */
    if(isMobileScreen() || FP.Config.context.is_chinadaily) {
      /* hide close button */
      if(navItemIsOpen < 0) _closeNav.hide();
      /* show subnav */
      _headerSubNavWrapper.removeAttr('style').show();
      /* ensure all main level nav items display */
      _headerNav.css({'opacity':'1'});
      /* set delay, set hamburger to "close" state if it is open */
      setTimeout( function(){ 
        if(_headerNavWrapper.is(':visible')) _hamburgerButton.addClass('mobile-nav-open'); 
      }, 250);
      /* hide nav if hamburger is closed */
      if(!_hamburgerButton.hasClass('mobile-nav-open')) _headerNavWrapper.hide();
    /* user is on desktop */
    } else {
      /* remove inline styles from nested menu items to ensure they display correctly for desktop */
      $('.header-nav > .header-menu .header-menu-item .header-menu-item').removeAttr('style');
      /* parent nav items are open */
      if(navItemIsOpen > 0) {
        /* if header is not using the condensed mobile/alternate layout */
        if( !_siteHeader.hasClass('header-alt-layout') ) {
          /* hide main level menu items that are not toggled open */
          _headerNav.not('.open').css('opacity','0').hide();
          /* show nested menu items of main level menu item that is open 
          $('.header-nav > .header-menu .header-menu-item.open .header-menu-item').css({'opacity':'1', 'display':'inline-block'}); */
        }
        /* show close button */
        _closeNav.css('display','block');
        /* hide subnav */
        _headerSubNavWrapper.removeAttr('style').hide();
      /* parent nav items are not open */
      } else {
        /* parent nav items are open */
        _headerNav.removeAttr('style');
        /* hide close button */
        _closeNav.hide();
        /* show subnav  */
        _headerSubNavWrapper.removeAttr('style').show();
      }
      
      if( !_siteHeader.hasClass('header-alt-layout') ) _headerNavWrapper.show();
    }
  });


  $( window ).scroll(function() {
    /* user is not at top of page */
    if( $( window ).scrollTop() > 0 ){
      /* apply condensed mobile/alternate layout to header */
      _siteHeader.addClass('header-alt-layout');
      /* ensure all first level nav items are set to display */
      _headerNav.removeAttr('style').removeClass('open');
      /* hide open nested lists */
      _headerNavNestedMenu.hide();
      /* hide close button */
      _closeNav.hide();
    /* user is at top of page */
    } else {
      if(!_headerNavWrapper.is(':visible')) {
        /* remove condensed mobile/alternate layout from header */
        _siteHeader.removeClass('header-alt-layout');
        if(!FP.Config.context.is_chinadaily) {
          _headerNavWrapper.removeAttr('style');
          /* show subnav */
          _headerSubNavWrapper.removeAttr('style').show();
        }
      }
    }
  });

}(jQuery);
;
function external_links_in_new_windows_loop() {
	var parent = '';
	var change_link = false;
	if ( $( 'article' ).length ) {
		parent = $( 'article' );
	}
	if ( $( '.wide_copy' ).length ) {
		parent = $( '.wide_copy' );
	}
	if ( parent != '' ) {
		parent.find('a').each(function() {
			change_link = false;
			if ( $( this ).attr( 'onClick' ) == undefined ) {
				// forced if the address starts with http (or also https), but does not link to the current domain
				if ( $( this ).prop( 'href' ).indexOf( 'http' ) != -1 && $( this ).prop( 'href' ).indexOf( 'foreignpolicy.test' ) == -1  && $( this ).prop( 'href' ).indexOf( 'foreignpolicy.com' ) == -1 && $( this ).prop( 'href' ).indexOf( 'go-vip.net' ) == -1 && $( this ).prop( 'href' ).indexOf( 'fp.local' ) == -1 ) {
					change_link = true;
				}
				if( change_link == true ) {
					$( this ).attr( 'onClick', 'javascript:window.open(\''+$( this ).prop( 'href' )+'\'); return false;' );
					$( this ).attr( 'target', '' );
				}
			}
		});
	}
}
// Load
function external_links_in_new_windows_load(func)
{	
	var oldonload = window.onload;
	if ( typeof window.onload != 'function' ){
		window.onload = func;
	} else {
		window.onload = function(){
			oldonload();
			func();
		}
	}
}

external_links_in_new_windows_load(external_links_in_new_windows_loop);
;
/**
 * JS helpers for image handling
 */
! function( $ ) {
	$( '.image-attachment .image' ).on( 'load', function( e ) {
		// Remove the ::before preload animation on article images, since they incur 
 		// * a performance penalty and are no longer needed after the image loads.
		$( e.target ).parent().addClass( 'image-loaded' );
	} );

	// Hack to stop Jetpack lazy loading alert() when printing
	function removeUnloadedImagesBeforePrint() {
		// Watch for attempts to print, and remove all unloaded lazy images. 
		// Most browsers support beforeprint, Safari needs a media listener. 
		// Will double-fire if a browser supports both.
		window.addEventListener( 'beforeprint', onPrint );
		if ( window.matchMedia ) {
			window.matchMedia( 'print' ).addListener( function ( mql ) {
				if ( mql.matches ) {
					onPrint();
				}
			} );
		}

		function onPrint() {
			// Remove this for now as it removed unloaded images after the user chose to print the page
			// $( 'img.jetpack-lazy-image:not(.jetpack-lazy-image--handled)' ).remove();

			// Reassign window.alert() to stop the 'Images are still loading...'
			// Jetpack lazy loading alert from firing since images are hidden from print with CSS
			window.alert = function() {};
		}
	}
	removeUnloadedImagesBeforePrint();
}( jQuery );
;
( function( $ ){
	jQuery( document ).ready( function() {
		// Lets remove the no-js class from html - testing if js is enabled
		$( 'html' ).removeClass( 'no-js' );

		// Stop default behavior on specific links
		$( 'a.no-link' ).on( 'click', function( e ){
			e.preventDefault();
		});

		// Track specific link clicks that have "track-download" class
		// e.g. <a href="/files/test.pdf" class="track-download">link text</a>
		$( 'a.track-download' ).on( 'click', function( e ){
			var url_string = $(this).attr('href');
			if(typeof url_string !== typeof undefined && url_string !== false) {
				var url_array = url_string.split('/');
				dataLayer.push({
					'event':'dl_event',
					'event_category':'download',
					'event_action':'click',
					'event_label':url_array[ url_array.length - 1 ],
					'event_value':''
				});
			}
		});

		// Handle fluid video resizing for YouTube and Vimeo
		var $allVideos = $(".post-content iframe[src^='//player.vimeo.com'], .post-content iframe[src^='http://www.youtube.com']");

		// Figure out and save aspect ratio for each video and remove the hardcoded width and height
		$allVideos.each(function() {
			$(this)
			.data('aspectRatio', this.height / this.width)
			.removeAttr('height')
			.removeAttr('width');
		});

		// When the window is resized, resize videos
		$(window).resize(function() {
			var newWidth = $('body').width();
			if ( newWidth > 1180 )
				newWidth = 700;
			else if ( newWidth >= 925 && newWidth <= 1180 )
				newWidth = 530;
			else if ( newWidth < 925 && newWidth > 768 )
				newWidth = 670;
			else
				newWidth = newWidth - 10;
			// Resize all videos according to their own aspect ratio
			$allVideos.each(function() {
				var $el = $(this);
				$el
				  .width(newWidth)
				  .height(newWidth * $el.data('aspectRatio'));
			});
		}).resize();

		// Function to go through each iframe and set a width and height which is called below
		function fpResponsiveIframes( target ) {
			var parentWidth = target.parent().width();
			var iframeHeigh = parentWidth * 0.56;
			target.attr( 'width', parentWidth ).attr( 'height', iframeHeigh );
		}

		// This will fire on load
		$( '.single article > p iframe' ).each( function() {
			fpResponsiveIframes( $( this ) );
		});

		// This will fire on window resize
		$( window ).resize( function() {
			$( '.single article > p iframe' ).each( function() {
				fpResponsiveIframes( $( this ) );
			});
		});
		// end iframe sizing

		/**
		 * Printing hack to accommodate `window.print` conflicting
		 * with Livefyre's long-polling. So far this has only been
		 * spotted in WebKit - hence the browser sniffing
		 */
		$(document).on('click', '.print', function(){
			// class handling for printing only the article intended
			var noPrintClassname = 'js-no-print';
			var postContent = $('.post-content').addClass(noPrintClassname);
			$(this).closest('.post-content').removeClass(noPrintClassname);

			// if webkit (namely safari), we want to avoid the print
			// dialog delay caused by conflicts with ajax requests
			if ($.browser.webkit) {
				// no livefyre widget, so use reload workaround to kill
				// requests and prompt dialog before actual reload (bad
				// experience)
				if (undefined === window.livefyreWidgets) {
					window.print();
					window.location.reload();
					return;
				}
			}

			window.print();
			postContent.removeClass(noPrintClassname);
		});

	} );
	$(document).bind('wapoLogout', function(){
	  //Clearing olivesoftware cookie to log out of archives
	  var url = 'https://digital.olivesoftware.com/Olive/APA/ForeignPolicy/logout.html';
	  $('<iframe>', {
   		  src: url,
   		  id:  'oliveFrame',
   		  frameborder: 0,
   		  scrolling: 'no',
   		  width: 0,
   		  height: 0
   	  }).appendTo('body');
   	  setTimeout(function() {
        $('#oliveFrame').remove();
      }, 2000);
	});
})( jQuery );;
"use strict";

/*! cash-dom 1.3.5, https://github.com/kenwheeler/cash @license MIT */
;(function (root, factory) {
  if (typeof define === "function" && define.amd) {
    define(factory);
  } else if (typeof exports !== "undefined") {
    module.exports = factory();
  } else {
    root.cash = root.$ = factory();
  }
})(this, function () {
  var doc = document, win = window, ArrayProto = Array.prototype, slice = ArrayProto.slice, filter = ArrayProto.filter, push = ArrayProto.push;

  var noop = function () {}, isFunction = function (item) {
    // @see https://crbug.com/568448
    return typeof item === typeof noop && item.call;
  }, isString = function (item) {
    return typeof item === typeof "";
  };

  var idMatch = /^#[\w-]*$/, classMatch = /^\.[\w-]*$/, htmlMatch = /<.+>/, singlet = /^\w+$/;

  function find(selector, context) {
    context = context || doc;
    var elems = (classMatch.test(selector) ? context.getElementsByClassName(selector.slice(1)) : singlet.test(selector) ? context.getElementsByTagName(selector) : context.querySelectorAll(selector));
    return elems;
  }

  var frag;
  function parseHTML(str) {
    if (!frag) {
      frag = doc.implementation.createHTMLDocument();
      var base = frag.createElement("base");
      base.href = doc.location.href;
      frag.head.appendChild(base);
    }

    frag.body.innerHTML = str;

    return frag.body.childNodes;
  }

  function onReady(fn) {
    if (doc.readyState !== "loading") {
      fn();
    } else {
      doc.addEventListener("DOMContentLoaded", fn);
    }
  }

  function Init(selector, context) {
    if (!selector) {
      return this;
    }

    // If already a cash collection, don't do any further processing
    if (selector.cash && selector !== win) {
      return selector;
    }

    var elems = selector, i = 0, length;

    if (isString(selector)) {
      elems = (idMatch.test(selector) ?
      // If an ID use the faster getElementById check
      doc.getElementById(selector.slice(1)) : htmlMatch.test(selector) ?
      // If HTML, parse it into real elements
      parseHTML(selector) :
      // else use `find`
      find(selector, context));

      // If function, use as shortcut for DOM ready
    } else if (isFunction(selector)) {
      onReady(selector);return this;
    }

    if (!elems) {
      return this;
    }

    // If a single DOM element is passed in or received via ID, return the single element
    if (elems.nodeType || elems === win) {
      this[0] = elems;
      this.length = 1;
    } else {
      // Treat like an array and loop through each item.
      length = this.length = elems.length;
      for (; i < length; i++) {
        this[i] = elems[i];
      }
    }

    return this;
  }

  function cash(selector, context) {
    return new Init(selector, context);
  }

  var fn = cash.fn = cash.prototype = Init.prototype = { // jshint ignore:line
    cash: true,
    length: 0,
    push: push,
    splice: ArrayProto.splice,
    map: ArrayProto.map,
    init: Init
  };

  Object.defineProperty(fn, "constructor", { value: cash });

  cash.parseHTML = parseHTML;
  cash.noop = noop;
  cash.isFunction = isFunction;
  cash.isString = isString;

  cash.extend = fn.extend = function (target) {
    target = target || {};

    var args = slice.call(arguments), length = args.length, i = 1;

    if (args.length === 1) {
      target = this;
      i = 0;
    }

    for (; i < length; i++) {
      if (!args[i]) {
        continue;
      }
      for (var key in args[i]) {
        if (args[i].hasOwnProperty(key)) {
          target[key] = args[i][key];
        }
      }
    }

    return target;
  };

  function each(collection, callback) {
    var l = collection.length, i = 0;

    for (; i < l; i++) {
      if (callback.call(collection[i], collection[i], i, collection) === false) {
        break;
      }
    }
  }

  function matches(el, selector) {
    var m = el && (el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector);
    return !!m && m.call(el, selector);
  }

  function getCompareFunction(selector) {
    return (
    /* Use browser's `matches` function if string */
    isString(selector) ? matches :
    /* Match a cash element */
    selector.cash ? function (el) {
      return selector.is(el);
    } :
    /* Direct comparison */
    function (el, selector) {
      return el === selector;
    });
  }

  function unique(collection) {
    return cash(slice.call(collection).filter(function (item, index, self) {
      return self.indexOf(item) === index;
    }));
  }

  cash.extend({
    merge: function (first, second) {
      var len = +second.length, i = first.length, j = 0;

      for (; j < len; i++, j++) {
        first[i] = second[j];
      }

      first.length = i;
      return first;
    },

    each: each,
    matches: matches,
    unique: unique,
    isArray: Array.isArray,
    isNumeric: function (n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    }

  });

  var uid = cash.uid = "_cash" + Date.now();

  function getDataCache(node) {
    return (node[uid] = node[uid] || {});
  }

  function setData(node, key, value) {
    return (getDataCache(node)[key] = value);
  }

  function getData(node, key) {
    var c = getDataCache(node);
    if (c[key] === undefined) {
      c[key] = node.dataset ? node.dataset[key] : cash(node).attr("data-" + key);
    }
    return c[key];
  }

  function removeData(node, key) {
    var c = getDataCache(node);
    if (c) {
      delete c[key];
    } else if (node.dataset) {
      delete node.dataset[key];
    } else {
      cash(node).removeAttr("data-" + name);
    }
  }

  fn.extend({
    data: function (name, value) {
      if (isString(name)) {
        return (value === undefined ? getData(this[0], name) : this.each(function (v) {
          return setData(v, name, value);
        }));
      }

      for (var key in name) {
        this.data(key, name[key]);
      }

      return this;
    },

    removeData: function (key) {
      return this.each(function (v) {
        return removeData(v, key);
      });
    }

  });

  var notWhiteMatch = /\S+/g;

  function getClasses(c) {
    return isString(c) && c.match(notWhiteMatch);
  }

  function hasClass(v, c) {
    return (v.classList ? v.classList.contains(c) : new RegExp("(^| )" + c + "( |$)", "gi").test(v.className));
  }

  function addClass(v, c, spacedName) {
    if (v.classList) {
      v.classList.add(c);
    } else if (spacedName.indexOf(" " + c + " ")) {
      v.className += " " + c;
    }
  }

  function removeClass(v, c) {
    if (v.classList) {
      v.classList.remove(c);
    } else {
      v.className = v.className.replace(c, "");
    }
  }

  fn.extend({
    addClass: function (c) {
      var classes = getClasses(c);

      return (classes ? this.each(function (v) {
        var spacedName = " " + v.className + " ";
        each(classes, function (c) {
          addClass(v, c, spacedName);
        });
      }) : this);
    },

    attr: function (name, value) {
      if (!name) {
        return undefined;
      }

      if (isString(name)) {
        if (value === undefined) {
          return this[0] ? this[0].getAttribute ? this[0].getAttribute(name) : this[0][name] : undefined;
        }

        return this.each(function (v) {
          if (v.setAttribute) {
            v.setAttribute(name, value);
          } else {
            v[name] = value;
          }
        });
      }

      for (var key in name) {
        this.attr(key, name[key]);
      }

      return this;
    },

    hasClass: function (c) {
      var check = false, classes = getClasses(c);
      if (classes && classes.length) {
        this.each(function (v) {
          check = hasClass(v, classes[0]);
          return !check;
        });
      }
      return check;
    },

    prop: function (name, value) {
      if (isString(name)) {
        return (value === undefined ? this[0][name] : this.each(function (v) {
          v[name] = value;
        }));
      }

      for (var key in name) {
        this.prop(key, name[key]);
      }

      return this;
    },

    removeAttr: function (name) {
      return this.each(function (v) {
        if (v.removeAttribute) {
          v.removeAttribute(name);
        } else {
          delete v[name];
        }
      });
    },

    removeClass: function (c) {
      if (!arguments.length) {
        return this.attr("class", "");
      }
      var classes = getClasses(c);
      return (classes ? this.each(function (v) {
        each(classes, function (c) {
          removeClass(v, c);
        });
      }) : this);
    },

    removeProp: function (name) {
      return this.each(function (v) {
        delete v[name];
      });
    },

    toggleClass: function (c, state) {
      if (state !== undefined) {
        return this[state ? "addClass" : "removeClass"](c);
      }
      var classes = getClasses(c);
      return (classes ? this.each(function (v) {
        var spacedName = " " + v.className + " ";
        each(classes, function (c) {
          if (hasClass(v, c)) {
            removeClass(v, c);
          } else {
            addClass(v, c, spacedName);
          }
        });
      }) : this);
    } });

  fn.extend({
    add: function (selector, context) {
      return unique(cash.merge(this, cash(selector, context)));
    },

    each: function (callback) {
      each(this, callback);
      return this;
    },

    eq: function (index) {
      return cash(this.get(index));
    },

    filter: function (selector) {
      if (!selector) {
        return this;
      }

      var comparator = (isFunction(selector) ? selector : getCompareFunction(selector));

      return cash(filter.call(this, function (e) {
        return comparator(e, selector);
      }));
    },

    first: function () {
      return this.eq(0);
    },

    get: function (index) {
      if (index === undefined) {
        return slice.call(this);
      }
      return (index < 0 ? this[index + this.length] : this[index]);
    },

    index: function (elem) {
      var child = elem ? cash(elem)[0] : this[0], collection = elem ? this : cash(child).parent().children();
      return slice.call(collection).indexOf(child);
    },

    last: function () {
      return this.eq(-1);
    }

  });

  var camelCase = (function () {
    var camelRegex = /(?:^\w|[A-Z]|\b\w)/g, whiteSpace = /[\s-_]+/g;
    return function (str) {
      return str.replace(camelRegex, function (letter, index) {
        return letter[index === 0 ? "toLowerCase" : "toUpperCase"]();
      }).replace(whiteSpace, "");
    };
  }());

  var getPrefixedProp = (function () {
    var cache = {}, doc = document, div = doc.createElement("div"), style = div.style;

    return function (prop) {
      prop = camelCase(prop);
      if (cache[prop]) {
        return cache[prop];
      }

      var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1), prefixes = ["webkit", "moz", "ms", "o"], props = (prop + " " + (prefixes).join(ucProp + " ") + ucProp).split(" ");

      each(props, function (p) {
        if (p in style) {
          cache[p] = prop = cache[prop] = p;
          return false;
        }
      });

      return cache[prop];
    };
  }());

  cash.prefixedProp = getPrefixedProp;
  cash.camelCase = camelCase;

  fn.extend({
    css: function (prop, value) {
      if (isString(prop)) {
        prop = getPrefixedProp(prop);
        return (arguments.length > 1 ? this.each(function (v) {
          return v.style[prop] = value;
        }) : win.getComputedStyle(this[0])[prop]);
      }

      for (var key in prop) {
        this.css(key, prop[key]);
      }

      return this;
    }

  });

  function compute(el, prop) {
    return parseInt(win.getComputedStyle(el[0], null)[prop], 10) || 0;
  }

  each(["Width", "Height"], function (v) {
    var lower = v.toLowerCase();

    fn[lower] = function () {
      return this[0].getBoundingClientRect()[lower];
    };

    fn["inner" + v] = function () {
      return this[0]["client" + v];
    };

    fn["outer" + v] = function (margins) {
      return this[0]["offset" + v] + (margins ? compute(this, "margin" + (v === "Width" ? "Left" : "Top")) + compute(this, "margin" + (v === "Width" ? "Right" : "Bottom")) : 0);
    };
  });

  function registerEvent(node, eventName, callback) {
    var eventCache = getData(node, "_cashEvents") || setData(node, "_cashEvents", {});
    eventCache[eventName] = eventCache[eventName] || [];
    eventCache[eventName].push(callback);
    node.addEventListener(eventName, callback);
  }

  function removeEvent(node, eventName, callback) {
    var events = getData(node, "_cashEvents"), eventCache = (events && events[eventName]), index;

    if (!eventCache) {
      return;
    }

    if (callback) {
      node.removeEventListener(eventName, callback);
      index = eventCache.indexOf(callback);
      if (index >= 0) {
        eventCache.splice(index, 1);
      }
    } else {
      each(eventCache, function (event) {
        node.removeEventListener(eventName, event);
      });
      eventCache = [];
    }
  }

  fn.extend({
    off: function (eventName, callback) {
      return this.each(function (v) {
        return removeEvent(v, eventName, callback);
      });
    },

    on: function (eventName, delegate, callback, runOnce) {
      // jshint ignore:line

      var originalCallback;

      if (!isString(eventName)) {
        for (var key in eventName) {
          this.on(key, delegate, eventName[key]);
        }
        return this;
      }

      if (isFunction(delegate)) {
        callback = delegate;
        delegate = null;
      }

      if (eventName === "ready") {
        onReady(callback);
        return this;
      }

      if (delegate) {
        originalCallback = callback;
        callback = function (e) {
          var t = e.target;

          while (!matches(t, delegate)) {
            if (t === this) {
              return (t = false);
            }
            t = t.parentNode;
          }

          if (t) {
            originalCallback.call(t, e);
          }
        };
      }

      return this.each(function (v) {
        var finalCallback = callback;
        if (runOnce) {
          finalCallback = function () {
            callback.apply(this, arguments);
            removeEvent(v, eventName, finalCallback);
          };
        }
        registerEvent(v, eventName, finalCallback);
      });
    },

    one: function (eventName, delegate, callback) {
      return this.on(eventName, delegate, callback, true);
    },

    ready: onReady,

    trigger: function (eventName, data) {
      var evt = doc.createEvent("HTMLEvents");
      evt.data = data;
      evt.initEvent(eventName, true, false);
      return this.each(function (v) {
        return v.dispatchEvent(evt);
      });
    }

  });

  function encode(name, value) {
    return "&" + encodeURIComponent(name) + "=" + encodeURIComponent(value).replace(/%20/g, "+");
  }

  function getSelectMultiple_(el) {
    var values = [];
    each(el.options, function (o) {
      if (o.selected) {
        values.push(o.value);
      }
    });
    return values.length ? values : null;
  }

  function getSelectSingle_(el) {
    var selectedIndex = el.selectedIndex;
    return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
  }

  function getValue(el) {
    var type = el.type;
    if (!type) {
      return null;
    }
    switch (type.toLowerCase()) {
      case "select-one":
        return getSelectSingle_(el);
      case "select-multiple":
        return getSelectMultiple_(el);
      case "radio":
        return (el.checked) ? el.value : null;
      case "checkbox":
        return (el.checked) ? el.value : null;
      default:
        return el.value ? el.value : null;
    }
  }

  fn.extend({
    serialize: function () {
      var query = "";

      each(this[0].elements || this, function (el) {
        if (el.disabled || el.tagName === "FIELDSET") {
          return;
        }
        var name = el.name;
        switch (el.type.toLowerCase()) {
          case "file":
          case "reset":
          case "submit":
          case "button":
            break;
          case "select-multiple":
            var values = getValue(el);
            if (values !== null) {
              each(values, function (value) {
                query += encode(name, value);
              });
            }
            break;
          default:
            var value = getValue(el);
            if (value !== null) {
              query += encode(name, value);
            }
        }
      });

      return query.substr(1);
    },

    val: function (value) {
      if (value === undefined) {
        return getValue(this[0]);
      } else {
        return this.each(function (v) {
          return v.value = value;
        });
      }
    }

  });

  function insertElement(el, child, prepend) {
    if (prepend) {
      var first = el.childNodes[0];
      el.insertBefore(child, first);
    } else {
      el.appendChild(child);
    }
  }

  function insertContent(parent, child, prepend) {
    var str = isString(child);

    if (!str && child.length) {
      each(child, function (v) {
        return insertContent(parent, v, prepend);
      });
      return;
    }

    each(parent, str ? function (v) {
      return v.insertAdjacentHTML(prepend ? "afterbegin" : "beforeend", child);
    } : function (v, i) {
      return insertElement(v, (i === 0 ? child : child.cloneNode(true)), prepend);
    });
  }

  fn.extend({
    after: function (selector) {
      cash(selector).insertAfter(this);
      return this;
    },

    append: function (content) {
      insertContent(this, content);
      return this;
    },

    appendTo: function (parent) {
      insertContent(cash(parent), this);
      return this;
    },

    before: function (selector) {
      cash(selector).insertBefore(this);
      return this;
    },

    clone: function () {
      return cash(this.map(function (v) {
        return v.cloneNode(true);
      }));
    },

    empty: function () {
      this.html("");
      return this;
    },

    html: function (content) {
      if (content === undefined) {
        return this[0].innerHTML;
      }
      var source = (content.nodeType ? content[0].outerHTML : content);
      return this.each(function (v) {
        return v.innerHTML = source;
      });
    },

    insertAfter: function (selector) {
      var _this = this;


      cash(selector).each(function (el, i) {
        var parent = el.parentNode, sibling = el.nextSibling;
        _this.each(function (v) {
          parent.insertBefore((i === 0 ? v : v.cloneNode(true)), sibling);
        });
      });

      return this;
    },

    insertBefore: function (selector) {
      var _this2 = this;
      cash(selector).each(function (el, i) {
        var parent = el.parentNode;
        _this2.each(function (v) {
          parent.insertBefore((i === 0 ? v : v.cloneNode(true)), el);
        });
      });
      return this;
    },

    prepend: function (content) {
      insertContent(this, content, true);
      return this;
    },

    prependTo: function (parent) {
      insertContent(cash(parent), this, true);
      return this;
    },

    remove: function () {
      return this.each(function (v) {
        return v.parentNode.removeChild(v);
      });
    },

    text: function (content) {
      if (content === undefined) {
        return this[0].textContent;
      }
      return this.each(function (v) {
        return v.textContent = content;
      });
    }

  });

  var docEl = doc.documentElement;

  fn.extend({
    position: function () {
      var el = this[0];
      return {
        left: el.offsetLeft,
        top: el.offsetTop
      };
    },

    offset: function () {
      var rect = this[0].getBoundingClientRect();
      return {
        top: rect.top + win.pageYOffset - docEl.clientTop,
        left: rect.left + win.pageXOffset - docEl.clientLeft
      };
    },

    offsetParent: function () {
      return cash(this[0].offsetParent);
    }

  });

  fn.extend({
    children: function (selector) {
      var elems = [];
      this.each(function (el) {
        push.apply(elems, el.children);
      });
      elems = unique(elems);

      return (!selector ? elems : elems.filter(function (v) {
        return matches(v, selector);
      }));
    },

    closest: function (selector) {
      if (!selector || this.length < 1) {
        return cash();
      }
      if (this.is(selector)) {
        return this.filter(selector);
      }
      return this.parent().closest(selector);
    },

    is: function (selector) {
      if (!selector) {
        return false;
      }

      var match = false, comparator = getCompareFunction(selector);

      this.each(function (el) {
        match = comparator(el, selector);
        return !match;
      });

      return match;
    },

    find: function (selector) {
      if (!selector || selector.nodeType) {
        return cash(selector && this.has(selector).length ? selector : null);
      }

      var elems = [];
      this.each(function (el) {
        push.apply(elems, find(selector, el));
      });

      return unique(elems);
    },

    has: function (selector) {
      var comparator = (isString(selector) ? function (el) {
        return find(selector, el).length !== 0;
      } : function (el) {
        return el.contains(selector);
      });

      return this.filter(comparator);
    },

    next: function () {
      return cash(this[0].nextElementSibling);
    },

    not: function (selector) {
      if (!selector) {
        return this;
      }

      var comparator = getCompareFunction(selector);

      return this.filter(function (el) {
        return !comparator(el, selector);
      });
    },

    parent: function () {
      var result = [];

      this.each(function (item) {
        if (item && item.parentNode) {
          result.push(item.parentNode);
        }
      });

      return unique(result);
    },

    parents: function (selector) {
      var last, result = [];

      this.each(function (item) {
        last = item;

        while (last && last.parentNode && last !== doc.body.parentNode) {
          last = last.parentNode;

          if (!selector || (selector && matches(last, selector))) {
            result.push(last);
          }
        }
      });

      return unique(result);
    },

    prev: function () {
      return cash(this[0].previousElementSibling);
    },

    siblings: function () {
      var collection = this.parent().children(), el = this[0];

      return collection.filter(function (i) {
        return i !== el;
      });
    }

  });


  return cash;
});

;
//** Small wrapper for using local storage *
!function(){
  var noop = function(){};

  //~ Global namespace
  window._ForeignPolicy_ = window._ForeignPolicy_ || {};

  window._ForeignPolicy_.localdata = {};

  //~ GET
  window._ForeignPolicy_.localdata.get = (window.localStorage && localStorage.getItem)
    ? function(key){
      return localStorage.getItem(key);
    }
    : noop;

  //~ SET
  window._ForeignPolicy_.localdata.set = (window.localStorage && localStorage.setItem)
    ? function(key, val){
      localStorage.setItem(key, val);
    }
    : noop;

  //~ DEL
  window._ForeignPolicy_.localdata.del = (window.localStorage && localStorage.removeItem)
    ? function(key){
      localStorage.removeItem(key);
    }
    : noop;
}();
;
// This is lifted from the FP Drupal JS stack as it's a dependency for the identity and livefyre scripts.

var utils = (function($){

  /**
   * Helpers
   *
   * `toString` does not implement a `call` method natively
   * in IE
   */

  var toString = ({}).toString;

  /**
   * Very simple templating function
   */

  var template = (function(){

    /**
     * Constants
     */

    var NO_MATCH = '';

    /**
     * Simple string replacement token (e.g., {{ url }})
     */

    var token = /\{\{ *(\w+) *\}\}/g;

    /**
     * Return a function that can obtain a template using jQ
     * selectors
     */

    return function(HTMLString){

      /**
       * First obtain the template and get its HTML
       *
       * Note: `$.trim` must be called to avoid a newline
       * error when creating a jQ object from an HTML
       * string
       */

      HTMLString = $.trim(HTMLString);

      /**
       * Simple helper function for string replacement
       */

      var interpolate = function(values) {

        /**
         * E.g., match = {{url}}, submatch = url
         */

        return HTMLString.replace(token, function(match, submatch){

          return (submatch in values ? values[submatch] : NO_MATCH);

        });

      };

      /**
       * Return a function that can perform simple string
       * replacement
       *
       * If an array is provided, it assumed it is an array
       * of objects using the same template
       */

      return function(values){

        var buffer, index, length;

        if ('[object Array]' !== toString.call(values)) {

          return interpolate(values);

        }

        buffer = '';

        index  = 0;

        length = values.length;

        while (index < length) {

          buffer += interpolate(values[index++]);

        }

        return buffer;

      }

    };

  })();


  /**
   * Simple sharing function
   *
   * Useful for directly embedding into the
   * `onclick` attribute
   */

  var share = (function(){

    /**
     * Just a shorthand alias
     */

    var esc = encodeURIComponent;

    /**
     * Predefined share URLs
     *
     * Uses the templating utility function
     * for string replacement
     */

    var redirectUri;
    if (window.fpUtilsLoc && window.fpUtilsLoc.redirectUri) {
      redirectUri = window.fpUtilsLoc.redirectUri;
    } else {
      redirectUri = 'https://foreignpolicy.com/share_redirect/';
    }

    var endpoints = {

      twitter      : template('https://twitter.com/intent/tweet?text={{text}}&url={{url}}'),
      facebook     : template('https://www.facebook.com/dialog/share?app_id=373958131177192&display=popup&href={{url}}&redirect_uri=' + esc(redirectUri)),
      google       : template('https://plus.google.com/share?url={{url}}'),
      'google-plus': template('https://plus.google.com/share?url={{url}}'),
      //~ NOTE: https://developer.linkedin.com/docs/share-on-linkedin
      linkedin     : template('https://www.linkedin.com/shareArticle?url={{url}}&mini=true&title={{title}}&summary={{text}}'),
      reddit       : template('http://www.reddit.com/submit?url={{url}}')

    };

    /**
     * Actual sharing function
     *
     * Opens a new window. Expects to be passed the
     * context of the sharing (i.e., `this`) so it
     * can obtain some `data-` values
     */

    return function(context){

      context = $(context);

      var endpoint = endpoints[context.data('endpoint')];

      if (!endpoint) return;

      var url = $.trim(context.data('url')) || 'https://foreignpolicy.com';

      //~ The updated Facebook share API seems to require https to match the
      //~ og:url, which is https
      //
      //~ Similar logic for testing LinkedIn shares...
      if ('facebook' === context.data('endpoint') || 'linkedin' === context.data('endpoint')) {
        url = url.replace('http://', 'https://');
        if (window.fpUtilsLoc && window.fpUtilsLoc.isDev) {
          url = url.replace(/\/\/(dev|sandbox|stg\d{2})\./, '//');
        }
      }

      var data = {

        title : esc(context.data('title') || 'Foreign Policy'),
        text  : esc(context.data('text')  || context.data('title') || 'Check this story out at ForeignPolicy.com!'),
        url   : esc(url)

      };

      window.open(endpoint(data), 'Share', 'toolbar=0, status=0, width=900, height=500');

    };

  })();


  /**
   * Print wrap function in case 
   * browser specific printing JS 
   * is required
   */

  var printer = function(){
    window.print();
  };


  return {

    template          : template,
    share             : share,
    printer           : printer

  };

})(jQuery);
;
/**
 * Cookie message for GDPR
 */

;(function(w, d, $, utils, _FP){

  /**
   * jQuery elements
   */

  var doc  = $(d)
    , body = $(d.body)
    , sticky_container = $('.sticky_content');

  /**
   * Cookie message
   */

  var htmlInfo = (
    '<div class="sticky_message cookie_message">' + 
    '<span class="cookie_message_close counter_close"><img draggable="false" class="emoji" alt="❌" src="https://www.foreignpolicy.com/wp-content/themes/foreign-policy-2017/assets/src/images/icons/close-white.svg" /></span>' +
    '<p>By using this website, you agree to our use of cookies. This use includes personalization of content and ads, and traffic analytics. Review our <a href="/privacy/">Privacy Policy</a> for more information.</p>' + 
    '</div>'
  )
    , infoTpl  = utils.template(htmlInfo);


  /**
   * Show cookie message
   */

  function show(e) {

    // If message has been seen and closed by user, exit
    if ( 'fp_cookie_message_acknowledged' === _FP.localdata.get('fp_cookie_message') ) {
      return;
    }

    // Show cookie message if it doesn't already appear in DOM
    if( $('.cookie_message').length < 1 ) {
      sticky_container.append( infoTpl() ).addClass('cookie_message_displayed');
      addFooterPadding();
      doc.on('click touchstart', '.cookie_message .cookie_message_close', hideMessage);
    }

  }
  show();


  /**
   * Add padding to footer to account for sticky message
   */
   function addFooterPadding() {
    var stickyHeight = sticky_container.outerHeight();
    if( stickyHeight < 1 ) stickyHeight = '1em';
    $('.site-footer').css( 'padding-bottom', stickyHeight );
   }


  /**
   * Hide the cookie message
   */

  function hideMessage() {
    //~ Save local storage/cookie for takeover view
    _FP.localdata.set('fp_cookie_message', 'fp_cookie_message_acknowledged');
    $('.cookie_message').hide();
    addFooterPadding();
  }


})(window, document, jQuery, utils, _ForeignPolicy_);
;
//~ Hack for links the proxy does not adjust
!function($){
  $(document).on('pianoAccessCheckComplete', function () {
    tp = window.tp || [];
    //~ Data is not ready
    if(typeof FP.Singletons.UserAltAccess === 'undefined') {
      return
    }
    //~ Does not apply to normal proxy access
    if (!FP.Singletons.UserAltAccess.isIPAccess || 'proxy_hosts' !== FP.Singletons.UserAltAccess.ipAccessData.access_type) {
      return;
    }
    $(document).on('click', 'a', function(e){
      var refLink = null;
      if (/^trc\.taboola\.com/) {
        var search = this.search.split('&');
        for (var i = 0, len = search.length; i < len; i++) {
          var query = search[i];
          if ('url=' === query.substr(0, 4)) {
            refLink = decodeURIComponent(query.substr(4));
            break;
          }
        }
      }
      var a;
      if (null === refLink) {
        a = this;
      } else {
        a = document.createElement('a');
        a.href = refLink;
      }
      //~ If it's not an internal link, not our problem
      if (!/^(www\.)?foreignpolicy.com$/.test(a.hostname)) {
        return;
      }
      //~ Stop the internal link
      e.preventDefault();
      document.location = (
        document.location.protocol + '//' +
        document.location.host +
        a.pathname +
        a.search +
        a.hash
      );
    });
  });
}(jQuery);
;
/*!
 * jQuery Cookie Plugin v1.3.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function (factory) {
	if (typeof define === 'function' && define.amd) {
		// AMD. Register as anonymous module.
		define(['jquery'], factory);
	} else {
		// Browser globals.
		factory(jQuery);
	}
}(function ($) {

	var pluses = /\+/g;

	function decode(s) {
		if (config.raw) {
			return s;
		}
		try {
			// If we can't decode the cookie, ignore it, it's unusable.
			return decodeURIComponent(s.replace(pluses, ' '));
		} catch(e) {}
	}

	function decodeAndParse(s) {
		if (s.indexOf('"') === 0) {
			// This is a quoted cookie as according to RFC2068, unescape...
			s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
		}

		s = decode(s);

		try {
			// If we can't parse the cookie, ignore it, it's unusable.
			return config.json ? JSON.parse(s) : s;
		} catch(e) {}
	}

	var config = $.cookie = function (key, value, options) {

		// Write
		if (value !== undefined) {
			options = $.extend({}, config.defaults, options);

			if (typeof options.expires === 'number') {
				var days = options.expires, t = options.expires = new Date();
				t.setDate(t.getDate() + days);
			}

			value = config.json ? JSON.stringify(value) : String(value);

			return (document.cookie = [
				config.raw ? key : encodeURIComponent(key),
				'=',
				config.raw ? value : encodeURIComponent(value),
				options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
				options.path    ? '; path=' + options.path : '',
				options.domain  ? '; domain=' + options.domain : '',
				options.secure  ? '; secure' : ''
			].join(''));
		}

		// Read

		var result = key ? undefined : {};

		// To prevent the for loop in the first place assign an empty array
		// in case there are no cookies at all. Also prevents odd result when
		// calling $.cookie().
		var cookies = document.cookie ? document.cookie.split('; ') : [];

		for (var i = 0, l = cookies.length; i < l; i++) {
			var parts = cookies[i].split('=');
			var name = decode(parts.shift());
			var cookie = parts.join('=');

			if (key && key === name) {
				result = decodeAndParse(cookie);
				break;
			}

			// Prevent storing a cookie that we couldn't decode.
			if (!key && (cookie = decodeAndParse(cookie)) !== undefined) {
				result[name] = cookie;
			}
		}

		return result;
	};

	config.defaults = {};

	$.removeCookie = function (key, options) {
		if ($.cookie(key) !== undefined) {
			// Must not alter options, thus extending a fresh object...
			$.cookie(key, '', $.extend({}, options, { expires: -1 }));
			return true;
		}
		return false;
	};

}));
;
/**
 * Helpers for promises
 */
!function () {
  //=NS
  FP.Utils = FP.Utils || {};

  FP.Utils.promise = {
    /**
     * Promise executor wrapper for promises that only need to be run once (e.g.,
     * We only want to hit the IP access endpoint once, but the function itself
     * may be used in several locations)
     *
     * ```javascript
     * var p = FP.Utils.promise.once(function (resolve, reject) {
     *   console.log('Doing work!');
     *   setTimeout(function () {
     *     resolve('Hello world');
     *   }, 2e3);
     * });
     *
     * p().then(message => console.log('1:', message));
     * p().then(message => console.log('2:', message));
     * p().then(message => console.log('3:', message));
     *
     * // NOTE: 'Doing work!' is only logged once
     * // LOG=> Doing work!
     * // ...~2 seconds later...
     * // LOG=> 1: Hello world
     * // LOG=> 2: Hello world
     * // LOG=> 3: Hello world
     * ```
     *
     * @param {Function} executor Promise function w/ resolve/reject arguments
     *
     * @return {Promise}
     */
    once: function (executor) {
      var promise;
      return function () {
        return promise || (promise = new Promise(executor));
      };
    }
  };
}();
;
!function () {
  //=NS
  FP.Utils = FP.Utils || {};

  FP.Utils.string = {
    /**
     * Tiny helper for number based formatting in JavaScript strings
     *
     * E.g.,
     * ```
     * FP.Utils.string.format('Message: {0} {1}', 'Hello', 'World');
     * // 'Message: Hello World'
     * ```
     *
     * @param {String} format
     *
     * @return {String}
     */
    format: function (format) {
      var args = Array.prototype.slice.call(arguments, 1);
      return format.replace(/{(\d+)}/g, function (match, index) {
        return undefined === args[index] ? match : args[index];
      });
    }
  };
}();
;
/**
 * Helpers for urls
 */
!function () {
    //=NS
    FP.Utils = FP.Utils || {};

    FP.Utils.url = {
        /** 
         * Helper to parse URL
         */
        getUrlParameter: function(sParam) {
            var sPageURL = window.location.search.substring(1).toLowerCase();
            var sURLVariables = sPageURL.split("&");
            var ret = "not found";
            for (var i = 0; i < sURLVariables.length; i++) {
                var sParameterName = sURLVariables[i].split("=");
                if (sParameterName[0] == sParam) {
                    ret = sParameterName[1];
                }
            }
            return ret;
        }
    }
}();;
!function ($) {
  //=NS
  FP.Utils = FP.Utils || {};

  FP.Utils.stickyHeader = {
    /**
     * Helper for sticky headers
     */
    stickyHeadersAreSet : false,
    className : '.sticky-header',

    init: function() {
      FP.Utils.stickyHeader.setStickyHeaders(FP.Utils.stickyHeader.className);
    },

    setStickyHeaders: function( className ) { 
      $(window).scroll( function() {
        if( $(window).scrollTop() < 100 ) return;

        if( !FP.Utils.stickyHeader.stickyHeadersAreSet ) {
          if( $( className ).length ) {
            $( className ).each(function(index, el) {
              var stickyDate = $(el);
              stickyDate.css({ 'top': FP.Utils.stickyHeader.calculateTop() + 'px' });
              FP.Utils.stickyHeader.stickyHeadersAreSet = true;
            });
          }
        }
      });
    },

    calculateTop: function() {
      var navBar     = $('header.site-header');
      var wpAdminBar = $('#wpadminbar');
      var topOffset  = 0;

      // Adjust for navbar
      if ( navBar.length && navBar.is(':visible') ) {
        topOffset += navBar.innerHeight();
      }

      // Adjust for wpAdminBar
      if ( wpAdminBar.length && wpAdminBar.is(':visible') && window.innerWidth > 782 ) {
        topOffset += wpAdminBar.innerHeight();
      }

      return topOffset - 1;
    }

  };

  $(window).resize(function() {
    FP.Utils.stickyHeader.stickyHeadersAreSet = false;
    FP.Utils.stickyHeader.setStickyHeaders(FP.Utils.stickyHeader.className);
  });

}(jQuery);
;
!function ($) {
  //=NS
  FP.Utils = FP.Utils || {};

  FP.Utils.contentToggle = {
    /**
     * Helper for content toggle
     */
    classNameParent : '.content-toggle',
    classNameButtons : '.content-toggle--buttons > div',
    classNameContent : '.content-toggle--content > div',
    
    classNameActiveButton : 'active--button',
    classNameActiveContent : 'active--content',

    init: function() {
      var that = this;

      that.configureContentToggle();
    },

    configureContentToggle: function() {
      var that = this;

      // ensure parent container exists
      if( $( that.classNameParent ).length ) {
        
        // iterate through parents in case there is more than one content toggle area on the post/page
        $( that.classNameParent ).each( function( parentIndex, parentEl ) {
          
          // ensure button and content containers exist
          if( $( that.classNameButtons ).length && $( that.classNameContent ).length ) {
            
            // handle buttons
            that.toggleClassnames( $( this ).find( that.classNameButtons ), that.classNameActiveButton );
            that.addClassnameIdentifiers( $( that.classNameButtons ), parentIndex, 'button' );
            that.addClickHandlers( $( this ), that.classNameActiveButton, 'content' );
            
            // handle content containers
            that.toggleClassnames( $( this ).find( that.classNameContent ), that.classNameActiveContent );
            that.addClassnameIdentifiers( $( that.classNameContent ), parentIndex, 'content' );
          }
        });
      }
    },

    addClickHandlers: function( parentEl, activeClassName, contenttype ) {
      var that = this;

      parentEl.find( that.classNameButtons ).on('click', function(){
        // Remove active class name from all buttons
        parentEl.find( that.classNameButtons ).removeClass( activeClassName );

        // Toggle active class on clicked button
        $( this ).addClass( activeClassName );

        // Remove active class name for all content areas
        parentEl.find( that.classNameContent ).removeClass( that.classNameActiveContent );

        // Get index id for clicked content area
        // based on the id of the clicked element
        var idValue = $( this ).attr( 'id' );
        var indexValue = idValue.split( '--' );

        indexValue = indexValue[1];
        // Toggle active class for clicked content area
        $('#' + contenttype + '--' + indexValue).addClass( that.classNameActiveContent );
      });
    },

    toggleClassnames: function( els, activeClassName ) {
      var that = this;

      // Remove active class name from all elements
      $( els ).removeClass( activeClassName );
      // Add active class name to first element
      $( els ).each(function(index, el) {
        if( 0 === index ) {
          $( this ).addClass( activeClassName );
        }
      });
    },

    addClassnameIdentifiers: function( els, parentIndex, contenttype ) {
      // Add ids to elements to reference in click events
      $( els ).each(function( index, el ) {
        $( this ).attr( 'id', contenttype + '--' + parentIndex + '_' + index );
      });
    },

  };

  FP.Utils.contentToggle.init();

}(jQuery);
;
//~Singletons/User
//
// Helper funcs for interacting with identity provider
!function ($) {
  var usePianoProduction = window.pianoData.use_piano_environment;

  if( 'production' === usePianoProduction ) {
    // Production
    var pianoAid = 'beVmoi3WRm';
    var pianoEndpoint = 'https://buy.tinypass.com/api/v3';
    var pianoAPIFile = '//cdn.tinypass.com/api/tinypass.min.js';
  } else {
    // Sandbox
    var pianoAid = 'Q0Q1FMiXiK';
    var pianoEndpoint = 'https://sandbox.tinypass.com/api/v3';
    var pianoAPIFile = '//sandbox.tinypass.com/api/tinypass.min.js';
  }

  var doc = $(document);

  window.dataLayer = window.dataLayer || [];

  /* Toggle body class based on whether user is logged in/subscribed */
  function toggleBodyClass() {
    // Check if user is logged in
    if( FP.Singletons.User.isReg ) {

      // Check if user is subscribed
      if( FP.Singletons.User.isSub ) {
        $( 'body' ).addClass( 'sub_user' );
      } else {
        $( 'body' ).addClass( 'reg_user' );
      }

    } else {
      $( 'body' ).addClass( 'anon_user' );
    }
  }

  /* Toggle header content based on whether user is logged in */
  function toggleHeaderContent() {
    // If user is logged in
    if ( !FP.Singletons.User.isIPAccess && ( FP.Singletons.User.isSub || FP.Singletons.User.isReg ) ) {
      // Update header content to match logged in state    
      $('.header-subnav .navlink.-top.-signin.FP-paywall--login, .header-mobile-subnav .navlink.-top.-signin.FP-paywall--login')
        .html('My Account')
        .attr('href','/manage')
        .removeClass('FP-paywall--login');

      if ( FP.Singletons.User.isInsider ) {
        $('.header-subnav .subscribe-link').hide();
        $('.header-mobile-subnav .subscribe-link').hide();
        $('.insider-only-text').show();
      } else if( FP.Singletons.User.isSub || FP.Singletons.User.isPrem ) {
        $('.header-subnav .subscribe-prompt').hide();
        $('.header-subnav .upgrade-to-insider-prompt').show();
        $('.header-mobile-subnav .subscribe-prompt').hide();
        $('.header-mobile-subnav .upgrade-to-insider-prompt').show();
      } else if( FP.Singletons.User.isReg ) {
        $('.header-subnav .subscribe-prompt').show();
        $('.header-subnav .upgrade-to-insider-prompt').hide();
        $('.header-mobile-subnav .subscribe-prompt').show();
        $('.header-mobile-subnav .upgrade-to-insider-prompt').hide();
      }

    // If user is IP access client
    } else if( FP.Singletons.UserAltAccess && FP.Singletons.UserAltAccess.isIPAccess ) {
      // Update header content to match logged in state    
      $('.header-subnav .navlink.-top.-signin.FP-paywall--login')
        .text( FP.Singletons.UserAltAccess.ipAccessData.message )
        .attr('href','#')
        .removeClass('FP-paywall--login');

      $('.header-subnav .subscribe-link').hide();

    // If user is link access client
    } else if( FP.Singletons.UserAltAccess && FP.Singletons.UserAltAccess.isLinkAccess ) {
      // Update header content to match logged in state    
      $('.header-subnav .navlink.-top.-signin.FP-paywall--login')
        .text( FP.Singletons.UserAltAccess.linkAccessData.message )
        .attr('href','#')
        .removeClass('FP-paywall--login');

      $('.header-subnav .subscribe-link').hide();

    } else {
      // Update header content to match logged out state
      $('.header-subnav .navlink.-top.-signin')
        .html('Sign In')
        .attr('href','#')
        .addClass('FP-paywall--login');

      $('.header-subnav .subscribe-prompt').show();
      $('.header-subnav .upgrade-to-insider-prompt').hide();
      $('.header-mobile-subnav .subscribe-prompt').show();
      $('.header-mobile-subnav .upgrade-to-insider-prompt').hide();
    }

    // Show menu in header after user access level is evaluated
    $('.header-subnav .header-menu.-top').css('display','block');

    // Hide header for users viewing article in our app
    if( isUserFromApp() ) {
      $('.site-header').hide();
      $('body').css('padding-top','0');
    }

    // Hide header for users viewing article from Facebook Instant Articles
    if( isUserFromFBIA() ) {
      $('.header-nav-wrapper,.header-subnav-wrapper,.hamburger-button').hide();
      $('.site-header .logo').removeAttr('href');
      $('body').css('padding-top','0');
      $('body').addClass('no-piano-modal-margin');
    }
  }

  /* Determine whether user is coming to the page from our app by looking for ?app=true in the URL */
  function isUserFromApp() {
    var isFromApp = (
      'true' === FP.Utils.url.getUrlParameter('app')
    );
    return isFromApp;
  }

  /* Determine whether user is coming to the page from Facebook Instant Articles by looking for surface=meter_limit_reached in the URL */
  function isUserFromFBIA() {
    var isFromFBIA = (
      'not found' !== FP.Utils.url.getUrlParameter('account_linking_token')
    );

    return isFromFBIA;
  }

  /* Initialize Piano */
  function initializePiano( postDataPianoFinal ){

    tp = window.tp || [];

    /**
     * ------------------------------------------------------------------------
     * Pass article tag data to Piano
     * ------------------------------------------------------------------------
     */
    function passDataToPiano( postDataPianoFinal ) {
      tp.push(["setTags", postDataPianoFinal]);
    }
    passDataToPiano( postDataPianoFinal );

    function send_signed_fb_pixel( event_name, params ) {
      jQuery.ajax( {
        url: '/wp-json/fp/fb-pixel',
        data: {
          event_name: event_name,
          params: params
        },
        type: 'GET',
        async: false,
        success: function ( response ) {
          var image = jQuery( '<img style="display: none;" />' );
          image.attr( 'src', response.pixel_url );
          jQuery( 'body' ).append( image );
        },
        error: function( request, error ) {
          console.error( error )
        }
      } );
    }

    /**
     * ------------------------------------------------------------------------
     * Initialize Piano
     * ------------------------------------------------------------------------
     */

    // Initialize Piano ID
    tp.push(["setUsePianoIdUserProvider", true]);

    function onCheckoutComplete(data) {
      send_signed_fb_pixel( 'Subscribe', {
        subscription_id: data.uid,
        offer_code: data.rid,
        value: data.chargeAmount,
        currency: data.chargeCurrency
      } );
//
// TO-DO - verify the data.uid comes through correctly
//
      /* Reset user cache group in case they upgraded */
      FP.Singletons.User.setUserCacheGroup( data.uid );
    }

    function onCheckoutExternalEvent() {
    }

    function onCheckoutClose(event) {
        /* Default behavior is to refresh the page on successful checkout */
        if (event && event.state == "checkoutCompleted") {
            location.reload();
        }
    }

    function onCheckoutCancel() {
    }

    function onCheckoutError() {
    }

    function onCheckoutSubmitPayment() {
    }

    function onCheckoutStateChange( stateView ) {
      let stateName = stateView.stateName;
      let offerId   = stateView.offerId;

      if ( 'state1' === stateName || 'state2' === stateName ) {
        fbq( 'track', 'InitiateCheckout', {
          offer_code: offerId
        } );
      }
    }

    /**
     * Meter callback - fired when the meter has expired
     */
    function onMeterExpired( data ) {
      fbq( 'track', 'ViewPaywall', {
        surface: 'mWeb',
        meter_count: data.maxViews
      } );

      // The user's meter has expired.
      // Hide the full version of the article and show the truncated version.
      $( '.content-ungated' ).show();
      $( '.content-gated' ).hide();
      // Hide the author, tag, and alerts content that appears below the Piano offer
      $( '.bio-no-photo' ).hide();
      $( '.the-tags' ).hide();
      $( '.calerts-tags' ).hide();
      // Reduce min-height of sidebar sticky elements
      $('.sidebar .sticky-container--delay').removeClass('sticky-container--delay');
      // Add in-article subscribe prompt after fifth paragraph in the first free article
      $( '.post-content--sub-prompt-in-article' ).insertAfter( $( '.content-ungated' ) );
      // Restructure sidebar and show content below paywall
      $( '.post-content--after' ).show();
      $( '.post-content--after--final-post' ).show();
      $( '.hide-on-gated-post' ).remove();
    }

    /**
     * Meter callback - fired when the meter is active (i.e. user is not subscribed), but it has not expired yet
     */
    function onMeterActive( e ) {
      // This is a free article for the non-subscribed user.
      // Hide the truncated version of the article and show the full version.
      $( '.content-ungated' ).hide();
      $( '.content-gated' ).show();
      // Show content below paywall
      $( '.post-content--after' ).show();
      $( '.post-content--after--final-post' ).show();
      // Add in-article subscribe prompt after fifth paragraph in the first free article
      $( '.post-content--sub-prompt-in-article' ).insertAfter( $( '.content-gated p:nth-of-type(4)' ) );
      $( '.post-content--sub-prompt-in-article' ).show();
      // Add class to adjust spacing on custom feature templates
      $( '.piano-gating-offer-container--in-feature' ).addClass( 'piano-gating-offer-container--tighter-space' );
      // Add class to first article to toggle content within CSS
      $( '.post-content--after' ).addClass( 'hide-duplicate-content-on-mobile' );
    }

    /* Callback executed when a user must login */
    function onLoginRequired() {
        // this is a reference implementation only
        // your own custom login/registration implementation would
        // need to return the tinypass-compatible userRef inside the callback

        // mysite.showLoginRegistration(function (tinypassUserRef)
        // tp.push(["setUserRef", tinypassUserRef]); // tp.offer.startCheckout(params); // }
        // this will prevent the tinypass error screen from displaying

        return false;
    }

    /* Callback executed after an experience executed successfully */
    function onExperienceExecute(event) {
      // Subscribe page
      // Hide secondary subscription content if user is viewing 
      // the B version of the A/B test
      /* 2/11/21 - Remove this toggle until another A/B test is enabled
      if( $('.subscribe').length > 0 ) {
        var abTestCookie = tp.util.findCookieByName('_pc_variant');
        if( 'b' === abTestCookie ) {
          $('.subscribe .secondary-content').hide();
        }
      }*/
    }

    /* Callback executed after a response variable is sent from the experience */
    function onSetResponseVariable(eventParams){
      var responseVariables = eventParams.responseVariables

      if( typeof responseVariables.show_inline_sub_prompt !== 'undefined' ) {

        if( responseVariables.show_inline_sub_prompt ) {
          // Add in-article subscribe prompt after the truncated gated content
          $( '.post-content--sub-prompt-in-article' ).css('margin-top','1.5em').show();
        }

      }
    }

    /* Callback executed if experience execution has been failed */
    function onExperienceExecutionFailed(event) {
    }

    /* Callback executed if external checkout has been completed successfully */
    function onExternalCheckoutComplete(event) {
        /* Default behavior is to refresh the page on successful checkout */
        location.reload();
    }

    /* Determine if content should not be free in the app */
    function isInsiderContent() {
      return postDataPiano.includes("insider");
    }

    tp.push(["setAid", pianoAid]);
    tp.push(["setCxenseSiteId", "1139724983415417198"]);
    tp.push(["setEndpoint", pianoEndpoint]);
    tp.push(["setUseTinypassAccounts", false]);

    /* Piano cookie setting - first party */
    tp.push(["setCloudflareWorkerUrl", window.location.origin + "/endpoint/piano-cookies/?__fp_endpoint_piano_cookies=1"]);

    /* FB IA tracking (https://docs.piano.io/facebook-experiences/#IAscript) */
    tp.push(["setFbPixelId", "203988873637408"]);

    /* checkout related events */
    tp.push(["addHandler", "checkoutComplete", onCheckoutComplete]);
    tp.push(["addHandler", "checkoutClose", onCheckoutClose]);
    tp.push(["addHandler", "checkoutCustomEvent", onCheckoutExternalEvent]);
    tp.push(["addHandler", "checkoutCancel", onCheckoutCancel]);
    tp.push(["addHandler", "checkoutError", onCheckoutError]);
    tp.push(["addHandler", "checkoutSubmitPayment", onCheckoutSubmitPayment]);
    tp.push(["addHandler", "checkoutStateChange", onCheckoutStateChange]);

    /* user login events */
    tp.push(["addHandler", "loginRequired", onLoginRequired]);

    /* meter related */
    tp.push(["addHandler", "meterExpired", onMeterExpired]);
    tp.push(["addHandler", "meterActive", onMeterActive]);

    tp.push(["addHandler", "experienceExecute", onExperienceExecute]);
    tp.push(["addHandler", "experienceExecutionFailed", onExperienceExecutionFailed]);

    /* get response variable from experience */
    tp.push(["addHandler", "setResponseVariable", onSetResponseVariable]);

    /* external checkout related events */
    tp.push(["addHandler", "externalCheckoutComplete", onExternalCheckoutComplete]);
    
    /* handle user login, signup and logout button clicks - callback executed after a tinypassAccounts login */
    tp.push(["addHandler", "loginSuccess", function(data){
      // Any logic required after a successful login
      if ( tp.user.isUserValid() ) {
        send_signed_fb_pixel( 'LogIntoAccount', {
          subscription_id: data.params.uid,
          is_subscriber: true
        } );
      }

      // Toggle display of authenticated user content in header
      toggleHeaderContent();

      if( true === data.registration ) {
        // login came from registration
      } else if( "PIANOID" === data.source ) {
        // login came from standard login, not within an offer flow
        FP.Singletons.User.setUserCacheGroup( data.params.uid, true );
      }
    }]);

    // Initialize Piano
    tp.push(["init", function() {
      // ensure cross domain tracking
      tp.enableGACrossDomainLinking('UA-6874192-41');

      // If user is logged in
      if (tp.user.isUserValid()) {
        // Get the stored cookie value
        var paramsCookie = tp.util.findCookieByName('__pianoParams');
        var params;
        try {
          // Try to parse stored JSON data
          params = JSON.parse(paramsCookie);
          // Remove the old cookie
          document.cookie = "__pianoParams=null; expires=-1;" +
            " path=/; domain=.foreignpolicy.com";
        } catch (e) {
          params = false;
        }

        if ( $('#reset-password-page') ) {
          $('#reset-password-page').css('display','none');
          $('#reset-password-page-logged-in-user').css('display','block');
        }

      } else {

        /**
         * ------------------------------------------------------------------------
         * Password reset - can be reset only if user is anonymous
         * ------------------------------------------------------------------------
         */
        // Continue if user is on password reset page
        if ( $('#reset-password-page') ) {
          $('#reset-password-page').css('display','block');
          $('#reset-password-page-logged-in-user').css('display','none');
          // If URL has reset_token parameter
          var tokenMatch = location.search.match(/reset_token=([A-Za-z0-9]+)/);
          if (tokenMatch) {
            // Get value of the token
            var token = tokenMatch[1];
            // Present password reset form with the found token
            tp.pianoId.show({
              'resetPasswordToken': token, 
              displayMode: 'inline',
              containerSelector: '#reset-password-page',
              loggedIn: function () {
                // Once user logs in - refresh the page
                location.reload();
              }
            });
          }
        }
      }

      // Initialize Piano experience
      // unless user is viewing article in our app and the article is not insider only
      if( !isUserFromApp() || ( isUserFromApp() && isInsiderContent() ) ) tp.experience.init();

      // Ensure full article content displays in app
      if( isUserFromApp() && !isInsiderContent() ) {
        $( '.content-ungated' ).hide();
        $( '.content-gated' ).show();
      }

      /**
       * ------------------------------------------------------------------------
       * Manage page
       * ------------------------------------------------------------------------
       */

      function buildManagePage() {
        // Exit if user is not on Manage page
        if ( !$('.fp-manage-page') ) {
          return;
        }

        // Toggle display of FP manage content
        if ( FP.Singletons.User.isReg || FP.Singletons.User.isSub || FP.Singletons.User.isPrem ) {
          $('.fp-manage-anon').hide();
          // $('.fp-manage-menu').show();
        }
        if ( FP.Singletons.User.isReg && !FP.Singletons.User.isSub ) {
          $('.fp-manage-reg').each(function() {
            $( this ).show();
          });
        }
        if ( FP.Singletons.User.isSub || FP.Singletons.User.isPrem ) {
          $('.fp-manage-sub').each(function() {
            $( this ).show();
          });
        }
        if ( FP.Singletons.User.isPrem ) {
          $('.fp-manage-premium').each(function() {
            $( this ).show();
          });
        }

        // Show Piano manage content
        tp.myaccount.show({
          displayMode: "inline",
          containerSelector: "#piano-manage"
        });

      }

      /**
       * Enable commenting
       * 
       * Send a REST request with Piano UID, which will generate a JWT token
       * to pass to Coral, which will authenticate the user. 
       * 
       * Store the token in a cookie to avoid extra calls subsequent pageloads.
       */
      function enableCommenting() {
        if ( tp.user.isUserValid() && FP.Singletons.User.isSub ) {
          if ( FP.Singletons.User.userData.customFields.comments_username ) {
            $( '.username-placeholder' ).html( FP.Singletons.User.userData.customFields.comments_username );
            $( '.username-input' ).val( FP.Singletons.User.userData.customFields.comments_username );
          }

          var coral_token = $.cookie( 'fp-coral-token' );
          if ( coral_token && window.coral_embed ) {
            window.coral_embed.login( coral_token );
          } else {
            jQuery.ajax( {
              url: '/wp-json/fp/coral-jwt',
              data: {
                uid: tp.pianoId.getUser().uid,
                username: FP.Singletons.User.userData.customFields.comments_username
              },
              type: 'POST',
              async: true,
              success: function ( response ) {
                if ( response.token && window.coral_embed ) {
                  $.cookie( 'fp-coral-token', response.token, { expires: 2, path: '/' } );
                  window.coral_embed.login( response.token );
                }
              },
              error: function( request, error ) {
                console.error( error );
              }
            } );
          }
        }
      }


      // Trigger Piano login
      doc.on('click', 'a.navlink.FP-paywall--login, .FP-paywall--login.FP-paywall--login--login', function (event) {
        event.preventDefault();
        // show login
        tp.pianoId.show({
          displayMode: 'modal',
          screen: 'login',
          loggedIn: function(data) {
              toggleHeaderContent();
          },
          loggedOut: function() {
              toggleHeaderContent();
          }
        });
      });

      // Trigger Piano signup
      doc.on('click', 'a.FP-paywall--login--signup', function (event) {
        event.preventDefault();
        // show signup
        tp.pianoId.show({
          displayMode: 'modal',
          screen: 'register',
          loggedIn: function(data) {
              toggleHeaderContent();
          },
          loggedOut: function() {
              toggleHeaderContent();
          }
        });
      });

      // Trigger Piano logout
      doc.on('click', 'a.FP-paywall--logout', function (event) {
        tp.pianoId.logout();
        $.removeCookie( 'fp-coral-token', { path: '/' } );
        $.removeCookie( 'vip-go-seg', { path: '/' } );
        $.removeCookie( 'fp-user-data', { path: '/' } );
      });

      tp.pianoId.init({
        loggedOut: function() {
          // Reload the page after Piano has completed the logout process
          location.reload();
        }
      });

      // Trigger Insider offer button display on Future of Money Power Maps
      if( $('.insider-subscribe-prompt').length > 0 ) {
        tp.offer.show({
          offerId: 'OFY7IXJA0SO8',
          templateId: 'OTCYLY404315',
          displayMode: 'inline',
          containerSelector: '.insider-subscribe-button',
          termIds: [ 'TMKUNL72V9OZ' ],
        });
        tp.offer.show({
          offerId: 'OFY7IXJA0SO8',
          templateId: 'OTCYLY404315',
          displayMode: 'inline',
          containerSelector: '.insider-subscribe-button--larger',
          termIds: [ 'TMKUNL72V9OZ' ],
          templateVariantId: 'OTV91IYEQJSBE',
        });
        tp.offer.show({
          offerId: 'OFY7IXJA0SO8',
          templateId: 'OTMRS67TUUXD',
          displayMode: 'inline',
          containerSelector: '.insider-subscribe-button--subscribe-now',
          termIds: [ 'TMKUNL72V9OZ' ],
        });
      }


      /**
       * ------------------------------------------------------------------------
       * Check user access
       * ------------------------------------------------------------------------
       */

      // Check for FP.Singletons instance
      FP.Singletons = FP.Singletons || {};

      // Create User class
      FP.Singletons.User = {

        isInsider: false,
        isPrem: false,
        isSub: false,
        isISpyPlus: false,
        isReg: false,
        isIPAccess: false,
        isLinkAccess: false,
        userData: {
          customFields: {}
        },
        ipAccessData: {},

        /**
         * Listener for all subscription check events to finish
         */
        accessCheckCompleteListener: function () { 
          var that = this;

          // Listener
          var MyRequestsCompleted = (function() {
            var numRequestToComplete, requestsCompleted, callBacks, singleCallBack;

            return function(options) {
              if (!options) options = {};

              numRequestToComplete = options.numRequest || 0;
              requestsCompleted = options.requestsCompleted || 0;
              callBacks = [];
              var fireCallbacks = function() {
                for (var i = 0; i < callBacks.length; i++) callBacks[i]();
              };
              if (options.singleCallback) callBacks.push(options.singleCallback);

              this.addCallbackToQueue = function(isComplete, callback) {
                if (isComplete) requestsCompleted++;
                if (callback) callBacks.push(callback);
                if (requestsCompleted == numRequestToComplete) fireCallbacks();
              };
              this.requestComplete = function(isComplete) {
                if (isComplete) requestsCompleted++;
                if (requestsCompleted == numRequestToComplete) fireCallbacks();
              };
              this.setCallback = function(callback) {
                callBacks.push(callBack);
              };
            };
          })();

          // Set number of events and callback for listener
          that.requestCallback = new MyRequestsCompleted({
            numRequest: 2,
            singleCallback: function(){
              toggleBodyClass();
              toggleHeaderContent();
              buildManagePage();

              $.event.trigger('pianoAccessCheckComplete');
              FP.Singletons.User.trackLoginData();
            }
          })
        },


        setAccess: function () {
          var that = this;

          that.accessCheckCompleteListener();

          /**
           * Process the user access info that came from the server-side 
           * via Foreignpolicy_User_Cache_Group_Helper::get_user_access_levels
           */
          if ( window.pianoData.userLevels ) {
            var userLevels = window.pianoData.userLevels;

            FP.Singletons.User.isInsider  = userLevels.isInsider,
            FP.Singletons.User.isPrem     = userLevels.isPremium || userLevels.isInsider,
            FP.Singletons.User.isSub      = userLevels.isSub || userLevels.isPremium || userLevels.isInsider;
            FP.Singletons.User.isISpyPlus = userLevels.isIspyPlus || userLevels.isPremium || userLevels.isInsider;
            FP.Singletons.User.isReg      = userLevels.isReg || userLevels.isSub || userLevels.isPremium || userLevels.isInsider;

            if ( $.cookie( 'fp-user-data' ) ) {
              FP.Singletons.User.userData = JSON.parse( $.cookie( 'fp-user-data' ) );
              that.fetchCustomFields( 'comments_form', function() {
                enableCommenting();
              } );
            }
          }

          that.isPianoAccess();
          that.isOtherAccess();

          window.pianoReady = true;
        },

        fetchCustomFields: function( form_name, callback ) {
          tp.pianoId.loadExtendedUser( {
            extendedUserLoaded: function ( data ) {
              FP.Singletons.User.userData.customFields = [];

              for ( var i in data.custom_field_values ) {
                var fieldName  = data.custom_field_values[i].field_name;
                var fieldValue = data.custom_field_values[i].value;

                FP.Singletons.User.userData.customFields[fieldName] = fieldValue;
              }

              if ( FP.Singletons.User.isSub ) {
                var username_set = !!FP.Singletons.User.userData.customFields.comments_username;
                if ( ! username_set ) {
                  $( '.comment-username-text' ).hide();

                  FP.Singletons.User.userData.customFields.comments_username = FP.Singletons.User.userData.first_name + FP.Singletons.User.userData.last_name.charAt(0);
                  $( '.comment-username-form.user-content' ).show();
                }
              }

              if ( 'true' === FP.Singletons.User.userData.customFields.commenting_guidelines_consent ){
                $( 'input[name="commenting-guidelines-consent"]' ).attr( 'checked', 'checked' );
              }

              $.cookie( 'fp-user-data', JSON.stringify( FP.Singletons.User.userData ), { expires: 2, path: '/' } );

              if ( callback ) {
                callback();
              }
            }, formName: form_name
          } );
        },

        isPianoAccess: function() {
          var that = this;

          // VIP cache cookie has already been set
          // cookie duration is 2 days
          if ( typeof $.cookie( 'vip-go-seg' ) !== 'undefined' && ! FP.Singletons.UserAltAccess.isIPAccess ) {
            //
            // TO-DO
            // - set cookie with all the that.isInsider, etc. sub details and that.userData data as well
            //   this can be evaluated here to set all the data relative to the FP.Singletons.User object
            //
            if( tp.user.isUserValid() ) {
              var pianoUserData = tp.pianoId.getUser();
              // Set uid if not already present
              if ( ! that.userData.uid ) {
                that.userData.uid = pianoUserData.uid;
              }
              tpUserId = that.userData.uid;
              // Set remaining user data 
              that.userData.email = pianoUserData.email;
              that.userData.first_name = pianoUserData.firstName;
              that.userData.last_name = pianoUserData.lastName;
              that.userData.personal_name = that.userData.first_name + ' ' + that.userData.last_name;
            }

            that.requestCallback.requestComplete(true);
            return;
          } else if( tp.user.isUserValid() ) {
            // VIP cache cookie has not been set
            var pianoUserData = tp.pianoId.getUser();
            tpUserId = pianoUserData.uid;

            Promise.all([
              FP.Singletons.User.setUserCacheGroup( tpUserId ),
            ]).then(function (results) {
              that.requestCallback.requestComplete(true);
            }).catch(function (reason) {
              //reject(reason);
            });
          // User is not logged into Piano
          } else {
            that.requestCallback.requestComplete(true);
          }

        },


        /**
         * Helper to determine if user is coming from the app, 
         * or has either IP access or link access 
         */
        isOtherAccess: function () {
          var that = this;
          if( 
            that.isFromApp() 
            || FP.Singletons.UserAltAccess.isIPAccess 
            || FP.Singletons.UserAltAccess.isLinkAccess 
          ) {
            that.isPrem = true;
            that.isSub = true;
            that.isISpyPlus = true;

            // Workaround for IP access users coming from proxy URL
            // to ensure the full article content displays
            $( '.content-ungated' ).hide();
            $( '.content-gated' ).show();

            if( FP.Singletons.UserAltAccess.isIPAccess ) {
              that.isIPAccess = FP.Singletons.UserAltAccess.ipAccessData.access;
              that.ipAccessData = FP.Singletons.UserAltAccess.ipAccessData;
              if( 'Insider' === FP.Singletons.UserAltAccess.ipAccessData.access_level ) {
                that.isInsider = true;
                if( FP.Singletons.User.isInsider ) {
                  $( 'body' ).addClass( 'insider_user_ip' );
                }
              }

              // Hide comment-related elements from IP Access clients, for now
              $( '.hide-ip-access' ).remove();
            }

            if( FP.Singletons.UserAltAccess.isLinkAccess ) {
              that.isLinkAccess = FP.Singletons.UserAltAccess.isLinkAccess.access;
              that.linkAccessData = FP.Singletons.UserAltAccess.linkAccessData;
            }
          }

          that.requestCallback.requestComplete(true);
          return;
        },


        /**
         * Helper to set user cache group with VIP
         */
        setUserCacheGroup: function ( pianoUid, reload ) {
          var that = this;

          return new Promise( function( resolve, reject ) {
            $.ajax({
              type: 'POST',
              url: '/wp-admin/admin-ajax.php',
              data: {
                action: 'set_user_cache_group',
                uid: pianoUid,
                token: window.pianoData.cache_group_nonce
              },
              success: function( response ) {
                that.isInsider  = response.isInsider;
                that.isPrem     = response.isPremium || response.isInsider;
                that.isSub      = response.isSub || response.isPremium || response.isInsider;
                that.isISpyPlus = response.isIspyPlus || response.isPremium || response.isInsider;
                that.isReg      = response.isReg || response.isSub || response.isPremium || response.isInsider;

                var pianoUserData = tp.pianoId.getUser();
                // Set uid if not already present
                if( !that.userData.uid ) that.userData.uid = pianoUserData.uid;
                tpUserId = that.userData.uid;
                // Set remaining user data 
                that.userData.email = pianoUserData.email;
                that.userData.first_name = pianoUserData.firstName;
                that.userData.last_name = pianoUserData.lastName;
                that.userData.personal_name = that.userData.first_name + ' ' + that.userData.last_name;
                that.userData.customFields = {};

                // $.cookie( 'fp-user-data', JSON.stringify( that.userData ), { expires: 2, path: '/' } );
                that.fetchCustomFields( 'comments_form', function() {
                  enableCommenting();

                  if( true === reload ) {
                    location.reload();
                  }
                } );
              }
            }).done( resolve ).fail( reject );
          } );
        },


        /**
         * Helper to determine whether user is coming from app;
         * if `true` we don't want to gate
         *
         * E.g.,
         * ```javascript
         * console.log(FP.Singletons.User.isFromApp());
         * // `true` or `false`
         * ```
         *
         * @return {Boolean}
         */
        isFromApp: function () {
          return isUserFromApp();
        },


        trackLoginData: function() {
          var that = this;

          // Set user group per subscription level
          var user_group = '';
          var subscriber_state = '';
          
          if( that.isInsider ) {
            user_group = 'insider_subscriber';
            subscriber_state = 'Subscribed - Insider';
          } else if( that.isPrem ) {
            user_group = 'premium_subscriber';
            subscriber_state = 'Subscribed - Premium';
          } else if( that.isSub ) {
            user_group = 'basic_subscriber';
            subscriber_state = 'Subscribed - Basic';
          } else if( that.isISpyPlus ) {
            user_group = 'i_spy_plus_user';
            subscriber_state = 'Subscribed - I Spy Plus';
          } else if( that.isReg ) {
            user_group = 'registered_user';
            subscriber_state = 'Registered';
          }

          // Continue if user is authenticated via Piano or IP/Link access
          if( '' !== user_group ) {

            var user_id = '';
            var event_category = '';

            if( FP.Singletons.UserAltAccess.isIPAccess ) {
              user_id = that.ipAccessData.client_guid;
              user_group = 'default-IP_access';
              event_category = 'IP';
            
            } else if( FP.Singletons.UserAltAccess.isLinkAccess ) {
              user_id = that.linkAccessData.ID;
              user_group = 'default-link_access';
              event_category = 'LinkAccess';
            
            } else {
              user_id = that.userData.uid;
              event_category = 'Piano';
            }

            // Send data to GA
            gtag('event', 'track_login', {'LID': user_id});
            gtag('event', 'track_login', {'RGRP': user_group});
            gtag('event', 'track_login', {'VID': user_id});
            
            dataLayer.push({
              'subscriberState': subscriber_state,
              'accessId': user_id,
              'accessGroup': user_group
            });

            // Send data to GA
            gtag('event', 'matchedSubscriber', {
              'event_category': event_category
            });
          } else {
            $('body').addClass('anon_user');
          }

          // Only send the ViewContent event on article pages
          if ( -1 < postDataPiano.indexOf( 'article' ) ) {
            if ( window.fbq ) {
              fbq( 'track', 'ViewContent', {
                article_content_tier: 'metered',
                is_subscriber: ( '' !== user_group && 'registered_user' !== user_group )
              } );
            }
          }
        },

      };

      FP.Singletons.User.setAccess();

    }]);
  }

  doc.on('altAccessCheckComplete', function( event, postDataPianoFinal ) {
    initializePiano( postDataPianoFinal );
  });

  // |BEGIN INCLUDE TINYPASS JS|
  (function(src){var a=document.createElement("script");a.type="text/javascript";a.async=true;a.src=src;var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})(pianoAPIFile);
  // |END   INCLUDE TINYPASS JS|

}(jQuery);
;
//~Singletons/UserAltAccess
//
// Helper funcs for evaluating alternate access - traffic from app, IP access, or link access
!function ($) {

  // Check for FP.Singletons instance
  FP.Singletons = FP.Singletons || {};

  FP.Singletons.UserAltAccess = {

    isIPAccess: false,
    isLinkAccess: false,
    ipAccessData: {},
    linkAccessData: {},

    isAltAccess: function () {
      var that = this; 

      new Promise(function (resolve, reject) {
        return Promise.all([
          that.getIpAccessData()
          /* that.getLinkAccessData() - REMOVED FOR NOW AS WE DON'T HAVE ANY LINK ACCESS CLIENTS */
        ])
          .then(function (results) {

            var ipAccessResults = results[0];
            that.isIPAccess = ipAccessResults.access;
            
            var postDataPianoFinal = postDataPiano;

            if( that.isIPAccess ) {
              // set user data
              that.ipAccessData = ipAccessResults;

              // Reset 'article' value to avoid triggering paywall
              for (var i = 0; i < postDataPianoFinal.length; i++) {
                if (postDataPianoFinal[i] == 'article') postDataPianoFinal[i] = 'article-ipaccess';
              }

              // Add a new Piano tag to allow user access to Insider content
              if( that.ipAccessData.access_level === 'Insider' ) {
                postDataPianoFinal.push('article-ipaccess-insider');
              }
            }

            /*
            REMOVED FOR NOW AS WE DON'T HAVE ANY LINK ACCESS CLIENTS

            var linkAccessResults = results[1];
            that.isLinkAccess = linkAccessResults.access;

            if( that.isLinkAccess ) {
              // set user data
              that.linkAccessData = linkAccessResults;
              // Reset 'article' value to avoid triggering paywall
              for (var i = 0; i < postDataPianoFinal.length; i++) {
                if (postDataPianoFinal[i] == 'article') postDataPianoFinal[i] = 'article-linkaccess';
              }
            }
            */

            $.event.trigger('altAccessCheckComplete', [ postDataPianoFinal ]);
            resolve(true);

          })
          .catch(function (results) {
            var ipAccessResults = results[0];
            that.isIPAccess = ipAccessResults.access;
            
            $.event.trigger('altAccessCheckComplete', [ postDataPiano ]);
            resolve(true);
          });
      });
      return;

    },


    /**
     * Get IP access data from server
     *
     * E.g.,
     * ```javascript
     * FP.Singletons.User.getIpAccessData(
     *   function (data) {
     *     // ...
     *   },
     *   function (reason) {
     *     // ...
     *   }
     * );
     * ```
     *
     * @return {Promise} {
     *   {Boolean}     access
     *   {null/String} access_type
     *   {Number}      expires
     *   {null/String} client_guid
     *   {null/String} message
     * }
     */
    getIpAccessData: FP.Utils.promise.once(getIpAccessDataHelper),


    /**
     * Get link access data from the server for the "Universal Link" concept
     *
     * E.g.,
     * ```javascript
     * FP.Singletons.User.getLinkAccessData().then(data => console.log(data));
     * // { access: false, message: '' }
     * ```
     *
     * @return {Promise} {
     *   {Number}  ID
     *   {Boolean} access
     *   {String}  message
     * }
     */
    getLinkAccessData: FP.Utils.promise.once(function (resolve, reject) {
      var accessToken = getLinkAccessToken();
      var cachedAccessToken = getCachedLinkAccessToken();
      if (!accessToken && !cachedAccessToken) {
        setTimeout(function () {
          resolve({
            ID: 0,
            access: false,
            message: '',
          });
        }, 10);
        return;
      }
      $.getJSON(FP.Utils.string.format(FP.Config.api.link_access, (accessToken || cachedAccessToken)))
        .done(function (data) {
          resolve(data);
          if (accessToken && accessToken !== cachedAccessToken) {
            setCachedLinkAccessToken(accessToken);
          }
        })
        .fail(reject);
    }),


    /**
     * Helper to determine whether user is coming from app;
     * if `true` we don't want to gate
     *
     * E.g.,
     * ```javascript
     * console.log(FP.Singletons.User.isFromApp());
     * // `true` or `false`
     * ```
     *
     * @return {Boolean}
     */
    isFromApp: (function () {
      var isFromApp = (
        'true' === FP.Utils.url.getUrlParameter('app')
      );
      return function () {
        return isFromApp;
      };
    })(),

  };

  FP.Singletons.UserAltAccess.isAltAccess();


  //=Constants
  var LOCALSTORAGE_ENC_KEY = 'FP-ip-access--enc';
  var LOCALSTORAGE_LINK_ACCESS_KEY = 'FP-link-access--data';
  var EXPIRATION_LINK_ACCESS_DATA = 1e3 * 60 * 60 * 24; //=24 hours in milliseconds
  
  /**
   * Helper to retrieve IP access data
   *
   * @param {Function} resolve
   * @param {Function} reject
   */
  function getIpAccessDataHelper (resolve, reject) {
    // Retrieve data from server
    var data = {};
    var enc = window.localStorage.getItem(LOCALSTORAGE_ENC_KEY);
    if (enc) {
      data.enc = enc;
    } else {
      data.proxy_host = document.location.hostname;
    }

    $.ajax({
      type: "POST",
      url: FP.Config.api.ip_access,
      data: data,    
      timeout: 3000,
      success: function( response ) {
        if (response.enc) {
          window.localStorage.setItem(LOCALSTORAGE_ENC_KEY, response.enc);
        } else {
          window.localStorage.removeItem(LOCALSTORAGE_ENC_KEY);
        }
        resolve(response.pay);
      },
      error: function( jqXHR, textStatus, errorThrown ) {
        window.localStorage.removeItem(LOCALSTORAGE_ENC_KEY);
      }
    })
    .done( resolve )
    .fail(function () {
      reject([{
        access: false,
        access_type: null,
        expires: -1,
        client_guid: null,
        message: null
      }]);
    });
  }


  /**
   * Helper to get link access token match from URL hash
   *
   * @return {String}
   */
  function getLinkAccessToken () {
    var result = /(?:^k|\Wk)\/([%.~\w-]+)\//.exec(document.location.hash);
    return (result !== null && result[1]) || '';
  }


  /**
   * Helper to get cached link access token if available
   *
   * @return {String}
   */
  function getCachedLinkAccessToken () {
    var cachedData = JSON.parse(window.localStorage.getItem(LOCALSTORAGE_LINK_ACCESS_KEY));
    if (
      !cachedData ||
      !cachedData.token ||
      !cachedData.expires ||
      (new Date()).getTime() >= cachedData.expires
    ) {
      window.localStorage.removeItem(LOCALSTORAGE_LINK_ACCESS_KEY);
      return '';
    }
    return cachedData.token;
  }


  /**
   * Helper to set cached link access token
   *
   * @param {String} accessToken
   */
  function setCachedLinkAccessToken (accessToken) {
    if (!accessToken) {
      return;
    }
    window.localStorage.setItem(LOCALSTORAGE_LINK_ACCESS_KEY, JSON.stringify({
      token: accessToken,
      expires: (new Date()).getTime() + EXPIRATION_LINK_ACCESS_DATA
    }));
  }


  /**
   * Helper to show IP message to specific users
   *
   * @param {String} ipAccessRecord
   */
  function showIPMessage (ipAccessRecord) {
    var guidsToTarget = [
      '02ec422849c64bce852ddd1d0fef7dc2', // Ministry of Defence UK
      '54635fd3a57e4780aa661658f73f4ad2', // Australian Department of Foreign Affairs
      'dbaeae4f0b5442ef8a26a5aaeb65f87c', // Congressional Research Service
      'e4f4504bcb754855a923152216edf04b', // Council de EU
      '30863845273342dcaee3e48f86ce4990', // Canadian Parliament
    ];
    if( guidsToTarget.indexOf(ipAccessRecord.client_guid) > -1 ) {
      $('.ip-access-note-in-post').show();
    }
  }

}(jQuery);;
!function(c){var u={ids:{werent_looking:"244",latin_america_brief:"530",africa_brief:"529",china:"82",south_asia:"83",morning_brief:"16",situation_report:"17",security_brief_plus:"65",editors_picks:"14",flash_points:"15",fp_this_week:"297",un_brief:"46",insider_email_capture:"169",news_alerts:"180",ispy_notify:"205",climate_security_report:"261",business:"424",events:"282",marketing:"45",globaloptout:"globaloptout"},messages:{alreadyThere:'<p class="success-message">Thank you for signing up to receive this newsletter.</p>',unsubscribe:'<p class="success-message">You have been unsubscribed from this newsletter.</p>',thanks:'<p class="success-message">Thank you for signing up to receive this newsletter.</p>',error:'<p class="error-message">There was an error subscribing you to this newsletter. Please contact web@foreignpolicy.com for assistance.</p>'},getUrlParam:function(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");e=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(location.search);return null===e?"":decodeURIComponent(e[1].replace(/\+/g," "))},init:function(){u.isHomePage=!!c(".home").length,u.isManagePage=!!c(".email-address").length,u.isAlertsManagePage=!!c(".fp-manage-alerts-page").length,u.isEventsPage=!!c(".single-events").length,u.isNewslettersListPage=!!c(".newsletters-list-page").length,u.isNewsletterPage=!!c(".newsletters-page").length||u.isManagePage||u.isNewslettersListPage,u.loggedIn=void 0!==FP.Singletons.User.userData&&FP.Singletons.User.userData.email,u.isUnsub=u.isNewslettersListPage&&"1"===u.getUrlParam("unsub"),u.email=u.isUnsub?u.getEmailFromParam():u.loggedIn,u.checkLocation(),u.getSubscriber(u.email).then(function(){u.loadPage()})},checkLocation:function(){u.isNewslettersListPage&&!u.isUnsub&&(u.loggedIn?u.isManagePage||(window.location.href=window.location.origin+"/newsletters-manage"+document.location.search):u.isManagePage&&(window.location.href=window.location.origin+"/newsletters"+document.location.search))},getEmailFromParam:function(){return atob(u.getUrlParam("e"))},loadPage:function(){var e;u.isUnsub?u.User.recipientId?(e=u.email,u.unsubId=u.getUrlParam("newsletter_id"),e&&u.unsubId&&u.updateUserSubscription(e,u.unsubId,"UNSUB","").then(function(e){u.setLoggedInState()})):window.location.href=window.location.origin+window.location.pathname:u.loggedIn?u.setLoggedInState():u.setLoggedOutState(),(u.isNewslettersListPage||u.isEventsPage||u.isHomePage)&&u.newslettersListPageInit(),u.addEventListeners()},setLoggedInState:function(){u.setAccessLevelState(),u.setEmailState()},newslettersListPageInit:function(){var n;c(".newsletter-row").on("click",".newsletter-subscribe-toggle",function(e){u.handleSubscriptionClick(e,c(this).parent())}),c(".newsletters-unsub-confirm .close").on("click",function(e){c(".newsletters-unsub-confirm").remove()}),u.isHomePage&&(c(".newsletter-unit-signup input[type=email]").show(),c(".newsletter-unit-signup input[type=email]").on("focus",function(){c(this).parents(".newsletter-unit").find(".privacy-policy-acknowledge").css("display","flex")}),c(".newsletter-unit-signup .button--signup").on("click",function(){c(this).parents(".newsletter-unit").find(".privacy-policy-acknowledge").css("display","flex")}),c(".home.reg_user .required-checkbox, .home.sub_user .required-checkbox").attr("checked","checked")),u.isManagePage||(n=c("#primary-email-field"),c(".newsletter-enter-email form").on("submit",function(e){if(e.preventDefault(),!u.validateAccountForms(c(this)))return!1;var e=n.val(),t=(c('input[name="email"]').val(e),c(".newsletter-account-screen.active"));t.addClass("loading"),u.checkEmailHasSiteAccount(e).then(function(e){e=e.data.user_exists;t.removeClass("active loading"),e?u.promptSignIn():u.promptCreateAccount()})}),c(".newsletter-signin form").on("submit",function(e){e.preventDefault();var t=c(this);if(!u.validateAccountForms(t))return!1;var e=t.find("input[type=email]").val(),n=t.find("input[type=password]").val();u.userLogin(e,n).then(function(e){e=e.data;e.user_login?(document.cookie="__utp="+e.access_token+"; expires=-1; path=/; domain=."+encodeURI(hostURL),window.location.href=window.location.origin+"/newsletters-manage"+document.location.search):(u.showAccountFormErrors(t,['The information you entered does not match a <i>Foreign Policy</i> account. Please re-enter your information or <a class="create-account-link">create an account</a>.']),u.addEventListenersDynamic())})}),c(".newsletter-create-account form").on("submit",function(e){e.preventDefault();var t=c(this);if(!u.validateAccountForms(t))return!1;var e=t.find("input[type=email]").val(),n=t.find("input[type=password]").val(),s=t.find("input[name=firstname]").val(),i=t.find("input[name=lastname]").val(),a=t.find("input[name=org]").val(),r=t.find("input[name=jobtitle]").val();u.userRegister(e,n,s,i,a,r).then(function(e){e=e.data;e.user_created?(document.cookie="__utp="+e.access_token+"; expires=-1; path=/; domain=."+encodeURI(hostURL),window.location.href=window.location.origin+"/newsletters-manage"+document.location.search):"failed"===e.feedback?u.showAccountFormErrors(t,["Registration unsuccessful"]):"already_exists"===e.feedback&&(u.showAccountFormErrors(t,['This email is already associated with a <i>Foreign Policy</i> account. Please <a class="signin-account-link">login</a> to continue.']),u.addEventListenersDynamic())})}))},validateAccountForms:function(e){e.find(".form-feedback").find(".error-message").remove();var t=[],n=(e.closest(".newsletter-account-screen"),e.find('input[name="email"]')),s=e.find('input[name="password"]'),i=e.find('input[name="firstname"]'),a=e.find('input[name="lastname"]'),r=e.find('input[name="org"]'),o=e.find('input[name="jobtitle"]'),c=e.find('input[name="optin"]');return u.validateEmail(n.val())||t.push("Email address is invalid"),s.length&&s.val().length<8&&t.push("Password must be at least 8 characters"),[i,a,r,o].forEach(function(e){e.length&&(e.val()||t.push(e.attr("placeholder")+" is required"))}),c.length&&!c.is(":checked")&&t.push("Opt-in is required"),t&&u.showAccountFormErrors(e,t),!t.length},showAccountFormErrors:function(e,t){e=e.find(".form-feedback");""!==t.join("<br>")&&u.showError(e,null,null,'<span class="error-message">'+t.join("<br>")+"</span>")},checkEmailHasSiteAccount:function(e){return c.ajax({url:"/piano-user-check/results/",data:{__fp_endpoint_piano_ajax:1,__fp_endpoint_piano_action:"email",__fp_endpoint_piano_user_email:e},cache:!0})},userLogin:function(e,t){return c.ajax({url:"/piano-user-check/results/",data:{__fp_endpoint_piano_ajax:1,__fp_endpoint_piano_action:"login",__fp_endpoint_piano_user_email:e,__fp_endpoint_piano_user_password:t},cache:!0})},userRegister:function(e,t,n,s,i,a){return c.ajax({url:"/piano-user-check/results/",data:{__fp_endpoint_piano_ajax:1,__fp_endpoint_piano_action:"register",__fp_endpoint_piano_user_email:e,__fp_endpoint_piano_user_password:t,__fp_endpoint_piano_user_firstname:n,__fp_endpoint_piano_user_lastname:s,__fp_endpoint_piano_user_org:i,__fp_endpoint_piano_user_jobtitle:a,__fp_endpoint_piano_user_consent:!0},cache:!0})},promptSignIn:function(){c(".newsletter-enter-email").removeClass("active"),c(".newsletter-signin").addClass("active")},promptCreateAccount:function(){c(".newsletter-create-account").addClass("active")},setAccessLevelState:function(){var e="newsletters-"+u.getUserAccessLevel(),t=u.isNewslettersListPage?c(".newsletters-list-page"):u.isAlertsManagePage?c(".fp-manage-alerts-page"):c(".newsletters-page");t.addClass(e)},getUserAccessLevel:function(){var e="anon";return u.loggedIn&&u.loggedIn===u.email?FP.Singletons.User.isInsider||FP.Singletons.User.isPrem?e="premium":FP.Singletons.User.isSub?e="basic":FP.Singletons.User.isReg&&(e="registered"):u.User&&("FPINSIDER"===u.User.subscriber_status||"FPPREMIUM"===u.User.subscriber_status?e="premium":"FPDIGITAL"===u.User.subscriber_status?e="basic":u.isUnsub&&(e="unsub")),e},setEmailState:function(){var e=c(".home-content").length,t=u.getUserEmail();t&&(u.isAlertsManagePage||e||u.isNewsletterPage)&&(c('label[for^="email-"]').hide(),c("input[type=email]").hide().val(t)),u.setSubscriptionStates(t)},getUserEmail:function(){var e="",t=u.isManagePage?c(".email-address"):null;return u.isManagePage&&(e=t.html(),e=u.validateEmail(e)?e:""),e||(e=FP.Singletons.User.userData.email,u.isManagePage&&t.text(encodeURI(e)).animate({width:"auto"},10)),e},validateEmail:function(e){return/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)},setSubscriptionStates:function(e){u.getSubscriber(e).then(function(){var e=u.User,t=e.address,n=e.recipientId,s=e.status;if(t&&"[]"!=t)if(u.isNewslettersListPage)for(var i in u.ids){i=u.ids[i];i===u.ids.globaloptout?u.setUserOptOut(i,s):u.setNewsletterState(n,i)}else c("[data-newsletter-id]").each(function(){var e=c(this).data("newsletter-id");u.setNewsletterState(n,e)});else u.showSignUpButtons()})},showSignUpButtons:function(e){e=e?c(".newsletter-"+e).find(".buttons"):c(".buttons");c(".loading-placeholder-smaller").hide(),e.animate({opacity:1})},setNewsletterState:function(e,t){u.getSubscriptionStatus(e,t).then(function(e){0!==e.data&&u.setNewsletterIsSubscribedState(t),u.showSignUpButtons(t)})},setNewsletterIsSubscribedState:function(e){var t;-1<["169","205","261"].indexOf(e.toString())||((t=c(".newsletter-"+e)).find(".button--subscribe").hide(),t.find(".button.button--signup").hide(),t.find(".privacy-policy-acknowledge").hide(),t.find(".signed-up").show(),"244"==e&&t.find("input[type=email]").hide(),c(".newsletter-unit-signup").length&&c(".newsletter-unit-signup .newsletter-"+e+" .hide-from-newsletter-subscriber").hide())},setLoggedOutState:function(){c(".newsletters-page, .fp-manage-alerts-page, .newsletters-list-page").addClass("newsletters-anon"),u.showSignUpButtons()},addEventListeners:function(){u.isNewslettersListPage||c(".button--signup, .button--unsubscribe").on("click",function(e){u.handleSubscriptionClick(e)}),c(".button--subscribe").on("click",function(e){u.showPianoSubscriptionModal(e)}),c(".account-link a").on("click",function(e){u.promptSignIn(e)})},addEventListenersDynamic:function(){c(".create-account-link").on("click",function(e){e.preventDefault(),c(".newsletter-account-screen.active").removeClass("active loading"),u.promptCreateAccount()}),c(".signin-account-link").on("click",function(e){e.preventDefault(),c(".newsletter-create-account.active").removeClass("active loading"),c(".newsletter-signin input[type=email]").val(c(".newsletter-create-account input[type=email]").val()),u.promptSignIn(e)})},showPianoSubscriptionModal:function(e){e.preventDefault(),tp.push(["init",function(){tp.offer.show({offerId:"OFWUSFZOD5I1",templateId:"OTFTNEX7N0MK",displayMode:"modal"})}])},handleSubscriptionClick:function(e,n){e.preventDefault();var s=(n=n||c(e.target)).hasClass("button--unsubscribe")?"UNSUB":"NORMAL",i=n.html(),a=(n.html("Loading..."),n.data("newsletter-id")),r=n.data("sourceid")||"",o=n.siblings("input[type=email]").val()||c("#email-"+a).val(),e=u.getFormErrors(o);return e.length?(u.showError(c("#form-feedback-"+a),n,i,'<span class="error-message">'+e.join(" ")+"</span>"),!1):u.getSubscriber(o).then(function(){var e=u.User,t=e.address||o,e=e.recipientId;u.manageSubscription(t,e,s,a,r,n,i)})},getFormErrors:function(e){var t=[],n=c(".required-checkbox");return u.validateEmail(e)||t.push("You entered an invalid email address. Please try again."),n.length&&!u.validateCheckboxCheck(n)&&t.push("Please agree to the Privacy Policy and Terms of Use."),t},validateCheckboxCheck:function(e){return e.is(":checked")},getSubscriber:function(e){var t;return!u.User&&e&&(t=c.ajax({url:"/postup-email-check/results/",data:{s:e,__fp_endpoint_postup_email_check:1,__fp_endpoint_postup_email_address:1},cache:!0})),c.when(t).done(function(e){e&&e.success&&(e=e.data,u.User=e)})},getSubscriptionStatus:function(e,t){return u.isUnsub&&u.unsubId===t?(getStatus=c.Deferred()).resolve({success:!0,data:0}):getStatus=c.ajax({url:"/postup-newsletter-check/results/",data:{s:e,nl_id:t,__fp_endpoint_postup_newsletter_check:1,__fp_endpoint_postup_email_address:1},cache:!0}),getStatus},manageSubscription:function(t,e,n,s,i,a,r){e?"UNSUB"===n?u.manageUser(t,s,"",n,a,r):u.getSubscriptionStatus(e,s).then(function(e){0===e.data?u.manageUser(t,s,i,n,a,r):u.confirmAlreadySubscribed(s,a,r)}):u.manageUser(t,s,i,n,a,r)},manageUser:function(e,t,n,s,i,a){var r=t===u.ids.globaloptout,e=r?u.updateUserOptOut(e,s):u.updateUserSubscription(e,t,s,n);return e.then(function(e){e=e.data;(r?e.status&&"error"!==e.status:0<e.numNewsletters)?u.confirmSubscriptionChange(t,s,i,a):u.showError(c("#form-feedback-"+t),i,a,u.messages.error)})},updateUserOptOut:function(e,t){return c.ajax({url:"/postup-user-subscribe/results/",data:{s:e,subscribe_status:t,ip:"0.0.0.0",ip_org:"none",__fp_endpoint_postup_optout:1},cache:!0})},setUserOptOut:function(e,t){"U"===t&&u.setNewsletterIsSubscribedState(e),u.showSignUpButtons(e)},updateUserSubscription:function(e,t,n,s){return c.ajax({url:"/postup-user-subscribe/results/",data:{s:e,nl_id:t,subscribe_status:n,ip:"0.0.0.0",ip_org:"none",source_id:s,__fp_endpoint_postup_newsletter_subscribe:1,__fp_endpoint_postup_email_subscribe:1},cache:!0})},confirmAlreadySubscribed:function(e,t,n){var s=-1<["169","14","205","244","261"].indexOf(e)||c(".category-newsletter-signup").length;u.isNewslettersListPage?u.confirmSubscriptionChange(e,"NORMAL",t,n):s?u.confirmAlreadySubscribedSpecial(e):(u.isHomePage?(t.siblings(".form-feedback").html(u.messages.alreadyThere).fadeIn("fast"),setTimeout(function(){c(".newsletter-"+e).fadeOut()},1e3)):c("#form-feedback-"+e).html(u.messages.alreadyThere).fadeIn("fast"),t.html(n))},confirmAlreadySubscribedSpecial:function(e){var t=c(".newsletter-"+e);c("#form-feedback-"+e).hide(),t.find("input[type=email]").hide(),t.find(".button.button--signup").hide(),t.find(".privacy-policy-acknowledge").hide(),t.find(".signed-up").show()},confirmSubscriptionChange:function(e,t,n,s){c("#form-feedback-"+e).html("").fadeOut("fast"),"UNSUB"===t?u.confirmUnsub(e,n,s):u.confirmSub(e,n,s)},confirmUnsub:function(e,t,n){var s=c(".newsletter-"+e);s.find(".signed-up").fadeOut("fast",function(){s.find(".button--signup").fadeIn("fast").addClass("active"),t.html(n),FP.Singletons.User.userData.email||s.find("input[type=email]").fadeIn("fast")})},confirmSub:function(e,t,n){var s=c(".newsletter-"+e);s.find("input[type=email]").fadeOut("fast",function(){s.find(".button--signup").fadeOut("fast",function(){c("input[type=email]").val(s.find("input[type=email]").val()),s.find(".privacy-policy-acknowledge").hide(),s.find(".signed-up").fadeIn("fast"),t.html(n)}).removeClass("active")})},showError:function(e,t,n,s){e.html(s).fadeIn("fast"),t&&n&&t.html(n)}};function e(){(c("input[type=email]").length||c(".form-feedback").length)&&u.init()}FP.Newsletters=u,FP.Singletons.User?e():c(document).on("pianoAccessCheckComplete takeoverRendered",e)}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,;
!function(u,o,l){var e={cookiePath:"/",cookieDomain:"foreignpolicy.com",numQualified:1,init:function(){var e=this;e.isLoaded.then(function(){e.validateTakeovers()})},isLoaded:new Promise(function(e,t){var n,i=0;i<=8e3&&(n=setInterval(function(){o&&l&&l.Singletons&&l.Singletons.User&&l.Singletons.User.ipAccessData&&(i+=200,clearInterval(n),e())},200))}),validateTakeovers:function(){var r=this;o.length&&o.forEach(function(o){new Promise(function(e,t){e(!r.hasCookie("takeover_dismissed_"+o.id)&&!r.hasCookie("takeover_submitted_"+o.id)&&!r.hasCookie("takeover_dismissed_session"))}).then(function(e){var t,n;return o.hasOwnProperty("device_targeting")&&(t=!1,n=979<u(window).width(),e=!!(t="all"===o.device_targeting||"desktop"===o.device_targeting&&n||"mobile"===o.device_targeting&&!n?!0:t)&&e),e}).then(function(e){return e=!(o.hasOwnProperty("ip_access_guids")&&Array.isArray(o.ip_access_guids)&&o.ip_access_guids.length&&!o.ip_access_guids.includes(l.Singletons.User.ipAccessData.client_guid))&&e}).then(function(e){var t,n;return o.hasOwnProperty("subscription_level")&&(t=!1,n={FPDIGITAL:l.Singletons.User.isSub,FPPREMIUM:l.Singletons.User.isPrem,FPINSIDER:l.Singletons.User.isInsider,FPISPYPLUS:l.Singletons.User.isISpyPlus,REGISTERED:l.Singletons.User.isReg&&!l.Singletons.User.isSub,NONSUB:!l.Singletons.User.isSub,IPACCESS:l.Singletons.User.isIPAccess},o.subscription_level.forEach(function(e){t=!(t||!n[e])||t}),e=!!t&&e),e}).then(function(i){if(o.hasOwnProperty("integration")&&o.integration&&o.integration.hasOwnProperty("integration_type")&&"none"!==o.integration.integration_type&&"postup"===o.integration.integration_type)if(o.integration.hasOwnProperty("postup_list_id")&&""!==o.integration.postup_list_id&&(r.newsletter(o),l.Singletons.User.userData&&l.Singletons.User.userData.email))return new Promise(function(t,e){var n=o.integration.postup_list_id.split(",");r.checkNewsletterSubscription(n[0]).then(function(e){e||t(i)})});return i}).then(function(e){return e&&r.showTakeover(o),e})})},showTakeover:function(e){var t=this;if(1===t.numQualified){switch(takeoverModal=u.parseHTML(e.takeover_html,document,!0),e.template){case"in-article":if(0<u(".single-podcasts").length)return;u(".post-content-main > .meta-data").before(takeoverModal),0<u(".takeover-audio-content audio").length&&u(".takeover-audio-content audio").mediaelementplayer();break;case"in-article-newsletter":u(".post-content-main > .meta-data").before(takeoverModal),u(document).trigger("takeoverRendered");break;default:u("body").append(takeoverModal),u("body").addClass("takeover-open"),"slider"!==e.template?t.modal(e):t.slider(e)}u.event.trigger("takeoverShown"),t.numQualified++}},closeTakeover:function(e,t){u("body").removeClass("takeover-open");var n=this,i=24*e.cookie_duration;n.setCookie("takeover_dismissed_"+e.id,!0,n.expiryDate(i),n.cookiePath,""),t.remove(),n.setCookie("takeover_dismissed_session",!0,"",n.cookiePath,"")},ctaClicked:function(e,t){var n=this;n.setCookie("takeover_dismissed_"+t.id,!0,n.expiryDate(8760),n.cookiePath,""),window.location.href=e.attr("href")},expiryDate:function(e){var t=new Date;return t.setHours(t.getHours()+e),t},getCookie:function(e){return decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*"+encodeURIComponent(e).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*([^;]*).*$)|^.*$"),"$1"))||null},setCookie:function(e,t,n,i,o,r){if(!e||/^(?:expires|max\-age|path|domain|secure)$/i.test(e))return!1;var s="";if(n)switch(n.constructor){case Number:s=n===1/0?"; expires=Fri, 31 Dec 9999 23:59:59 GMT":"; max-age="+n;break;case String:s="; expires="+n;break;case Date:s="; expires="+n.toUTCString()}e=encodeURIComponent(e)+"="+encodeURIComponent(t)+s+(o?"; domain="+o:"")+(i?"; path="+i:"")+(r?"; secure":"");return document.cookie=e,!0},removeCookie:function(e,t,n){return!(!e||!this.hasItem(e))&&(document.cookie=encodeURIComponent(e)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT"+(n?"; domain="+n:"")+(t?"; path="+t:""),!0)},hasCookie:function(e){return new RegExp("(?:^|;\\s*)"+encodeURIComponent(e).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=").test(document.cookie)},checkNewsletterSubscription:function(t){l.Newsletters=l.Newsletters||{};var e=l.Singletons.User.userData.email;return getNewsletterResults=l.Newsletters.getSubscriber(e).then(function(){var e=l.Newsletters.User.recipientId;return l.Newsletters.getSubscriptionStatus(e,t).then(function(e){e=e.data;return isSubscribedToNewsletter=0!==e})})},modal:function(t){var n=this,e=u("body");e.css("overflow","hidden"),u(document).on("click",".takeover-close",function(){e.css("overflow","visible"),n.closeTakeover(t,u(this).parents(".takeover").last())}),u(document).on("click",".takeover-cta",function(e){e.preventDefault(),n.ctaClicked(u(this),t)})},slider:function(t){var n=this;u(document).on("click",".takeover-close",function(){n.closeTakeover(t,u(this).parents(".takeover").last())}),u(document).on("click",".takeover-cta",function(e){e.preventDefault(),n.ctaClicked(u(this),t)})},newsletter:function(a){var c=this;u(document).on("takeoverShown",function(){var i=u(".takeover-integration-postup form"),o=i.find(".form-feedback"),r=i.find('[name="email"]'),s=i.find('[name="newsletter_id"]').val();i.on("submit",function(e){e.preventDefault();var t=r.val(),n=i.data("sourceid"),e=s.split(",");e.length&&e.forEach(function(e){l.Newsletters.updateUserSubscription(t,e,"NORMAL",n).done(function(e){e&&e.success?(o.text("Thank you for signing up to receive this newsletter."),i.find(".newsletter-input-submit, .account-link").hide(),u(".takeover").delay(3e3).fadeOut(),c.setCookie("takeover_submitted_"+a.id,!0,c.expiryDate(8760),c.cookiePath,"")):o.text("Sorry, there was a problem, please try again.")})})})})}};u(document).on("pianoAccessCheckComplete",function(){e.init()})}(jQuery,takeoverSettings,FP);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,;
//~Chartbear
//
// Helper funcs for interacting with Chartbeat
!function ($) {

  $( document ).ready(function() {
    if ( FP.Singletons.User ) {
      init();
    } else {
      $( document ).on( 'pianoAccessCheckComplete', init );
    }

    function init() {

      window.dataLayer = window.dataLayer || [];

      var userStatus = 'anon';

      if(FP.Singletons.User.isSub) {
        userStatus = 'paid';
      } else if(FP.Singletons.User.isPrem) { 
        userStatus = 'paid';
      } else if(FP.Singletons.User.isInsider) { 
        userStatus = 'paid';
      } else if(FP.Singletons.User.isReg) {
        userStatus = 'lgdin';
      }

      dataLayer.push({
        'sections': chartbeatData.category_name,
        'authors': chartbeatData.author_list,
        'userStatus': userStatus
      });

    };
      
  });

}(jQuery);
;
!function ($) {
  var timestamps = $('[data-datetimeago]');
  if (timestamps.length < 1) {
    return;
  }
  var SEC_IN_MIN = 60;
  var MIN_IN_HR = 60;
  var HR_IN_DAY = 24;
  var ts = Math.floor(Date.now() / 1e3); // 1e3 = 1000 - this converts milliseconds to seconds
  ts = ts - 14400; // account for 4 hour difference between EST and UTC

  function getTimeAgoPhrase (ago) {
    var diff = ts - ago;
    if (diff < 60) {
      if(diff < 2) return diff + ' second ago';
      return diff + ' seconds ago';
    }
    var min = Math.floor(diff / SEC_IN_MIN);
    if (min < 60) {
      if(min < 2) return min + ' minute ago';
      return min + ' minutes ago';
    }
    var hr = Math.floor(min / MIN_IN_HR);
    if (hr < 49) {
      if(hr < 2) return hr + ' hour ago';
      return hr + ' hours ago';
    }
    var days = Math.floor(hr / HR_IN_DAY);
    if(days < 2) return days + ' day ago';
    return days + ' days ago';
  }
  $('[data-datetimeago]').each(function () {
    var el = $(this);
    el
      .text(getTimeAgoPhrase(el.data('datetimeago'))) // get seconds since "1 January 1970 00:00:00 UTC"
      .addClass('-calculated');
  });
}(cash);
;
/**
 * Function timing helpers
 *
 * This isn't really a vendor plugin as we wrote it, but
 * oh well -- it get's loaded before the `lib` JavaScript
 */

(function($, undefined){

  /**
   * Delay the execution of a function until the event
   * prompting it has not fired for a set amount of
   * time (delay)
   *
   * @param {Function} fn
   * @param {Number} delay
   */

  $.debounce = function(fn, delay){
    var handle;

    delay = undefined === delay ? 15 : delay;

    return function(){
      var that = this
        , args = arguments;

      clearTimeout(handle);

      handle = setTimeout(
        function(){
          fn.apply(that, args);
        },
        delay
      );
    };
  };

  /**
   * Postpone the execution of a function. Unlike
   * debouncing the function will not get cleared
   * if invoked again (e.g., 2 calls, 2 executions)
   *
   * @param {Function} fn
   * @param {Number} delay
   */

  $.postpone = function(fn, delay){
    delay = undefined === delay ? 100 : delay;

    return function(){
      var that = this
        , args = arguments;

      return setTimeout(
        function(){
          fn.apply(that, args);
        },
        delay
      );
    };
  };

})(jQuery);
;
/**
 * History helper
 *
 * Similar to the debounce helper, this neither really
 * a vendor module or jQuery plugin but it's easy to piggyback
 * the `$` global...
 */

(function(w, d, $, undefined){

  /**
   * Boolean indicating whether state variable is present
   */

  var h = w.history;

  var supported = !!h;

  /**
   * Stub function in case browser does not support
   *
   * @api private
   */

  function noop(){
    // Empty
  }

  /**
   * Pushstate wrapper
   *
   * @param {Object} data
   * @param {String} title
   * @param {String} absolute url
   * @api private
   */

  function pushState(data, title, url) {

    try {
      h.pushState(data, title, url);
      d.title = title;
    } catch (err) {
      /**
       * Even if supported, due to all subdomains, a security
       * error can occur. In that case, we will just forget
       * about it -- hopefully it's not too common
       */
    }
  }

  /**
   * Replacestate wrapper
   *
   * @param {Object} data
   * @param {String} title
   * @param {String} absolute url
   * @api private
   */

  function replaceState(data, title, url) {

    try {
      h.replaceState(data, title, url);
    } catch (err) {
      // Pass
    }
  }

  /**
   * Returns `history.state` object
   *
   * @return {Object} state
   * @api private
   */

  function state() {
    return h.state;
  }

  /**
   * History static plugin
   */

  $.historyfp = {};

  $.historyfp.pushState = supported && h.pushState
    ? pushState
    : noop;

  $.historyfp.replaceState = supported && h.replaceState
    ? replaceState
    : noop;

  $.historyfp.state = supported
    ? state
    : noop;

})(window, document, jQuery);
;
/*
 * SimpleModal 1.4.4 - jQuery Plugin
 * http://simplemodal.com/
 * Copyright (c) 2013 Eric Martin
 * Licensed under MIT and GPL
 * Date: Sun, Jan 20 2013 15:58:56 -0800
 */
(function(b){"function"===typeof define&&define.amd?define(["jquery"],b):b(jQuery)})(function(b){var j=[],n=b(document),k=navigator.userAgent.toLowerCase(),l=b(window),g=[],o=null,p=/msie/.test(k)&&!/opera/.test(k),q=/opera/.test(k),m,r;m=p&&/msie 6./.test(k)&&"object"!==typeof window.XMLHttpRequest;r=p&&/msie 7.0/.test(k);b.modal=function(a,h){return b.modal.impl.init(a,h)};b.modal.close=function(){b.modal.impl.close()};b.modal.focus=function(a){b.modal.impl.focus(a)};b.modal.setContainerDimensions=
function(){b.modal.impl.setContainerDimensions()};b.modal.setPosition=function(){b.modal.impl.setPosition()};b.modal.update=function(a,h){b.modal.impl.update(a,h)};b.fn.modal=function(a){return b.modal.impl.init(this,a)};b.modal.defaults={appendTo:"body",focus:!0,opacity:50,overlayId:"simplemodal-overlay",overlayCss:{},containerId:"simplemodal-container",containerCss:{},dataId:"simplemodal-data",dataCss:{},minHeight:null,minWidth:null,maxHeight:null,maxWidth:null,autoResize:!1,autoPosition:!0,zIndex:1E3,
close:!0,closeHTML:'<a class="modalCloseImg" title="Close"></a>',closeClass:"simplemodal-close",escClose:!0,overlayClose:!1,fixed:!0,position:null,persist:!1,modal:!0,onOpen:null,onShow:null,onClose:null};b.modal.impl={d:{},init:function(a,h){if(this.d.data)return!1;o=p&&!b.support.boxModel;this.o=b.extend({},b.modal.defaults,h);this.zIndex=this.o.zIndex;this.occb=!1;if("object"===typeof a){if(a=a instanceof b?a:b(a),this.d.placeholder=!1,0<a.parent().parent().size()&&(a.before(b("<span></span>").attr("id",
"simplemodal-placeholder").css({display:"none"})),this.d.placeholder=!0,this.display=a.css("display"),!this.o.persist))this.d.orig=a.clone(!0)}else if("string"===typeof a||"number"===typeof a)a=b("<div></div>").html(a);else return alert("SimpleModal Error: Unsupported data type: "+typeof a),this;this.create(a);this.open();b.isFunction(this.o.onShow)&&this.o.onShow.apply(this,[this.d]);return this},create:function(a){this.getDimensions();if(this.o.modal&&m)this.d.iframe=b('<iframe src="javascript:false;"></iframe>').css(b.extend(this.o.iframeCss,
{display:"none",opacity:0,position:"fixed",height:g[0],width:g[1],zIndex:this.o.zIndex,top:0,left:0})).appendTo(this.o.appendTo);this.d.overlay=b("<div></div>").attr("id",this.o.overlayId).addClass("simplemodal-overlay").css(b.extend(this.o.overlayCss,{display:"none",opacity:this.o.opacity/100,height:this.o.modal?j[0]:0,width:this.o.modal?j[1]:0,position:"fixed",left:0,top:0,zIndex:this.o.zIndex+1})).appendTo(this.o.appendTo);this.d.container=b("<div></div>").attr("id",this.o.containerId).addClass("simplemodal-container").css(b.extend({position:this.o.fixed?
"fixed":"absolute"},this.o.containerCss,{display:"none",zIndex:this.o.zIndex+2})).append(this.o.close&&this.o.closeHTML?b(this.o.closeHTML).addClass(this.o.closeClass):"").appendTo(this.o.appendTo);this.d.wrap=b("<div></div>").attr("tabIndex",-1).addClass("simplemodal-wrap").css({height:"100%",outline:0,width:"100%"}).appendTo(this.d.container);this.d.data=a.attr("id",a.attr("id")||this.o.dataId).addClass("simplemodal-data").css(b.extend(this.o.dataCss,{display:"none"})).appendTo("body");this.setContainerDimensions();
this.d.data.appendTo(this.d.wrap);(m||o)&&this.fixIE()},bindEvents:function(){var a=this;b("."+a.o.closeClass).bind("click.simplemodal",function(b){b.preventDefault();a.close()});a.o.modal&&a.o.close&&a.o.overlayClose&&a.d.overlay.bind("click.simplemodal",function(b){b.preventDefault();a.close()});n.bind("keydown.simplemodal",function(b){a.o.modal&&9===b.keyCode?a.watchTab(b):a.o.close&&a.o.escClose&&27===b.keyCode&&(b.preventDefault(),a.close())});l.bind("resize.simplemodal orientationchange.simplemodal",
function(){a.getDimensions();a.o.autoResize?a.setContainerDimensions():a.o.autoPosition&&a.setPosition();m||o?a.fixIE():a.o.modal&&(a.d.iframe&&a.d.iframe.css({height:g[0],width:g[1]}),a.d.overlay.css({height:j[0],width:j[1]}))})},unbindEvents:function(){b("."+this.o.closeClass).unbind("click.simplemodal");n.unbind("keydown.simplemodal");l.unbind(".simplemodal");this.d.overlay.unbind("click.simplemodal")},fixIE:function(){var a=this.o.position;b.each([this.d.iframe||null,!this.o.modal?null:this.d.overlay,
"fixed"===this.d.container.css("position")?this.d.container:null],function(b,e){if(e){var f=e[0].style;f.position="absolute";if(2>b)f.removeExpression("height"),f.removeExpression("width"),f.setExpression("height",'document.body.scrollHeight > document.body.clientHeight ? document.body.scrollHeight : document.body.clientHeight + "px"'),f.setExpression("width",'document.body.scrollWidth > document.body.clientWidth ? document.body.scrollWidth : document.body.clientWidth + "px"');else{var c,d;a&&a.constructor===
Array?(c=a[0]?"number"===typeof a[0]?a[0].toString():a[0].replace(/px/,""):e.css("top").replace(/px/,""),c=-1===c.indexOf("%")?c+' + (t = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"':parseInt(c.replace(/%/,""))+' * ((document.documentElement.clientHeight || document.body.clientHeight) / 100) + (t = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"',a[1]&&(d="number"===typeof a[1]?
a[1].toString():a[1].replace(/px/,""),d=-1===d.indexOf("%")?d+' + (t = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft) + "px"':parseInt(d.replace(/%/,""))+' * ((document.documentElement.clientWidth || document.body.clientWidth) / 100) + (t = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft) + "px"')):(c='(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (t = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"',
d='(document.documentElement.clientWidth || document.body.clientWidth) / 2 - (this.offsetWidth / 2) + (t = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft) + "px"');f.removeExpression("top");f.removeExpression("left");f.setExpression("top",c);f.setExpression("left",d)}}})},focus:function(a){var h=this,a=a&&-1!==b.inArray(a,["first","last"])?a:"first",e=b(":input:enabled:visible:"+a,h.d.wrap);setTimeout(function(){0<e.length?e.focus():h.d.wrap.focus()},
10)},getDimensions:function(){var a="undefined"===typeof window.innerHeight?l.height():window.innerHeight;j=[n.height(),n.width()];g=[a,l.width()]},getVal:function(a,b){return a?"number"===typeof a?a:"auto"===a?0:0<a.indexOf("%")?parseInt(a.replace(/%/,""))/100*("h"===b?g[0]:g[1]):parseInt(a.replace(/px/,"")):null},update:function(a,b){if(!this.d.data)return!1;this.d.origHeight=this.getVal(a,"h");this.d.origWidth=this.getVal(b,"w");this.d.data.hide();a&&this.d.container.css("height",a);b&&this.d.container.css("width",
b);this.setContainerDimensions();this.d.data.show();this.o.focus&&this.focus();this.unbindEvents();this.bindEvents()},setContainerDimensions:function(){var a=m||r,b=this.d.origHeight?this.d.origHeight:q?this.d.container.height():this.getVal(a?this.d.container[0].currentStyle.height:this.d.container.css("height"),"h"),a=this.d.origWidth?this.d.origWidth:q?this.d.container.width():this.getVal(a?this.d.container[0].currentStyle.width:this.d.container.css("width"),"w"),e=this.d.data.outerHeight(!0),f=
this.d.data.outerWidth(!0);this.d.origHeight=this.d.origHeight||b;this.d.origWidth=this.d.origWidth||a;var c=this.o.maxHeight?this.getVal(this.o.maxHeight,"h"):null,d=this.o.maxWidth?this.getVal(this.o.maxWidth,"w"):null,c=c&&c<g[0]?c:g[0],d=d&&d<g[1]?d:g[1],i=this.o.minHeight?this.getVal(this.o.minHeight,"h"):"auto",b=b?this.o.autoResize&&b>c?c:b<i?i:b:e?e>c?c:this.o.minHeight&&"auto"!==i&&e<i?i:e:i,c=this.o.minWidth?this.getVal(this.o.minWidth,"w"):"auto",a=a?this.o.autoResize&&a>d?d:a<c?c:a:f?
f>d?d:this.o.minWidth&&"auto"!==c&&f<c?c:f:c;this.d.container.css({height:b,width:a});this.d.wrap.css({overflow:e>b||f>a?"auto":"visible"});this.o.autoPosition&&this.setPosition()},setPosition:function(){var a,b;a=g[0]/2-this.d.container.outerHeight(!0)/2;b=g[1]/2-this.d.container.outerWidth(!0)/2;var e="fixed"!==this.d.container.css("position")?l.scrollTop():0;this.o.position&&"[object Array]"===Object.prototype.toString.call(this.o.position)?(a=e+(this.o.position[0]||a),b=this.o.position[1]||b):
a=e+a;this.d.container.css({left:b,top:a})},watchTab:function(a){if(0<b(a.target).parents(".simplemodal-container").length){if(this.inputs=b(":input:enabled:visible:first, :input:enabled:visible:last",this.d.data[0]),!a.shiftKey&&a.target===this.inputs[this.inputs.length-1]||a.shiftKey&&a.target===this.inputs[0]||0===this.inputs.length)a.preventDefault(),this.focus(a.shiftKey?"last":"first")}else a.preventDefault(),this.focus()},open:function(){this.d.iframe&&this.d.iframe.show();b.isFunction(this.o.onOpen)?
this.o.onOpen.apply(this,[this.d]):(this.d.overlay.show(),this.d.container.show(),this.d.data.show());this.o.focus&&this.focus();this.bindEvents()},close:function(){if(!this.d.data)return!1;this.unbindEvents();if(b.isFunction(this.o.onClose)&&!this.occb)this.occb=!0,this.o.onClose.apply(this,[this.d]);else{if(this.d.placeholder){var a=b("#simplemodal-placeholder");this.o.persist?a.replaceWith(this.d.data.removeClass("simplemodal-data").css("display",this.display)):(this.d.data.hide().remove(),a.replaceWith(this.d.orig))}else this.d.data.hide().remove();
this.d.container.hide().remove();this.d.overlay.hide();this.d.iframe&&this.d.iframe.hide().remove();this.d.overlay.remove();this.d={}}}}});
;
/**
 * FP CORS helper
 *
 * Some of the ajax requests, particularly the endless scroll, were
 * relative; however, with all the subdomains that may be causing
 * an issue for caching
 *
 * Some assumptions
 * (1) URL parameters passed in will be absolute
 */

(function(w, $, undefined){

  /**
   * Detect native CORS support
   * Note: really the only polyfill will be for IE 8 and 9
   */

  var IEWithoutCORS = !$.support.cors && !!w.XDomainRequest;

  /**
   * Regular expression for absolute URL beginning
   */

  var absRgx = /^https?:\/\//;

  /**
   * XDR preparation before sending to response handler
   *
   * @param {String} res
   * @param {String} resType
   * @return {Mixed} data
   * @api private
   */

  function xdrPrep(res, resType) {
    if ('json' === resType) {
      return $.parseJSON(res);
    }

    return $.trim(res);
  }

  /**
   * XDR polyfill
   *
   * @param {String} method
   * @param {String} url
   * @param {Function} success (optional)
   * @param {String} resType (optional)
   * @return {Object} deferred (promise)
   * @api private
   */

  function xdrReq(method, url, success, resType) {

    /**
     * Create xdr instance and a promise object
     */

    var xdr = new XDomainRequest()
      , def = $.Deferred();

    var res;
    
    xdr.open(method, url);

    /**
     * Success callback
     */

    xdr.onload = function(){
      res = xdrPrep(xdr.responseText, resType);

      /**
       * If a success callback is provided, pass the response
       * to it
       */

      if (success) {
        success(res);
      }

      /**
       * Resolve the deferred
       */

      def.resolve(res);
    };

    xdr.onprogress = function(){

      /**
       * Empty, but all handlers must be defined
       * [see bug](http://stackoverflow.com/a/18392382/1858091)
       */
    };

    xdr.ontimeout = function(){
      def.reject();
    };
    xdr.onerror = function(){
      def.reject();
    };

    /**
     * Not sure if completely necessary but it is working (and
     * from one of the sources in the SO answer)
     */

    setTimeout(
      function(){
        xdr.send();
      },
      0
    );

    return def;
  }

  /**
   * Public interface
   */

  $.corsfp = {};

  /**
   * Ajax get request
   *
   * @param {String} url
   * @param {Function} success
   * @param {String} resType
   * @return {Object} deferred (promise)
   * @api public
   */

  $.corsfp.get = function(url, success, resType){
    return IEWithoutCORS && absRgx.test(url) && location.host !== url.split('/')[2]
      ? xdrReq('get', url, success, resType)
      : $.get(url, undefined, success, resType);
  };

  /**
   * Ajax get request
   *
   * @param {String} url
   * @param {Function} success
   * @return {Object} deferred (promise)
   * @api public
   */

  $.corsfp.getJSON = function(url, success){
    return $.corsfp.get(url, success, 'json');
  };

  /**
   * Tell whether IE 8 or 9
   *
   * @return {Boolean} isOldIE
   * @api public
   */

  $.corsfp.isOldIE = function(){
    return IEWithoutCORS;
  };

})(window, jQuery);
;
/*!
 * jQuery-ajaxTransport-XDomainRequest - v1.0.4 - 2015-03-05
 * https://github.com/MoonScript/jQuery-ajaxTransport-XDomainRequest
 * Copyright (c) 2015 Jason Moon (@JSONMOON)
 * Licensed MIT (/blob/master/LICENSE.txt)
 */
(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as anonymous module.
    define(['jquery'], factory);
  } else if (typeof exports === 'object') {
    // CommonJS
    module.exports = factory(require('jquery'));
  } else {
    // Browser globals.
    factory(jQuery);
  }
}(function($) {

// Only continue if we're on IE8/IE9 with jQuery 1.5+ (contains the ajaxTransport function)
if ($.support.cors || !$.ajaxTransport || !window.XDomainRequest) {
  return $;
}

var httpRegEx = /^(https?:)?\/\//i;
var getOrPostRegEx = /^get|post$/i;
var sameSchemeRegEx = new RegExp('^(\/\/|' + location.protocol + ')', 'i');

// ajaxTransport exists in jQuery 1.5+
$.ajaxTransport('* text html xml json', function(options, userOptions, jqXHR) {

  // Only continue if the request is: asynchronous, uses GET or POST method, has HTTP or HTTPS protocol, and has the same scheme as the calling page
  if (!options.crossDomain || !options.async || !getOrPostRegEx.test(options.type) || !httpRegEx.test(options.url) || !sameSchemeRegEx.test(options.url)) {
    return;
  }

  var xdr = null;

  return {
    send: function(headers, complete) {
      var postData = '';
      var userType = (userOptions.dataType || '').toLowerCase();

      xdr = new XDomainRequest();
      if (/^\d+$/.test(userOptions.timeout)) {
        xdr.timeout = userOptions.timeout;
      }

      xdr.ontimeout = function() {
        complete(500, 'timeout');
      };

      xdr.onload = function() {
        var allResponseHeaders = 'Content-Length: ' + xdr.responseText.length + '\r\nContent-Type: ' + xdr.contentType;
        var status = {
          code: 200,
          message: 'success'
        };
        var responses = {
          text: xdr.responseText
        };
        try {
          if (userType === 'html' || /text\/html/i.test(xdr.contentType)) {
            responses.html = xdr.responseText;
          } else if (userType === 'json' || (userType !== 'text' && /\/json/i.test(xdr.contentType))) {
            try {
              responses.json = $.parseJSON(xdr.responseText);
            } catch(e) {
              status.code = 500;
              status.message = 'parseerror';
              //throw 'Invalid JSON: ' + xdr.responseText;
            }
          } else if (userType === 'xml' || (userType !== 'text' && /\/xml/i.test(xdr.contentType))) {
            var doc = new ActiveXObject('Microsoft.XMLDOM');
            doc.async = false;
            try {
              doc.loadXML(xdr.responseText);
            } catch(e) {
              doc = undefined;
            }
            if (!doc || !doc.documentElement || doc.getElementsByTagName('parsererror').length) {
              status.code = 500;
              status.message = 'parseerror';
              throw 'Invalid XML: ' + xdr.responseText;
            }
            responses.xml = doc;
          }
        } catch(parseMessage) {
          throw parseMessage;
        } finally {
          complete(status.code, status.message, responses, allResponseHeaders);
        }
      };

      // set an empty handler for 'onprogress' so requests don't get aborted
      xdr.onprogress = function(){};
      xdr.onerror = function() {
        complete(500, 'error', {
          text: xdr.responseText
        });
      };

      if (userOptions.data) {
        postData = ($.type(userOptions.data) === 'string') ? userOptions.data : $.param(userOptions.data);
      }
      xdr.open(options.type, options.url);
      xdr.send(postData);
    },
    abort: function() {
      if (xdr) {
        xdr.abort();
      }
    }
  };
});

return $;

}));;
/**
 *
 * isMobile Detection Library 0.4.1
 * 
 * ( un-minified )
 * https://cdnjs.cloudflare.com/ajax/libs/ismobilejs/0.4.1/isMobile.js
 */


(function () {var f=/iPhone/i,j=/iPod/i,p=/iPad/i,g=/\bAndroid(?:.+)Mobile\b/i,i=/Android/i,d=/\bAndroid(?:.+)SD4930UR\b/i,e=/\bAndroid(?:.+)(?:KF[A-Z]{2,4})\b/i,c=/Windows Phone/i,h=/\bWindows(?:.+)ARM\b/i,k=/BlackBerry/i,l=/BB10/i,m=/Opera Mini/i,n=/\b(CriOS|Chrome)(?:.+)Mobile/i,o=/Mobile(?:.+)Firefox\b/i;function b($,a){return $.test(a)}function a($){var a=($=$||("undefined"!=typeof navigator?navigator.userAgent:"")).split("[FBAN");void 0!==a[1]&&($=a[0]),void 0!==(a=$.split("Twitter"))[1]&&($=a[0]);var r={apple:{phone:b(f,$)&&!b(c,$),ipod:b(j,$),tablet:!b(f,$)&&b(p,$)&&!b(c,$),device:(b(f,$)||b(j,$)||b(p,$))&&!b(c,$)},amazon:{phone:b(d,$),tablet:!b(d,$)&&b(e,$),device:b(d,$)||b(e,$)},android:{phone:!b(c,$)&&b(d,$)||!b(c,$)&&b(g,$),tablet:!b(c,$)&&!b(d,$)&&!b(g,$)&&(b(e,$)||b(i,$)),device:!b(c,$)&&(b(d,$)||b(e,$)||b(g,$)||b(i,$))||b(/\bokhttp\b/i,$)},windows:{phone:b(c,$),tablet:b(h,$),device:b(c,$)||b(h,$)},other:{blackberry:b(k,$),blackberry10:b(l,$),opera:b(m,$),firefox:b(o,$),chrome:b(n,$),device:b(k,$)||b(l,$)||b(m,$)||b(o,$)||b(n,$)},any:!1,phone:!1,tablet:!1};return r.any=r.apple.device||r.android.device||r.windows.device||r.other.device,r.phone=r.apple.phone||r.android.phone||r.windows.phone,r.tablet=r.apple.tablet||r.android.tablet||r.windows.tablet,r}window.isMobile=a();})();;
!function($){

	if( $('.post-content').find('iframe').length > 0 ) {

		function getAspectRatio(width, height) {
			var ratio = width / height;
			return ( Math.abs( ratio - 4 / 3 ) < Math.abs( ratio - 16 / 9 ) ) ? '4:3' : '16:9';
		}

		$('.post-content iframe[src*="youtube.com"], .post-content iframe[src*="vimeo.com"]').each(function(){

			var _this = $(this);

			var iframe_width = _this.attr('width');
			var iframe_height = _this.attr('height');

			var aspect_ratio = getAspectRatio(iframe_width, iframe_height);

			if( !_this.parent().hasClass('video-container') ) {
				if( aspect_ratio == '4:3' ) {
					_this.wrap('<div class="video-container video-container-4x3"></div>');
				} else {
					_this.wrap('<div class="video-container video-container-16x9"></div>');
				}
			}

		});
	}

}(jQuery);
;
