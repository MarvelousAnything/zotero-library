// Generated by CoffeeScript 1.6.2
/**
@license Sticky-kit v1.1.2 | MIT | Leaf Corcoran 2015 | http://leafo.net
*/

(function() {
  var $, win;

  $ = this.jQuery || window.jQuery;

  win = $(window);

  $.fn.stick_in_parent = function(opts) {
    var doc, elm, enable_bottoming, inner_scrolling, manual_spacer, offset_top, outer_width, parent_selector, recalc_every, sticky_class, _fn, _i, _len;

    if (opts == null) {
      opts = {};
    }
    sticky_class = opts.sticky_class, inner_scrolling = opts.inner_scrolling, recalc_every = opts.recalc_every, parent_selector = opts.parent, offset_top = opts.offset_top, manual_spacer = opts.spacer, enable_bottoming = opts.bottoming;
    if (offset_top == null) {
      offset_top = 0;
    }
    if (parent_selector == null) {
      parent_selector = void 0;
    }
    if (inner_scrolling == null) {
      inner_scrolling = true;
    }
    if (sticky_class == null) {
      sticky_class = "is_stuck";
    }
    doc = $(document);
    if (enable_bottoming == null) {
      enable_bottoming = true;
    }
    outer_width = function(el) {
      var computed, w, _el;

      if (window.getComputedStyle) {
        _el = el[0];
        computed = window.getComputedStyle(el[0]);
        w = parseFloat(computed.getPropertyValue("width")) + parseFloat(computed.getPropertyValue("margin-left")) + parseFloat(computed.getPropertyValue("margin-right"));
        if (computed.getPropertyValue("box-sizing") !== "border-box") {
          w += parseFloat(computed.getPropertyValue("border-left-width")) + parseFloat(computed.getPropertyValue("border-right-width")) + parseFloat(computed.getPropertyValue("padding-left")) + parseFloat(computed.getPropertyValue("padding-right"));
        }
        return w;
      } else {
        return el.outerWidth(true);
      }
    };
    _fn = function(elm, padding_bottom, parent_top, parent_height, top, height, el_float, detached) {
      var bottomed, detach, fixed, last_pos, last_scroll_height, offset, parent, recalc, recalc_and_tick, recalc_counter, spacer, tick;

      if (elm.data("sticky_kit")) {
        return;
      }
      elm.data("sticky_kit", true);
      last_scroll_height = doc.height();
      parent = elm.parent();
      if (parent_selector != null) {
        parent = parent.closest(parent_selector);
      }
      if (!parent.length) {
        throw "failed to find stick parent";
      }
      fixed = false;
      bottomed = false;
      spacer = manual_spacer != null ? manual_spacer && elm.closest(manual_spacer) : $("<div />");
      if (spacer) {
        spacer.css('position', elm.css('position'));
      }
      recalc = function() {
        var border_top, padding_top, restore;

        if (detached) {
          return;
        }
        last_scroll_height = doc.height();
        border_top = parseInt(parent.css("border-top-width"), 10);
        padding_top = parseInt(parent.css("padding-top"), 10);
        padding_bottom = parseInt(parent.css("padding-bottom"), 10);
        parent_top = parent.offset().top + border_top + padding_top;
        parent_height = parent.height();
        if (fixed) {
          fixed = false;
          bottomed = false;
          if (manual_spacer == null) {
            elm.insertAfter(spacer);
            spacer.detach();
          }
          elm.css({
            position: "",
            top: "",
            width: "",
            bottom: ""
          }).removeClass(sticky_class);
          restore = true;
        }
        top = elm.offset().top - (parseInt(elm.css("margin-top"), 10) || 0) - offset_top;
        height = elm.outerHeight(true);
        el_float = elm.css("float");
        if (spacer) {
          spacer.css({
            width: outer_width(elm),
            height: height,
            display: elm.css("display"),
            "vertical-align": elm.css("vertical-align"),
            "float": el_float
          });
        }
        if (restore) {
          return tick();
        }
      };
      recalc();
      if (height === parent_height) {
        return;
      }
      last_pos = void 0;
      offset = offset_top;
      recalc_counter = recalc_every;
      tick = function() {
        var css, delta, recalced, scroll, will_bottom, win_height, check_top;

        if (detached) {
          return;
        }
        recalced = false;
        if (recalc_counter != null) {
          recalc_counter -= 1;
          if (recalc_counter <= 0) {
            recalc_counter = recalc_every;
            recalc();
            recalced = true;
          }
        }
        if (!recalced && doc.height() !== last_scroll_height) {
          recalc();
          recalced = true;
        }
        scroll = win.scrollTop();
        if (last_pos != null) {
          delta = scroll - last_pos;
        }
        last_pos = scroll;
        if (fixed) {
          if (enable_bottoming) {
            will_bottom = scroll + height + offset > parent_height + parent_top;
            if (bottomed && !will_bottom) {
              bottomed = false;
              elm.css({
                position: "fixed",
                bottom: "",
                top: offset
              }).trigger("sticky_kit:unbottom");
            }
          }
          if (scroll < top) {
            fixed = false;
            offset = offset_top;
            if (manual_spacer == null) {
              if (el_float === "left" || el_float === "right") {
                elm.insertAfter(spacer);
              }
              spacer.detach();
            }
            css = {
              position: "",
              width: "",
              top: ""
            };
            elm.css(css).removeClass(sticky_class).trigger("sticky_kit:unstick");
          }
          if (inner_scrolling) {
            win_height = win.height();
            if (height + offset_top > win_height) {
              if (!bottomed) {
                offset -= delta;
                offset = Math.max(win_height - height, offset);
                offset = Math.min(offset_top, offset);
                if (fixed) {
                  elm.css({
                    top: offset + "px"
                  });
                }
              }
            }
          }
        } else {
          if (elm.is(":visible") && scroll > top) {
            // HR-161
            check_top = elm.offset().top - (parseInt(elm.css("margin-top"), 10) || 0) - offset_top;
            if (check_top != top) {
              top = check_top;
            } else if (top > 0) {
              fixed = true;
              css = {
                position: "fixed",
                top: offset
              };
              css.width = elm.css("box-sizing") === "border-box" ? elm.outerWidth() + "px" : elm.width() + "px";
              elm.css(css).addClass(sticky_class);
              if (manual_spacer == null) {
                elm.after(spacer);
                if (el_float === "left" || el_float === "right") {
                  spacer.append(elm);
                }
              }
              elm.trigger("sticky_kit:stick");
            }
          }
        }
        if (fixed && enable_bottoming) {
          if (will_bottom == null) {
            will_bottom = scroll + height + offset > parent_height + parent_top;
          }
          if (!bottomed && will_bottom) {
            bottomed = true;
            if (parent.css("position") === "static") {
              parent.css({
                position: "relative"
              });
            }
            return elm.css({
              position: "absolute",
              bottom: padding_bottom,
              top: "auto"
            }).trigger("sticky_kit:bottom");
          }
        }
      };
      recalc_and_tick = function() {
        recalc();
        return tick();
      };
      detach = function() {
        detached = true;
        win.off("touchmove", tick);
        win.off("scroll", tick);
        win.off("resize", recalc_and_tick);
        $(document.body).off("sticky_kit:recalc", recalc_and_tick);
        elm.off("sticky_kit:detach", detach);
        elm.removeData("sticky_kit");
        elm.css({
          position: "",
          bottom: "",
          top: "",
          width: ""
        });
        parent.position("position", "");
        if (fixed) {
          if (manual_spacer == null) {
            if (el_float === "left" || el_float === "right") {
              elm.insertAfter(spacer);
            }
            spacer.remove();
          }
          return elm.removeClass(sticky_class);
        }
      };
      win.on("touchmove", tick);
      win.on("scroll", tick);
      win.on("resize", recalc_and_tick);
      $(document.body).on("sticky_kit:recalc", recalc_and_tick);
      elm.on("sticky_kit:detach", detach);
      return setTimeout(tick, 0);
    };
    for (_i = 0, _len = this.length; _i < _len; _i++) {
      elm = this[_i];
      _fn($(elm));
    }
    return this;
  };

}).call(this);
;
!function(t){var i=t(window);t.fn.visible=function(t,e,o){if(!(this.length<1)){var r=this.length>1?this.eq(0):this,n=r.get(0),f=i.width(),h=i.height(),o=o?o:"both",l=e===!0?n.offsetWidth*n.offsetHeight:!0;if("function"==typeof n.getBoundingClientRect){var g=n.getBoundingClientRect(),u=g.top>=0&&g.top<h,s=g.bottom>0&&g.bottom<=h,c=g.left>=0&&g.left<f,a=g.right>0&&g.right<=f,v=t?u||s:u&&s,b=t?c||a:c&&a;if("both"===o)return l&&v&&b;if("vertical"===o)return l&&v;if("horizontal"===o)return l&&b}else{var d=i.scrollTop(),p=d+h,w=i.scrollLeft(),m=w+f,y=r.offset(),z=y.top,B=z+r.height(),C=y.left,R=C+r.width(),j=t===!0?B:z,q=t===!0?z:B,H=t===!0?R:C,L=t===!0?C:R;if("both"===o)return!!l&&p>=q&&j>=d&&m>=L&&H>=w;if("vertical"===o)return!!l&&p>=q&&j>=d;if("horizontal"===o)return!!l&&m>=L&&H>=w}}}}(jQuery);
;
/**
 * @file
 * A JavaScript file for the theme.
 *
 * In order for this JavaScript to be loaded on pages, see the instructions in
 * the README.txt next to this file.
 */

// JavaScript should be made compatible with libraries other than jQuery by
// wrapping it with an "anonymous closure". See:
// - http://drupal.org/node/1446420
// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth

var h_body;
var documentTouched = false;

(function ($, Drupal, window, document, undefined) {

$(document).ready(function() {

  function getOgAttr(attr) {
    if (document.querySelector('[property="'+ attr +'"]')) {
      return document.querySelector('[property="'+ attr +'"]').getAttribute('content');
    } else {
      return '';
    }
  }

  jQuery('.caroufredsel_wrapper .most_popular_content a').live("touchstart", function(e){
    window.location.href = jQuery(this).attr('href');
  });

  jQuery('.share-box .share-button.more').click(function() {
    $(".share-box .navigation-social.modal").toggleClass("show");
  });

  jQuery('.share-box .facebook-share').click(function() {
    var link = jQuery(this).attr('data-link') || window.location.href;
    var name = jQuery(this).attr('data-name') || getOgAttr('og:title');
    var description = jQuery(this).attr('data-description') || getOgAttr('og:description');
    var baseUrl  = "https://www.facebook.com/dialog/feed?app_id=" + getOgAttr('fb:app_id');
    baseUrl += "&link=" + encodeURIComponent(link);
    baseUrl += "&name=" + encodeURIComponent(name);
    baseUrl += "&redirect_uri=" + encodeURIComponent(link);
    baseUrl += "&display=popup";
    window.open(baseUrl,'Facebook Share', 'height=350,width=650');
  });

  jQuery('.share-box .google-share').click(function() {
    var link = jQuery(this).attr('data-link') || window.location.href;
    window.open(
      'https://plus.google.com/share?url=' + encodeURI(link)
    );
  });

  jQuery('.share-box .linkedin-share').click(function() {
    var link = jQuery(this).attr('data-link') || window.location.href;
    var baseUrl = 'https://www.linkedin.com/shareArticle',
        mini = true,
        url = encodeURI(link);

    window.open(
      baseUrl + '?mini=' + mini + '&url=' + url
    );
  });

  jQuery('.share-box .twitter-share').click(function() {
    var link = jQuery(this).attr('data-link') || window.location.href;
    var og_title = getOgAttr('og:title'),
        title = jQuery(this).attr('data-shareline') || og_title,
        text = encodeURIComponent(title + ' ' + link),
        href = "http://twitter.com/intent/tweet?text=" + text;

    jQuery(this).attr('href', href);
  });

  jQuery('.share-box .mail-share').click(function() {
    var link = jQuery(this).attr('data-link') || window.location.href;
    var baseUrl = 'mailto:?',
        articleTitle = getOgAttr('og:title'),
        articleUrl = link,
        encodedArticleTitle = encodeURIComponent(articleTitle),
        body = encodeURIComponent('From TheHill.com:\n\n' + articleTitle + '\n\n' + articleUrl),
        href = baseUrl + 'subject=' + encodedArticleTitle + '&body=' + body;

    jQuery(this).attr('href', href);
  });

  // navigation
  $("#main-menu .menu-views").each(function() {
    $(this).parent().css('padding-right', 0);
  });

  var _offset = $("body").hasClass("admin-menu") ? 29 : 0;
  var top = 0;
  if ($('#navigation').length > 0) {
    setInterval(function(){
      var pageObjectDfpBlock = document.querySelector('[id*=block-dfp-1x1]');
      var pageObjectUtContainer = document.querySelector('body .ut_container');
      //check if has block dfp & block in body check height 300ms
      if(pageObjectDfpBlock && pageObjectUtContainer){
        setInterval(function(){
          top = document.querySelector('#navigation').getBoundingClientRect();
        }, 500);
      } else {
        setInterval(function(){top = document.querySelector('#navigation').getBoundingClientRect();},300);
      }
    }, 300);
  }
  //$('#header').height($('#header').height());
  $(window).scroll(function (event) {
    var pageObjectHeaderHeight;
    var pageObjectDfpBlock = document.querySelector('[id*=block-dfp-1x1]');
    var pageObjectUtContainer = document.querySelector('body .ut_container');
    // var pageObjectPageTop = document.querySelector('#page').getBoundingClientRect();
    if(pageObjectDfpBlock && pageObjectUtContainer){
      pageObjectHeaderHeight = document.querySelector('body #header').offsetHeight;
      top = document.querySelector('#navigation').getBoundingClientRect();
      var y = ($(this).scrollTop()) - pageObjectUtContainer.offsetHeight;
    } else {
      pageObjectHeaderHeight = document.querySelector('body #header').offsetHeight;
      top = document.querySelector('#navigation').getBoundingClientRect();
      var y = $(this).scrollTop();
    }

    var documentScrollLeft = $(document).scrollLeft();
    $('#header > div.floating-block-active').css({'right': documentScrollLeft});
    // if (y > pageObjectPageTop.top) {
    if (y > 0) {
      if (!$('#header > div').hasClass("floating-block-active")) {
        $('#header > div').addClass('floating-block-active');
        $('body #header').css('height', pageObjectHeaderHeight);
      }
    } else {
      $('#header > div').removeClass('floating-block-active').removeAttr('style');
      $('body #header').removeAttr('style');
    }

    // Floating DPF
    var docViewTop = jQuery(window).scrollTop();
    var floatingAd = jQuery('.left-sidebar-2 > #dfp-ad-floating');
    var floatingAdClose = jQuery('.left-sidebar-2 > #dfp-ad-floating .close');

    if (jQuery('body.page-node #content > article').length) {
      var contentHeight = jQuery('body.page-node #content > article').height();
    } else {
      var contentHeight = jQuery('#main').height();
    }

    if (floatingAd && !floatingAd.is(':visible') && (docViewTop * 2) > contentHeight) {
      floatingAd.show().animate({width:300});
      if (floatingAdClose) {
        floatingAdClose.click(function() {
          floatingAd.remove();
        });
        if (floatingAdClose.attr('data-timeout')) {
          setTimeout(function(){
            floatingAdClose.click();
          }, floatingAdClose.attr('data-timeout'));
        }
      }
    }

    if(floatingAd && floatingAd.is(':visible')) {
      var path = window.location.pathname;
      var nid = path.match(/\d+/)[0];

      var floatingAdTarget = floatingAd[0];
      var adTargetNode = jQuery(floatingAdTarget).parents('.scrolling-content-item');

      adTargetNode = adTargetNode.length ? adTargetNode : jQuery(floatingAdTarget).parents('.scrolling-content');
      var targetNodeUrl = jQuery(adTargetNode).attr('data-url');

      var adTargetNid = targetNodeUrl ? targetNodeUrl.match(/\d+/)[0] : nid;

      var currentNode = jQuery('.node-' + nid);
      var div = jQuery(currentNode).next('.region').find('.OUTBRAIN');

      if(div.length && nid === adTargetNid) {
        var windowMeasure = docViewTop + jQuery(window).height();
        var outbrainRect = jQuery(div)[0].getBoundingClientRect();
        var adRect = jQuery(floatingAdTarget)[0].getBoundingClientRect();

        var outPctTop = (outbrainRect.top / windowMeasure);
        var adPctBottom = ((adRect.top + adRect.height) / windowMeasure);

        if(adPctBottom >= outPctTop) {
          floatingAdClose.click();
        }
      }
    }
  });

  if (window.innerHeight > 0) {
    $('#dfp-ad-overlay').height(window.innerHeight);
  }

  $(window).bind('orientationchange', function(event) {
    if (window.innerHeight > 0) {
      $('#dfp-ad-overlay').height(window.innerHeight);
    }
  });

  googletag.cmd.push(function() {
    googletag.pubads().addEventListener('slotRenderEnded', function(event) {
      if ($('#' + event.slot.getSlotElementId()).closest('#dfp-adhesion-footer').length && !event.isEmpty) {
        if ($('#dfp-adhesion-footer .block-dfp').find(".dfp-inner:visible").length) {
          $('#dfp-adhesion-footer').css('visibility','visible');
        }
      }
      if (event.slot.getSlotElementId() == "dfp-ad-modal_window_ad" && !event.isEmpty) {
        //if ($('#dfp-ad-overlay .block-dfp').find("iframe:not([id*=hidden])").length) {
        if ($('#dfp-ad-overlay .block-dfp').find(".dfp-inner:visible").length) {
           $('#dfp-ad-overlay').css('visibility','visible');
           setTimeout(function(){
             $('#dfp-ad-overlay .dfp-inner').hide();
             $('#dfp-ad-overlay').css('visibility','hidden');
           }, Drupal.settings.ad_timeout);
        }
        if (typeof Drupal.settings.thehill_mostpopular !== 'undefined' &&  Drupal.settings.thehill_mostpopular.tag !== '') {
          refreshSlot(Drupal.settings.thehill_mostpopular.tag);
        }
      }
    });
  });

  $('#dfp-adhesion-footer .hide_overlay').click(function (e) {
    e.preventDefault();
    $('#dfp-adhesion-footer .dfp-inner').hide();
    $('#dfp-adhesion-footer').css('visibility','hidden');
  });

  $('#dfp-ad-overlay .hide_overlay').click(function(e) {
    e.preventDefault();
    $('#dfp-ad-overlay .dfp-inner').hide();
    $('#dfp-ad-overlay').css('visibility','hidden');
  });

// signup_form
  if ($("#cc_signup_form_1").size())
  {
    var o = jQuery("#block-constant-contact-1");
    var f = $("#cc_signup_form_1");
    var h = o.height();
    if ($("#cc_signup_form_1 .captcha").length > 0) {
      h = h + 107;
    }
    o.height(121);

    $("#cc_signup_form_1 .form-text").first().focus(function()
    {
      o.animate({"height": h});
    });
    if ($('.signup-error',f).length > 0) {
      if (o.length > 0) {
        o.animate({"height": h});
        var to = o.position().top - $('#header').height();
        $("html, body").animate({ scrollTop: to });
      }
      $('.signup-error').each(function(){
        if (!$(this).hasClass('processed')) {
          item_class = $(this).attr('class').replace('signup-error ', '');
          parent = $('#'+item_class).parent();
          $(this).detach().appendTo(parent);
          $(this).addClass('processed');
        }
      });
    }
    $('.error', f).focus(function(){
      $(this).removeClass('error');
      $(this).parent().find('.signup-error').hide();
    });
  }

// add social-share-separator
  $("#block-social-share-social-share > a").each(function(i) {
    if ($(this).is(":visible") && i > 0) {
      $(this).before($("<span class='social-share-separator'></span>"));
    }
  });
  var activeLinks = $('#block-system-main-menu a.active')
      ,topLevelActiveLinks = $('#block-system-main-menu>ul>li>a.active')
  activeLinks.addClass('forced-active-trail')
    .parent('li').addClass('forced-active-trail')

  /**
    * if active link in menu presents repeatedly
    * and in top level of menu presists one of them
    * we will delete classes ['active-trail','forced-active-trail'] in li elements
    * that has nested ul with active links (a)
    *
   **/
  if( activeLinks.length > 1 && topLevelActiveLinks.length ){
    $('#block-system-main-menu .expanded ul a.active').parents('li')
      .removeClass('active-trail forced-active-trail');
  }

  var body = $('.node-people.view-mode-full .field-name-body .field-items');
  if (body.length != 0) {
    var body_item = body.find('.field-item');
    if (body_item.text().length > 300) {
      h_body = body_item.height();
      body.append('<span class="more">More</span>').find('.more').click(function() {
        var more = $(this);
        if (body_item.hasClass('expanded')) {
          body_item.removeClass('expanded').animate({ height: h_body }, 'fast', function() {
            more.text('More');
          });
        } else {
          var h_max = body_item.css('height', 'auto').height();
          body_item.height(h_body).addClass('expanded').animate({ height: h_max }, 'fast', function() {
            more.text('Close');
          });
        }
      });
    }
  }

  $('.sponsored_info').mouseenter(function() {
    var $content = $(this).next().show();
    if (!$content.hasClass('processed')) {
      $content.addClass('processed').mouseleave(function(){
        $(this).hide();
      })
    }
  });

  // Changes disqus comment format
  var step = 1;
  chekDisqusComment = setInterval(function() {
    _comment = $('.disqus-comments').text();
    if (_comment.length > 4) {
      _num = parseInt(_comment);
      _count = (!isNaN(_num)) ? _num : 0;
      $('.disqus-comments').html("<span></span> " + _count.toLocaleString("en")).show();
      $('#show-disqus-comments.show-comments > span').html("(" + _count.toLocaleString("en") + ")");
      clearInterval(chekDisqusComment);
    } else if (step >= 250) {
      clearInterval(chekDisqusComment);
    }
    ++step;
  }, 200);

  // Add arrow to Columnist dropdown
  $(".page-columnists #content ul.term-queue-links li").first().find("a").append('<span class="arrow">arrow</span>');

  // Signup Page
  $(".page-signup .form-type-checkboxes .form-type-checkbox").each(function(i, elem) {
    $checkBox = $(this);
    if ((i == 0) && ($("#cc_signup_form_1 .form-item .signup-error").length == 0)) {
      $checkBox.addClass("selected");
      $checkBox.find("input[type='checkbox']").attr("checked", "checked");
    } else {
      checkbox = $checkBox.find("input[type='checkbox']");
      if (checkbox.is(":checked")) {
        $checkBox.addClass("selected");
      }
    }
  });
  $(".page-signup .form-type-checkboxes .form-type-checkbox, .events-newsletter-signup .form-type-checkboxes .form-type-checkbox").click(function() {
    $checkBox = $(this);
    if ($checkBox.hasClass("selected")) {
      $checkBox.removeClass("selected");
      $checkBox.find("input[type='checkbox']").removeAttr("checked");
    } else {
      $checkBox.addClass("selected");
      $checkBox.find("input[type='checkbox']").attr("checked", "checked");
    }
  });
  $(".page-signup .form-type-checkboxes .form-type-checkbox-select-all").click(function() {
    $checkBox = $(this);
    if ($checkBox.hasClass("selected")) {
      $checkBox.removeClass("selected");
      $(".page-signup .form-type-checkboxes .form-type-checkbox").each(function(i) {
        if (i > 0) {
          $check_box = $(this);
          if ($check_box.hasClass("selected")) {
            $check_box.removeClass("selected");
            $check_box.find("input[type='checkbox']").removeAttr("checked");
          }
        }
      });
    } else {
      $checkBox.addClass("selected");
      $(".page-signup .form-type-checkboxes .form-type-checkbox").each(function(i) {
        if (i > 0) {
          $check_box = $(this);
          if (!$check_box.hasClass("selected")) {
            $check_box.addClass("selected");
            $check_box.find("input[type='checkbox']").attr("checked", "checked");
          }
        }
      });
    }
  });

  $('.events-newsletter-signup #main #thehill_events_newsletter_signup_form input[type="submit"]').on('click', function(e) {
    e.preventDefault();
    var empty_fields = false;
    var form = $('#thehill_events_newsletter_signup_form');
    var text_items = form.children().children('.form-type-textfield').children('input');

    var errors = [];
    for(var i=0;i < text_items.length; i++) {
      var id = $(text_items[i]).attr('id');
      var val = $(text_items[i]).val();
      if(id === 'edit-email' && val.length > 0) {
          val = val.trim();
          $(text_items[i]).attr('value', val);
          var valid = validateEmail(val);
          if(!valid) {
            $(text_items[i]).addClass('error');
            errors.push('Please enter a valid email address');
          } else{
            $(text_items[i]).removeClass('error');
          }
      } else if(id === 'edit-zip-code' && val.length > 0) {
          if(val.length !== 5 || isNaN(parseInt(val))) {
            $(text_items[i]).addClass('error');
            errors.push('Please enter a valid zip code');
          } else{
            $(text_items[i]).removeClass('error');
          }
      } else {
        if(val.length === 0) {
          $(text_items[i]).addClass('error');
          empty_fields = true;
        } else{
          $(text_items[i]).removeClass('error');
        }
      }
    }
    if(empty_fields) errors.push('Please fill in all required fields');
    if(errors.length > 0) {
      $('.events-newsletter-signup #main .error-messages').remove();
      var div = "<div class='error-messages'>";
      for(var i=0; i < errors.length; i++) {
        div += '<p>* ' + errors[i] + '</p>';
      }
      div += '</div>'
      $(div).insertAfter($('.events-newsletter-signup #main .form-info'));
    } else {
      form.submit();
    }
  });

  function validateEmail(email) {
    var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
  }

  $("body").keydown(function( event ) {
    if (event.which === 33) {
      event.preventDefault();
      var y = $(window).scrollTop();
      $("html, body").animate({ scrollTop: y - $(window).height() + 165 }, 600);
    }
    if (event.which === 34) {
      event.preventDefault();
      var y = $(window).scrollTop();
      $("html, body").animate({ scrollTop: y + $(window).height() - 165 }, 600);
    }
  });

  $('.popup').click(function(event) {
    var width  = 575,
        height = 400,
        left   = ($(window).width()  - width)  / 2,
        top    = ($(window).height() - height) / 2,
        url    = $(this).attr('href'),
        opts   = 'status=1' +
                 ',width='  + width  +
                 ',height=' + height +
                 ',top='    + top    +
                 ',left='   + left;

    window.open(url, $(this).text(), opts);

    return false;
  });

/*
 * todo: maybe it better to fix it in php?
 * fix "Tuesday, July 29 at 04:45 pm to at 08:45 pm" to "Tuesday, July 29 at 04:45 pm to 08:45 pm"
 */
  jQuery(".field-type-datetime .date-display-single").each(function()
  {
    var _text = jQuery(this).text();
    if (_text.indexOf('to at') != -1)
    {
       _text = jQuery(this).find(".date-display-end").text();
      jQuery(this).find(".date-display-end").text(_text.replace("at ", ""));
    }
  });

  if (!jQuery("#page .scrolling-content-item").length) {
    var block_disqus = jQuery('#page .region-content-bottom .block-disqus');
    if (block_disqus.length) {
      block_disqus.hide();
      block_disqus.before('<div id="show-disqus-comments" class="show-comments">Load Text Comments <span></span></div>');
      jQuery('#show-disqus-comments').click(function() {
        const yappa_iframe = jQuery('.yappa-comments-iframe-instance');
        if (yappa_iframe.is(":visible")) {
          yappa_iframe.fadeOut();
          jQuery('#show-yappa-comments').html('Load Video Comments');
        }
        if (block_disqus.is(":visible")) {
          block_disqus.fadeOut();
          jQuery(this).html('Load Text Comments');
        } else {
          block_disqus.fadeIn();
          jQuery(this).html('Hide Text Comments');
        }
      });
    }
  }

  jQuery('.view-display-id-articles_just_in').bind('autorefresh_update', function(e,timestamp){
    Drupal.settings.views_autorefresh['articles-articles_just_in'].timestamp = timestamp;
    /*if (!jQuery('.just-in-refresh-total').length) {
      jQuery(this).find('.view-header').after('<div class="just-in-refresh-total" style="display:none;"><span>0</span> New</div>');
    }
    var refresh_total = jQuery('.just-in-refresh-total').addClass('visible');
    var new_items = jQuery('.view-display-id-articles_just_in div.views-row');
    if (new_items.length) {
      refresh_total.find('span').html(new_items.length);
      refresh_total.show();
    }
    refresh_total.click(function () {
      if (new_items.length) {
        var new_items_wrap = jQuery('.view-display-id-articles_just_in div.item-list ul');
        new_items.map(function () {
          var _li = jQuery('<li class="views-row h0"></li>').append(jQuery(this).clone().html());
          new_items_wrap.find('li').last().remove();
          new_items_wrap.prepend(_li);
          setTimeout(function(){
            _li.removeClass('h0');
          }, 0);
        });
        jQuery('.view-display-id-articles_just_in div.views-row').remove();
        refresh_total.removeClass('visible');
      }
    });*/
  });

  /**
   * Design #24247
   **/
  jQuery('.sticky_ads').each(function () {
    var _h = jQuery(this).data('height');
    if (_h > 0) {
      jQuery(this).parent().css({height: _h + 'px', position: 'relative'});
      jQuery(this).stick_in_parent({offset_top: jQuery('body').hasClass('admin-menu') ? 140 : 110});
    }
  });

  /**
   * Issue #25666
   */
  jQuery('.node-type-event-new .view-mode-full .field-name-body a img').each(function(){
    jQuery(this).parent().addClass('rollover-people-link');
  });

  /**
   * HR-923 iPad portrait page doesnt fit to viewport
   */
  if ($('body.smaller-size').length > 0) {
    var checkFitToViewport = function() {
      jQuery('html').css('zoom', 1);

      var outerWidth = jQuery(window).outerWidth();
      var innerWidth = jQuery('body').width();

      if (outerWidth < 768) {
        outerWidth = 768;
      }

      if (outerWidth < 1024 && outerWidth <= innerWidth && innerWidth > 0) {
        var zoom = Math.round((outerWidth / innerWidth) * 100) / 100;
        if (zoom > 0 && zoom < 1) {
          jQuery('html').css('zoom', zoom);
        } else {
          jQuery('html').css('zoom', '');
        }
      } else {
        jQuery('html').css('zoom', '');
      }
    }
  }
});

})(jQuery, Drupal, this, this.document);

(function ($) {
  $(document).ready(
    function () {
      var pageObjectExpandBtn = '.expanded-menu';
      var pageObjectExpandBttClose = '.expand-menu-close';
      var pageObjectParentExpandMenu = '.block.block-system.block-menu.first.last.odd';
      var pageObjectForClick = '.block.block-system.block-menu.first.last.odd, .expanded-menu';
      var pageObjectExpandListMenu = '.menu';
      var pageObjectWidth = 525;
      var pageObjectIconSearchWidth = 'icon-search-width';
      var pageObjectOpacityClass = 'opacity-form-icon';
      var pageObjectCloseSpan = '<span class="close-form-type-textfield"> </span>';
      var pageObjectCloseBtnIn = '.form-item.form-type-textfield.form-item-search-block-form';
      var pageObjectActionBtn = '#search-block-form .form-actions.form-wrapper';
      var pageObjectCloseBtn = '.close-form-type-textfield';
      var pageObjectNavigationRegion = '#block-menu-menu-top-menu';
      var pageObjectFloatIcon = '<a class="float-icon" href="/"></a>';
      var pageObjectFloatIconSelect = '.float-icon';
      var pageObjectFloatIconMenu = ' float-icon-pagination__menu';
      var pageObjectTitleBlock = '.block__title.block-title + ul';
      var pageObjectFloatIconBGPosition = ' bg-position-zero-pagination';
      var pageObjectHeaderBlocks = '#header .header_blocks';

      $(pageObjectCloseBtnIn).append(pageObjectCloseSpan);
      $(pageObjectNavigationRegion).prepend(pageObjectFloatIcon);
      $(pageObjectActionBtn).on(
        'click', function () {
          $(this).prev().width(pageObjectWidth);
          $(this).children().addClass(pageObjectOpacityClass);
          $(this).addClass(pageObjectIconSearchWidth);
          $(this).parent().addClass('active-search-form');
        });
        if($(pageObjectHeaderBlocks) && document.querySelector(pageObjectHeaderBlocks)) {
          var HeaderBlocksHeiht = document.querySelector(pageObjectHeaderBlocks).clientHeight;
          if(HeaderBlocksHeiht < 40) {
            document.querySelector(pageObjectHeaderBlocks).style.height = 0;
          }
        }
      $(pageObjectCloseBtn).on(
        'click', function () {
          $(this).parent().width(0);
          $(pageObjectActionBtn).children().removeClass(pageObjectOpacityClass);
          $(pageObjectActionBtn).removeClass(pageObjectIconSearchWidth);
          $(pageObjectActionBtn).parent().removeClass('active-search-form');
        });
      $(pageObjectExpandBtn).on('click', function(){
        $(pageObjectParentExpandMenu).addClass('show-expand-menu').animate({width:286});
        document.querySelector(pageObjectParentExpandMenu).style.overflow = 'auto';
        /*$(function () {
         var toolbox = $('#block-system-main-menu.block.block-system.block-menu.first.last.odd'),
          height = toolbox.height(),
          scrollHeight = toolbox.get(0).scrollHeight;
          toolbox.on('mousewheel', function(event, d) {
            if((this.scrollTop === (scrollHeight - height) && d <= 0) || (this.scrollTop === 0 && d > 0)) {
              event.preventDefault();
              console.log(scrollHeight);
            }
          });
        })*/
      });
      var expandMenu = document.querySelector(pageObjectParentExpandMenu);
      if (expandMenu && typeof expandMenu !== 'undefined') {
        expandMenu.addEventListener('scroll', scrollExpandMenu);
      }
      function scrollExpandMenu() {
        var expandMenuScrlH = expandMenu.scrollHeight - expandMenu.clientHeight;
        var expandMenuScrlPosition = expandMenu.scrollTop;
        if(expandMenuScrlPosition >= expandMenuScrlH) {
          expandMenu.scrollTop = expandMenuScrlH - 1;
        } else if(expandMenuScrlPosition == 0) {
          expandMenu.scrollTop = 1;
        }
      }
      $('#block-system-main-menu .menu .depth-1 > a').on('click',
        function () {
          if($(this).parent().children().length ==1) {
            $.cleanData($(this));
          } else {
            $(this).next().toggle( function() {
              $(this).addClass('d-block');
            });
            return false;
          }
        }).next().hide();
      $('#block-system-main-menu .menu .depth-1 > a[href="/policy"] + ul.menu').removeAttr('style');
      $(document).click(function(event) {
        if ($(event.target).closest(pageObjectForClick).length) return;
        $(pageObjectParentExpandMenu).animate({
          width:0
        });
        event.stopPropagation();
      });
      $(pageObjectExpandBttClose).click(function() {
        $(pageObjectParentExpandMenu).animate({
          width:0
        });
      });
      var pageObjectFooterSignUp = document.querySelector('#block-thehill-blocks-footer-signup');
      if(pageObjectFooterSignUp){
        var pageObjectSign = document.querySelector('#block-thehill-blocks-footer-signup input.form-text');
        var pageObjectSignLabel = document.querySelector('#block-thehill-blocks-footer-signup label');
        pageObjectSign.addEventListener("focus", focusLabel );
        function focusLabel() {
          pageObjectSignLabel.classList.add('top');
        }
        pageObjectSign.addEventListener("blur", lostFocusLabel);
        function lostFocusLabel() {
          pageObjectSignLabel.classList.remove('top');
        }
      }
      setTimeout(function(){
        if ($('#header_blocks .region-header .block-dfp').height() <= 0) {
          $('#header_blocks .region-header').addClass('d-none');
        }
      }, 500);
      if($('.alphabetical_navigation').length > 0){
        $('.alphabetical_navigation')
                                    .append('<span class="left-arrow"></span>')
                                    .append('<span class="right-arrow"></span>');
        function hideArrow(){
          var scroll = $('.alphabetical_navigation ul').scrollLeft();
          //console.log('hideArrow ' + scroll);
          if(scroll <= 0) {
            $('.left-arrow').addClass('d-none');
          } else if (scroll > 700) {
            $('.right-arrow').addClass('d-none');
            $('.left-arrow').removeClass('d-none');
          } else {
            $('.left-arrow').removeClass('d-none');
            $('.right-arrow').removeClass('d-none');
          }
        }
        hideArrow();
        $('.alphabetical_navigation .right-arrow').on('click', function(){
          var scroll = $('.alphabetical_navigation ul').scrollLeft();
          if(scroll <= 100) {
            $('.alphabetical_navigation ul').scrollLeft(560);
            //console.log('right scrooll ' + scroll);
          } else if (scroll <= 560) {
            $('.alphabetical_navigation ul').scrollLeft(880);
            //console.log('right if else ' + scroll);
          }
          hideArrow();
        });
        $('.alphabetical_navigation .left-arrow').on('click', function(){
          var scroll = $('.alphabetical_navigation ul').scrollLeft();
          if(scroll <= 560) {
            $('.alphabetical_navigation ul').scrollLeft(0);
            //console.log('left scrl' + scroll);
          } else if (scroll >= 560) {
            $('.alphabetical_navigation ul').scrollLeft(560);
          }
          hideArrow();
        });
      }

      setInterval(function () {
        var pageObjectDfpBlock = document.querySelector('[id*=block-dfp-1x1]');
        var pageObjectUtContainer = document.querySelector('body .ut_container');
        var pageObjectIdUtContainer = document.querySelector('[id*=ut_container]')
        var pageObjectNavigation = document.querySelector('#header #navigation');
        var pageObjectExpandedBtn = document.querySelector('#block-system-main-menu');
        var pageObjectAdminPannel = document.querySelector('body.admin-menu #admin-menu');
        var pageObjectHeaderDFP = document.querySelector('[id*=block-dfp-1x1]');

        if(pageObjectDfpBlock && pageObjectUtContainer && pageObjectAdminPannel && pageObjectExpandedBtn && pageObjectIdUtContainer){
          pageObjectExpandedBtn.style.top = '29px';
          pageObjectIdUtContainer.style.zIndex = '1';
        } else if (pageObjectDfpBlock && pageObjectUtContainer && pageObjectIdUtContainer && pageObjectExpandedBtn && pageObjectHeaderDFP) {
          var pageObjectUtContainerHeight = document.querySelector('body .ut_container').offsetHeight;
          var pageObjectNavigationTop = pageObjectNavigation.getBoundingClientRect();
          var pageObjectHeaderHeight = document.querySelector('body #header').offsetHeight;
          pageObjectExpandedBtn.style.top = 0;
          pageObjectIdUtContainer.style.zIndex = '1';
          pageObjectHeaderDFP.style.height = 0;
          pageObjectHeaderDFP.style.lineHeight = 0;
          pageObjectHeaderDFP.style.margin = 0;
        }
      },300);

      $('#block-menu-menu-top-menu li.is-expanded > a').each(function(){
        $(this).attr('data-touched', 0);
      });
      $('#block-menu-menu-top-menu li.is-expanded > a').on('touchstart',function(e){
        documentTouched = true;
      });
      $('#block-menu-menu-top-menu li.is-expanded > a').on('click',function(e){
        if (documentTouched && typeof $(this).attr('data-touched') !== 'undefined' && $(this).attr('data-touched') == 0) {
          e.preventDefault();
          $(this).attr('data-touched', 1);
          return false;
        }
      });
    }
  );

  $(document).scroll(function () {
    var pageObjectNavigationMenu = '.region-navigation';
    var pageObjectLeftSideLogo = 'img.logo';
    var pageObjectHeroImgLogo = '.hero-img img.logo';
    var pageObjectFloatIconSelect = '.float-icon';
    var pageObjectFloatIconShow = 'float-icon__show';
    var pageObjectFloatIconMenu = 'float-icon__menu';
    var pageObjectFloatIconBGPosition = 'bg-position-zero';
    var pageObjectBgYpositionProperty = 'background-position';
    var pageObjectTitleBlock = '#block-menu-menu-top-menu .block__title.block-title';
    var topNavigationMenu = $(pageObjectNavigationMenu).offset().top;
    var topLeftSideLogo = $(pageObjectLeftSideLogo).offset().top;

    if($('.hero-img').length > 0) {
      var topHeroImg = $(pageObjectHeroImgLogo).offset().top;
      if (topNavigationMenu >= topHeroImg) {
        $(pageObjectFloatIconSelect).addClass(pageObjectFloatIconShow);
        $(pageObjectTitleBlock).siblings('.menu-wrapper').addClass(pageObjectFloatIconMenu);
        var yPosition = function () {
          var pixel = parseInt(((topHeroImg - topNavigationMenu ) / 2.4) + 90);
          if (pixel > 0) {
            $(pageObjectFloatIconSelect).removeClass(pageObjectFloatIconBGPosition);
            return pixel;
          } else {
            $(pageObjectFloatIconSelect).addClass(pageObjectFloatIconBGPosition);
          }
        };
        yPosition();
        $(pageObjectFloatIconSelect).css(pageObjectBgYpositionProperty, 0 + ' ' + yPosition()+'px');
      } else {
        $(pageObjectFloatIconSelect).removeClass(pageObjectFloatIconShow);
        $(pageObjectTitleBlock).siblings('.menu-wrapper').removeClass(pageObjectFloatIconMenu);
      }
    } else {
      if (topNavigationMenu >= topLeftSideLogo) {
        $(pageObjectFloatIconSelect).addClass(pageObjectFloatIconShow);
        $(pageObjectTitleBlock).siblings('.menu-wrapper').addClass(pageObjectFloatIconMenu);
        var yPosition = function () {
          var pixel = parseInt(((topLeftSideLogo - topNavigationMenu ) / 2.4) + 90);
          if (pixel > 0) {
            $(pageObjectFloatIconSelect).removeClass(pageObjectFloatIconBGPosition);
            return pixel;
          } else {
            $(pageObjectFloatIconSelect).addClass(pageObjectFloatIconBGPosition);
          }
        };
        yPosition();
        $(pageObjectFloatIconSelect).css(pageObjectBgYpositionProperty, 0 + ' ' + yPosition()+'px');
      } else {
        $(pageObjectFloatIconSelect).removeClass(pageObjectFloatIconShow);
        $(pageObjectTitleBlock).siblings('.menu-wrapper').removeClass(pageObjectFloatIconMenu);
      }
    }
    $(".article-tags").each(function(){
      var currentText = $(this).html().replace(/\,+/g, '');
      $(this).html(currentText);
    });
  });
})(jQuery);

(function($) {
  Drupal.behaviors.socialShareCount = {
    attach: function(context) {
      jQuery('.social-share-count').each(function() {
        var containerElm = jQuery(this);
        var containerNid = jQuery(this).attr('data-nid');
        var containerUrl = jQuery(this).attr('data-href');
        if (!containerNid) {
          return;
        }
        if (containerElm.hasClass('processed')) {
          return;
        } else {
          containerElm.addClass('processed');
        }

        window.socialShareCountJSONPCallback = function(resp) {
          if (typeof resp.id !== 'undefined') {
            var socialShareCountValues = 0;
            var shareElm = jQuery("span[data-href='" + resp.id + "']");
            if (typeof resp.share !== 'undefined' && typeof resp.share.share_count !== 'undefined') {
              socialShareCountValues = resp.share.share_count; // This is facebook responce.
            }
            shareElm.html(socialShareCountValues.toLocaleString("en"));
            shareElm.show();
          }
        }

        window.getSocialShareCountCallback = function(resp) {
          if (typeof resp.nid !== 'undefined' && typeof resp.count !== 'undefined' && resp.count != '0') {
            var shareElm = jQuery(".social-share-count-" + resp.nid);
            shareElm.html(resp.count.toLocaleString("en"));
            shareElm.show();
          } else if (containerUrl) {
            jQuery.getJSON('//graph.facebook.com/?id='+containerUrl+'&callback=?', socialShareCountJSONPCallback);
          }
        }

        jQuery.getJSON('/get-social-share-count/' + containerNid, getSocialShareCountCallback);
      });
    }
  };

  /**
   * Design #24247
   **/
  Drupal.behaviors.stickyads = {
    attach: function(context) {
      var STICK_TIMEOUT = 2000;
      if (typeof PREBID_TIMEOUT !== 'undefined') {
        //STICK_TIMEOUT += PREBID_TIMEOUT;
      }
      setTimeout(function(){
        jQuery('.sticky_ads:not(.sticky_completed)').each(function () {
          var _h = jQuery(this).data('height');
          if (_h > 0) {
            jQuery(this).addClass('sticky_completed');
            jQuery(this).parent().css({height: _h + 'px', position: 'relative'});
            jQuery(this).stick_in_parent({offset_top: jQuery('body').hasClass('admin-menu') ? 140 : 110});
          }
        });
      }, STICK_TIMEOUT);
    }
  };


  // Get title from a block and pass it to aria-label for a11y.
  Drupal.behaviors.addAriatoFooterBlock = {
    attach: function (context, settings) {
      $(context).find('.region-bottom-column1 .block-menu').once('footerLoaded').each(function () {
        var title = $(this).find('.block-title').text(),
          lastItem = $(this).find('.menu__item.last a');
        
        lastItem.attr('aria-label', 'More from ' + title);
      });
    }
  };

})(jQuery);

// search
jQuery(document).ready(function() {
  jQuery('#search-block-form #edit-actions').on('click', function() {
    jQuery('#search-block-form #edit-search-block-form--2').focus();
  });
})

// incontent widget mobile
jQuery(document).ready(function() {
  var path = window.location.pathname;
  var nid = path.match(/\d+/);
  var container = jQuery('.incontent-plugin-' + nid);
  if(container.length > 0) {
    var url = '/get-mobile-widget/' + nid;
    jQuery.get(url, function(response) {
      jQuery(container).html(response.content);
    });
  }
});
;
;
// $Id$
/*
 * Drupal Most Popular - Showcase the most popular content across your Drupal website and engage your audience.
 * Copyright © 2009-2012 New Signature
 * 
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * You can contact New Signature by electronic mail at labs@newsignature.com -or- by U.S. Postal Service at 1100 H St. NW, Suite 940, Washington, DC 20005.
 */
/**
 * @file Adds javascript actions to the most popular block.
 */
(function($) {
  Drupal.behaviors.mostpopular = {
    attach: function(context) {

      // Get the configuration options
      var options = $.extend(Drupal.behaviors.mostpopular.defaultOptions,
          Drupal.settings.mostpopular);
  
      // Attach to all the most popular blocks on the page
      var parents = $(options.blockSelector, context);
      parents.each(function() {
        var block = $(this);

        var timerId = setInterval(function() {
          if (block.find('li.ad .dfp-inner').filter(":visible").length == 0) {
            block.removeClass('extend');
            clearInterval(timerId);
          }
        }, 100);

        setTimeout(function() {
          clearInterval(timerId);
        }, 10000);

        var serviceTabs = block.find(options.servicesSelector).filter('[data-sid]');
        var intervalTabs = block.find(options.intervalsSelector).filter('[data-iid]');
  
        // Keep track of the page we're currently looking at
        var selected = { 'sid' : null, 'iid' : null };
        var initial = true;
        
        // Get our current page from the cookies
        var bid = block.attr('data-bid');
        var cookie = $.cookie('mostpopular-' + bid);
        if (cookie) {
          var parts = cookie.split('/');
          selected.sid = parts[0];
          selected.iid = parts[1];
        } else {
          if (typeof Drupal.settings.thehill_mostpopular !== 'undefined') {
            selected.sid = Drupal.settings.thehill_mostpopular.sid;
            selected.iid = Drupal.settings.thehill_mostpopular.iid;
          }
        }
  
        // Create a content container
        var content = block.find(options.contentSelector);
        var wrapper = content.wrap("<div />").parent()
        .css({
          position : 'relative'
        });
  
        // Create a throbber image
        if (options.showThrobber) {
          var throbber = $(Drupal.theme('MostPopularThrobber'))
          .css({
            position : 'absolute',
            zIndex : 100
          }).appendTo(wrapper).hide();
  
          // Redefine the show function for the throbber to center it
          throbber.centerAndShow = function() {
            var top = parseInt((wrapper.outerHeight({margin: true}) - throbber.height()) / 2);
            var left = parseInt((wrapper.outerWidth({margin: true}) - throbber.width()) / 2);
            throbber.css({
              top : top,
              left : left
            }).show();
          };
        }
  
        // -----------------------------------------------------
        // Bind all the links to services
        serviceTabs.each(function() {
          var tab = $(this).data('service', true);
          var sid = tab.attr('data-sid');
          
          var link = $('<a href="#"/>')
            .text(tab.text())
            .click(function() {
              selected.sid = sid;
              
              getSelected(tab);              
              return false;
            });
          tab.html(link);
          tab.click(function() {
            return link.click();            
          });
          
          // If this service is currently selected, load the content
          if (!selected.sid) {
            selected.sid = sid;
          }
          if (selected.sid == sid) {
            tab.addClass(options.selectedClass);
          }
        });
  
        // -----------------------------------------------------
        // Bind all the links to intervals
        intervalTabs.each(function() {
          var tab = $(this).data('interval', true);
          var iid = tab.attr('data-iid');
          
          var link = $('<a href="#"/>')
            .text(tab.text())
            .click(function() {
              selected.iid = iid;
              
              getSelected(tab);
              return false;
            });
          tab.html(link);
          tab.click(function() {
            initial = false;
            link.click();
          });
          
          // If this interval is currently selected, load the content
          if (!selected.iid) {
            selected.iid = iid;
          }
          if (selected.iid == iid && initial === false) {
            tab.click();
          }
        });
        
        function getSelected(tab) {
          if (selected.sid && selected.iid) {
            startReload();
            
            var path = selected.sid + '/' + selected.iid;
            
            // Save the cookie
            $.cookie('mostpopular-' + bid, path, { path: '/' });
            
            // Fetch the content via AJAX
            var url = options.url + '/' + bid + '/' + path;
            $.get(url, function(data) {
              onGet(tab, data);
            });
          }
        }
        
        /**
         * This function is called when there is new data from the AJAX call.
         * 
         * @param link
         *   The link object that clicked.
         * @param data
         *   The new HTML sent back from Drupal.
         */
        function onGet(tab, data) {
          finishReload(data);
  
          // Select the appropriate tabs
          if (tab.data('service')) {
            serviceTabs.removeClass(options.selectedClass);
          }
          else if (tab.data('interval')) {
            intervalTabs.removeClass(options.selectedClass);
          }
          tab.addClass(options.selectedClass);
          refreshSlot(Drupal.settings.thehill_mostpopular.tag);          
          return false;
        }
  
        /**
         * Starts the process of reloading the most popular items, by hiding
         * the existing content and showing the throbber, if necessary.
         * 
         * The hideContent() method defined in the options will be called.
         */
        function startReload() {
          // Show the throbber and dim the content
          if (throbber) {
            throbber.centerAndShow();
          }
          options.hideContent(content);
        }
  
        /**
         * Finishes the process of reloading the most popular items, by showing
         * the new content and hiding the throbber, if necessary.
         * 
         * The showContent() method defined in the options will be called.
         * 
         * @param response
         *   A JSON response from Drupal.  It contains one key, 'data', whose
         *   value is an HTML string to render.
         */
        function finishReload(response) {
          // Replace the content, fade it back in and hide the throbber
          options.showContent(content, response);
          Drupal.behaviors.thehill_carousel.attach();
          if (throbber) {
            throbber.hide();
          }
        }
      });
    },
  
    /**
     * Defines the default options. Override these options in
     * Drupal.settings.mostpopular.
     */
    defaultOptions: {  
      'hideContent' : function(content) {
        content.fadeTo(200, 0.5);
      },
      'showContent' : function(content, html) {
        content.html(html).fadeTo(200, 1.0);
      },
      'showThrobber' : true,
      'blockSelector' : '.mostpopular-block',
      'servicesSelector' : 'ul.mostpopular--services li',
      'intervalsSelector' : 'ul.mostpopular--intervals li',
      'contentSelector' : 'div.mostpopular--content',
      'selectedClass' : 'selected',
      'url' : '/mostpopular/ajax'
    }
  };

  /**
   * Provides a default theme for the throbber that appears when content is
   * reloading.   You can override this in your own theme.
   * 
   * @return An HTML string to render the throbber.
   */
  Drupal.theme.prototype.MostPopularThrobber = function() {
    return '<div class="ahah-progress ahah-progress-throbber"><div class="throbber">&nbsp;</div></div>';
  };
  
})(jQuery);
;

(function ($, Drupal, window, document, undefined) {

$(document).ready(function() {
    $('.load-all-channels').click(function() {
        $('.opa-hidden').slideToggle('slow');
        $(this).remove();        
    });
});

})(jQuery);
;
function initializePlayerInstance(initVars) {
  var instanceId = typeof(initVars.instanceId) === "undefined" ? initVars.nid + '-player' : initVars.instanceId;
  playerInstance = jwplayer(instanceId);
  if(typeof(PREBID_BID_PARAMETERS) === "undefined") {
    PREBID_BID_PARAMETERS = {};
  }
  if(initVars.bid_timout) {
    try {
      if(typeof(jwplayer.defaults.advertising) !== "undefined" && typeof(jwplayer.defaults.advertising.bids) !== "undefined") {
        jwplayer.defaults.advertising.bids.settings.bidTimeout = initVars.bid_timout;
      }
    } catch (e) {
      console.log(e);
    }
  }

  setUpPlayerAdvertising(initVars.nid);

  if(initVars.playlist_id) {
    var playlistUrl = "https://cdn.jwplayer.com/v2/playlists/" + initVars.playlist_id;
    jQuery.get(playlistUrl)
      .success(function(response) {
        var playlist = response.playlist;
        if(playlist.length < 1) return false; // hard return if nothing in the playlist
        if(initVars.video_id) {
          playlist = rearrangePlaylist(response.playlist, initVars.video_id);
        }
        initializePlaylist(playerInstance, initVars, playlist);
        setupSharedPlayerWatchers(playerInstance, initVars);
        setupArticlePlayerWatchers(playerInstance, initVars);
      })
      .fail(function(response) {
        console.log(response);
        return;
      });
  } else {
    initializeSingleVideo(playerInstance, initVars);
    setupSharedPlayerWatchers(playerInstance, initVars);
    setupArticlePlayerWatchers(playerInstance, initVars);
  }
}

function initializeHillTVPlayerInstance(initVars) {
  var playerInstance = jwplayer('hilltv-player-target');

  if(typeof(PREBID_BID_PARAMETERS) === "undefined") {
    PREBID_BID_PARAMETERS = {};
  }

  setUpPlayerAdvertising(initVars.nid);

  if(initVars.playlist_id) {
    var playlistUrl = "https://cdn.jwplayer.com/v2/playlists/" + initVars.playlist_id;
    if(initVars.video_id) {
      var playlist = jQuery.get(playlistUrl)
        .success(function(response) {
          var playlist = rearrangePlaylist(response.playlist, initVars.video_id);
          initializePlaylist(playerInstance, initVars, playlist);
          setupSharedPlayerWatchers(playerInstance, initVars);
          setupHillTVPlayerWatchers(playerInstance, initVars);
        })
        .fail(function(response) {
          console.log(response);
          return;
        })
    } else {
      initializePlaylist(playerInstance, initVars, playlistUrl);
      setupSharedPlayerWatchers(playerInstance, initVars);
      setupHillTVPlayerWatchers(playerInstance, initVars);
    }
  } else {
    initializeSingleVideo(playerInstance, initVars);
    setupSharedPlayerWatchers(playerInstance, initVars);
    setupHillTVPlayerWatchers(playerInstance, initVars);
  }
}

var biddingVideoRequestManager = {
  sent: false,
  apsParam: '',
  aps: false,
  prebidParam: '',
  prebid: false
};

function videoBiddersBack() {
  if (
    biddingVideoRequestManager.aps &&
    biddingVideoRequestManager.prebid
  ) {
    sendParallelAdserverVideoRequest();
  }
  return;
}

function sendParallelAdserverVideoRequest() {
  if (biddingVideoRequestManager.sent === true) {
    return;
  }
  biddingVideoRequestManager.sent = true;
  jwplayer.defaults.advertising.schedule[0].tag = window.default_jwp_ad_tag + biddingVideoRequestManager.prebidParam + biddingVideoRequestManager.apsParam;
}

function initializeSingleVideo(playerInstance, initVars) {
  playerInit = {
    playlist:"https://cdn.jwplayer.com/v2/media/" + initVars.video_id,
    image: "http://content.jwplatform.com/thumbs/" + initVars.video_id + "-720.jpg",
    width: '100%',
    aspectratio: '16:9',
    sources: 'hls',
    sharing: {
      link: initVars.share_url
    }
  };
  playerInstance.setup(playerInit);

  if (initVars.reload_if_no_ads == 1) {
    playerInstance.once('adError', () => {
      if (playerInstance.getPosition() === 0 && playerInstance.getPlaylistIndex() === 0) {
        if(typeof(pbjs.version) !== "undefined" && typeof(videoAdUnit) == "object") {
          pbjs.que.push(function() {
            pbjs.requestBids({
              adUnits : [videoAdUnit],
              timeout : 1250,
              bidsBackHandler : function(bids) {
                biddingVideoRequestManager = {
                  sent: false,
                  apsParam: '',
                  aps: false,
                  prebidParam: '',
                  prebid: false
                };
                try {
                  var kuid = window.Krux.user;
                  var ksg = window.Krux.segments.join();
                  var bidTargeting = pbjs.getAdserverTargetingForAdUnitCode('video_preroll');
                  var playerSegsPerm = encodeURIComponent('&permutive=' + encodeURIComponent(JSON.parse(localStorage._pdfps || '[]').slice(0,250).join(',')));
                  PREBID_BID_PARAMETERS[initVars.nid] = formatPBParams(bidTargeting);
                  //jwplayer.defaults.advertising.schedule[0].tag = window.default_jwp_ad_tag + "%26kuid%3D" + kuid + "%26ksg%3D" + ksg + PREBID_BID_PARAMETERS[initVars.nid];
                  biddingVideoRequestManager.prebidParam = "%26kuid%3D" + kuid + "%26ksg%3D" + ksg + PREBID_BID_PARAMETERS[initVars.nid] + playerSegsPerm;
                  biddingVideoRequestManager.prebid = true;
                  videoBiddersBack();
                } catch (e) {
                  console.debug(e);
                }
                playerInit['autostart'] = false;
                playerInstance.setup(playerInit);
                setupSharedPlayerWatchers(playerInstance, initVars);
                setupArticlePlayerWatchers(playerInstance, initVars);
              }
            });

            if (typeof(apstag) !== "undefined" && THEHILL_APS_VIDEO_ENABLED) {
              apstag.fetchBids({
                slots: [{
                  slotID: THEHILL_APS_VIDEO_SLOT_ID,
                  mediaType: 'video'
                }]
              }, function(bids) {
                biddingVideoRequestManager.apsParam = handleVideoBids(bids);
                biddingVideoRequestManager.aps = true;
                videoBiddersBack();
              });
            }

          });
        }
      }
    }, initVars);
  }
}

function initializePlaylist(playerInstance, initVars, playlist) {
  playerInstance.setup({
      playlist: playlist,
      width: '100%',
      aspectratio: '16:9',
      sources: 'hls',
      sharing: {
        link: initVars.share_url
      }
    });
}

function setUpPlayerAdvertising(nid) {
  try {
    if(typeof(PREBID_BID_PARAMETERS[nid]) === "undefined") {
      PREBID_BID_PARAMETERS[nid] = '';
      if (typeof(pbjs.version) !== "undefined" && typeof(videoAdUnit) == "object") {
        var bidsTargeting = pbjs.getAdserverTargetingForAdUnitCode('video_preroll');
        PREBID_BID_PARAMETERS[nid] = formatPBParams(bidsTargeting);
      }
    }
    window.default_jwp_ad_tag = jwplayer.defaults.advertising.schedule[0].tag;
    var kuid = window.Krux.user;
    var ksg = window.Krux.segments.join();
    var len = jwplayer.defaults.advertising.schedule.length;
    var playerSegsPerm = encodeURIComponent('&permutive=' + encodeURIComponent(JSON.parse(localStorage._pdfps || '[]').slice(0,250).join(',')));
    for(var i =0; i < len; i ++) {
      if(jwplayer.defaults.advertising.client === "vast") {
        var tagLen = jwplayer.defaults.advertising.schedule[i].tag.length;
        for(var t = 0; t < tagLen; t++) {
          var tag = jwplayer.defaults.advertising.schedule[i].tag[t] + "%26kuid%3D" + kuid + "%26ksg%3D" + ksg + PREBID_BID_PARAMETERS[nid] + window.vastTagParam + playerSegsPerm;
          jwplayer.defaults.advertising.schedule[i].tag[t] = tag;
        }
      } else {
        var tag = jwplayer.defaults.advertising.schedule[i].tag + "%26kuid%3D" + kuid + "%26ksg%3D" + ksg + PREBID_BID_PARAMETERS[nid] + window.vastTagParam + playerSegsPerm;
        jwplayer.defaults.advertising.schedule[i].tag = tag;
      }
    }
  } catch (e) {
    console.log(e);
  }
}

function rearrangePlaylist(playlist, videoId) {
  var index = 0;
  for(var i=0; i < playlist.length; i++) {
    if(videoId === playlist[i].mediaid) {
      index = i;
    }
  }
  if(index > 0) {
    var part1 = playlist.splice(index);
    playlist = part1.concat(playlist);
  }
  return playlist;
}

function setupSharedPlayerWatchers(playerInstance, initVars) {
  var midrollTimes = null;
  playerInstance.on('adImpression', function(event) {
    if(typeof(moatjw) !== "undefined") {
      moatjw.add({
          partnerCode: initVars.moat_id,
          player: this,
          adImpressionEvent: event
      });
    }
    if(playerInstance.getMute()) {
      jQuery('#jwplayer-unmute-button').show();
    }
  });

  playerInstance.on('play', function() {
    if(playerInstance.getMute()) {
      jQuery('#jwplayer-unmute-button').show();
    }
  });

  playerInstance.on('mute', function(e) {
    if(e.mute) {
      jQuery('#jwplayer-unmute-button').show();
    } else {
      jQuery('#jwplayer-unmute-button').hide()
    }
  });

  if(initVars.video_id && !initVars.playlist_id) {
    var timeFlag = true;
    playerInstance.on('time', function(t) {
      if(midrollTimes) {
        if(midrollTimes.indexOf(Math.floor(t.position)) >= 0 && timeFlag) {
          var tag = initVars.midroll_tag;
          try {
            var kuid = window.Krux.user;
            var ksg = window.Krux.segments.join();
            var playerSegsPerm = encodeURIComponent('&permutive=' + encodeURIComponent(JSON.parse(localStorage._pdfps || '[]').slice(0,250).join(',')));
            var custParams = "&cust_params=kuid%3D" + kuid + "%26ksg%3D" + ksg + '%26Ad_breaks%3D__item-tags__' + playerSegsPerm;
            tag = tag.split('&cust_params')[0] + custParams;
          } catch (e) {
            console.log(e);
          }
          playerInstance.playAd(tag);
          timeFlag = false;
          playerInstance.on('adComplete', function(e) {
            setTimeout(function(){timeFlag = true;}, 2001);
          });
        }
      }
    });

    playerInstance.on('playlistItem', function(e) {
      if(e.item.tags.indexOf('midroll') >= 0) {
        midrollTimes = formatMidrollTagTimes(e.item.tags);
      } else {
        midrollTimes = null;
      }
    });
  }
}

function setupHillTVPlayerWatchers(playerInstance, initVars) {
  playerInstance.on('adCompanions', function(event) {
    for(var i=0; i<event.companions.length; i++) {
      var entry = event.companions[i];
      if(entry.height === 250) {
        if(event.client == "googima") {
          var div = document.getElementById("hilltv-companion-ad");
          div.innerHTML = entry.resource;
        } else {
          insertAd("hilltv-companion-ad", entry.resource, entry.click, entry.height, entry.width);
        }
      } else if(entry.height === 90) {
        if(event.client == "googima") {
          var div = document.getElementById("hilltv-companion-ad-728x90");
          div.innerHTML = entry.resource;
        } else {
          insertAd("hilltv-companion-ad-728x90", entry.resource, entry.click, entry.height, entry.width);
        }
      }
     }
  });

  playerInstance.on('playlistItem', function(e) {
    var link = e.item.link;
    if(link.indexOf('jwplayer') < 0) {
      playerInstance.getConfig().sharing.link = link;
    } else {
      link = initVars.share_url;
      playerInstance.getConfig().sharing.link = link;
    }
    e.item.isFullEpisode = (e.item.duration > 300 ? 1 : 0).toString();
    e.item.digAirDate = new Date(e.item.pubdate * 1000).toISOString().split('T')[0];
    updateSocialLinks(link);

    if(initVars.video_id && !initVars.playlist_id) {
      if(e.item.tags.indexOf('midroll') >= 0) {
        midrollTimes = formatMidrollTagTimes(e.item.tags);
      } else {
        midrollTimes = null;
      }
    }
  });

  playerInstance.on('playlistComplete', function(e) {
    if(initVars.playlist_id) {
      var currentLen = playerInstance.getPlaylist().length;
      var currentIndex = playerInstance.getPlaylistIndex();
      var url = "https://cdn.jwplayer.com/v2/playlists/" + initVars.playlist_id;
      jQuery.get(url).then(function(data) {
        var newLen = data.playlist.length;
        if(newLen > currentLen) {
          playerInstance.load(url);
          playerInstance.on('playlist', function() {

            setTimeout(function(){
              playerInstance.playlistItem(currentIndex + 1);
            }, 50);

            setupPlaylistCarousel(playerInstance, data);
            if(newLen > 6) {
              jQuery('.hilltv-playlist-arrows').show();
              jQuery('.hilltv-playlist-arrows .next').click();
            }
          });
        }
      });
    }
  });

  playerInstance.on('ready', function() {
    if(typeof(ns_) !== "undefined") {
      ns_.StreamingAnalytics.JWPlayer(playerInstance, {
        publisherId: initVars.comscore_id,
        labelmapping: "ns_st_ge=\"News/Politics\", ns_st_ia=\"0\", ns_st_ce=isFullEpisode, ns_st_ddt=digAirDate, ns_st_tdt=\"*null\", ns_st_ti=\"*null\""
      });
    }
    initHillTVPageElements(playerInstance, initVars);

    if(initVars.hilltv_sticky_enabled) {
      registerPlayerClickEvent();
      var playerContainerEl = document.querySelector('#hilltv-player');
      var playerContainerElHeight = jQuery(playerContainerEl).height();
      jQuery(playerContainerEl).css('height', playerContainerElHeight);
      setupJWPDesktopStickyPlayer(playerContainerEl, playerInstance);
    }
  });
}

function setupArticlePlayerWatchers(playerInstance, initVars) {
  ix_bid_sent = false;
  playerInstance.on('playlistItem', function(e) {
    e.item.isFullEpisode = (e.item.duration > 300 ? 1 : 0).toString();
    e.item.digAirDate = new Date(e.item.pubdate * 1000).toISOString().split('T')[0];
  });

  playerInstance.on('ready', function() {
    var playerContainerEl = document.querySelector('.node-' + initVars.nid + ' .player-container');
    if (!playerContainerEl) {
      playerContainerEl = document.querySelector('#block-thehill-blocks-homepage-video .player-container');
    }

    var playerContainerElHeight = jQuery(playerContainerEl).height();
    jQuery(playerContainerEl).css('height', playerContainerElHeight);


    if(typeof(ns_) !== "undefined") {
      ns_.StreamingAnalytics.JWPlayer(playerInstance, {
        publisherId: initVars.comscore_id,
        labelmapping: "ns_st_ge=\"News/Politics\", ns_st_ia=\"0\", ns_st_ce=isFullEpisode, ns_st_ddt=digAirDate, ns_st_tdt=\"*null\", ns_st_ti=\"*null\""
      });
    }

    registerPlayerClickEvent();

    if(initVars.sticky_enabled) {
      setupJWPDesktopStickyPlayer(playerContainerEl, playerInstance);
    }
  });

  playerInstance.on('firstFrame', function(e) {
    if(typeof(pbjs.version) !== "undefined" && typeof(videoAdUnit) == "object") {
      biddingVideoRequestManager = {
        sent: false,
        apsParam: '',
        aps: false,
        prebidParam: '',
        prebid: false
      };

      pbjs.que.push(function() {
        pbjs.requestBids({
          adUnits : [videoAdUnit],
          timeout : 1250,
          bidsBackHandler : function(bids) {
            try {
              var kuid = window.Krux.user;
              var ksg = window.Krux.segments.join();
              var bidTargeting = pbjs.getAdserverTargetingForAdUnitCode('video_preroll');
              var playerSegsPerm = encodeURIComponent('&permutive=' + encodeURIComponent(JSON.parse(localStorage._pdfps || '[]').slice(0,250).join(',')));
              PREBID_BID_PARAMETERS[initVars.nid] = formatPBParams(bidTargeting);
              //jwplayer.defaults.advertising.schedule[0].tag = window.default_jwp_ad_tag + "%26kuid%3D" + kuid + "%26ksg%3D" + ksg + PREBID_BID_PARAMETERS[initVars.nid];
              biddingVideoRequestManager.prebidParam = "%26kuid%3D" + kuid + "%26ksg%3D" + ksg + PREBID_BID_PARAMETERS[initVars.nid] + playerSegsPerm;
              biddingVideoRequestManager.prebid = true;
              videoBiddersBack();
            } catch (e) {
              console.debug(e);
            }
          }
        });
      });

      if (typeof(apstag) !== "undefined" && THEHILL_APS_VIDEO_ENABLED) {
        apstag.fetchBids({
          slots: [{
            slotID: THEHILL_APS_VIDEO_SLOT_ID,
            mediaType: 'video'
          }]
        }, function(bids) {
          biddingVideoRequestManager.apsParam = handleVideoBids(bids);
          biddingVideoRequestManager.aps = true;
          videoBiddersBack();
        });
      } else {
          biddingVideoRequestManager.aps = true;
          videoBiddersBack();
      }
    }
  });
}

function initHillTVPageElements(player, initVars) {
  if(initVars.video_id && !initVars.playlist_id) {
    var playlist = player.getConfig().playlist[0];
    var published = new Date(playlist.pubdate * 1000);
    jQuery('#video-meta-data .published').html(published.toLocaleDateString());
    jQuery('.hilltv-playlist-arrows').hide();
  } else {
    setupPlaylistCarousel(player);
  }
}

function setupPlaylistCarousel(player) {
  var playlist = player.getConfig().playlist;
  var playlistWrapper = jQuery('.playlist-wrapper');
  var playlistTemplate = createPlaylistCarouselTemplate(playlist);
  playlistWrapper.html(playlistTemplate);
  playlistWrapper.on('click', '.playlist-item-link', playlistSetVideo.bind(this, playlist, player));
  player.on('playlistItem', playlistSetActive);
  if(playlist.length < 7) {
    jQuery('.hilltv-playlist-arrows').hide();
    jQuery('.playlist-item').css('width', '17%');
    return false;
  } else {
    jQuery('.hilltv-playlist-arrows').show();
  }
  var item_width = jQuery('.playlist-item').outerWidth();
  var left_value = item_width * (-1);
  jQuery('.playlist-item:last').insertBefore(jQuery('.playlist-item:first'));
  jQuery('.playlist').css({'left': left_value});
  initHillTVCarousel(item_width, left_value);
}

function createPlaylistCarouselTemplate(playlist) {
  var html = "";
  html += "<ul class='playlist'>";
  for(var i=0; i < playlist.length; i++) {
    var active = i === 0 ? 'active' : '';
    var anchorClass = "playlist-item-link " + active;
    var videoTitle = playlist[i].title.length < 30 ? playlist[i].title : playlist[i].title.substring(0,30) + '...';
    html += "<li class='playlist-item'>";
    html += "<a class=" + anchorClass + " href=" + playlist[i].link + " data-mediaid=" + playlist[i].mediaid + ">";
    html += "<div class='playlist-thumbnail-wrapper'>";
    html += "<img class='playlist-thumbnail' src=" + playlist[i].image + " />";
    html += "<p>"+videoTitle+"</p>";
    html += "</div>";
    html += "</a>";
    html += "</li>";
  }
  html += "</ul>";

  return html;
}

function playlistSetVideo(playlist, player, e) {
  e.preventDefault();
  var currentVideo = jQuery(e.target).closest('a').data('mediaid');
  var videoIndex = playlist.findIndex(function(video) {
    return currentVideo === video.mediaid;
  });
  player.playlistItem(videoIndex);
}

function playlistSetActive(e) {
  var id = e.item.mediaid;
  jQuery('#video-meta-data .title').html(e.item.title);
  var sectionTitle = jQuery('.section-title').length ? jQuery('.section-title').html() : jQuery('#page-title').html();
  var published = new Date(e.item.pubdate * 1000);
  jQuery('#video-meta-data .published').html(sectionTitle + ', ' + published.toLocaleDateString());
  jQuery('#video-meta-data .description').html(e.item.description);

  jQuery('.playlist-item-link').removeClass('active')
    .filter(function(item) {
      return jQuery(this).data('mediaid') === id;
    })
    .addClass('active');
}

function setupJWPDesktopStickyPlayer(playerContainerEl, playerInstance) {
  var config = playerInstance.getConfig();
  // get height of player element
  var playerHeight = config.containerHeight;

  //playerContainerEl.style.height = playerHeight + 'px';
  var isScrollTimeout = false;

  onScrollViewHandler(playerContainerEl, playerInstance);

  // window onscroll event handler
  window.onscroll = function() {
      // skip if we're waiting on a scroll update timeout to finish
      if (isScrollTimeout) return;
      // flag that a new timeout will begin
      isScrollTimeout = true;
      // otherwise, call scroll event view handler
      onScrollViewHandler(playerContainerEl, playerInstance);
      // set new timeout
      setTimeout(function() {
          // reset timeout flag to false (no longer waiting)
          isScrollTimeout = false;
      }, 80);
  };
}

// returns video player position from top of document
function getElementOffsetTop(el) {
  var boundingClientRect = el.getBoundingClientRect();
  var bodyEl = document.body;
  var docEl = document.documentElement;
  var scrollTop = window.pageYOffset || docEl.scrollTop || bodyEl.scrollTop;
  var clientTop = docEl.clientTop || bodyEl.clientTop || 0;
  return Math.round(boundingClientRect.top + scrollTop - clientTop);
}

function onScrollViewHandler(playerContainerEl, playerInstance) {
    var scrollTop = getScrollTop();
    var elementOffsetTop = getElementOffsetTop(playerContainerEl);
    var minimize = scrollTop >= elementOffsetTop || scrollTop + window.innerHeight <= elementOffsetTop;

    playerInstance.utils.toggleClass(playerContainerEl, 'player-minimize', minimize);
    // update the player's size so the controls are adjusted
    playerInstance.resize();
}
// returns the current y scroll position
function getScrollTop() {
  var docEl = document.documentElement;
  return (window.pageYOffset || docEl.scrollTop) - (docEl.clientTop || 0);
}

function registerPlayerClickEvent() {
  jQuery('.player-position .close-btn').on('click', function(e) {
      e.preventDefault();
      var id = jQuery(this).siblings('.jwplayer').attr('id');
      if(id === 'hilltv-player-target') {
        var myPlayer = jwplayer(id);
        var playerContainerEl = document.querySelector('#hilltv-player');

      } else {
        var nid = id.split('-')[0];
        var myPlayer = jwplayer(id);
        var playerContainerEl = document.querySelector('.node-' + nid + ' .player-container');

        if (!playerContainerEl) {
          playerContainerEl = document.querySelector('#block-thehill-blocks-homepage-video .player-container');
        }
      }

      var state = myPlayer.getState();
      if (state !== "complete" || state !== "paused") {
        myPlayer.pause();
      }

      myPlayer.utils.removeClass(playerContainerEl, 'player-minimize');
      myPlayer.utils.addClass(playerContainerEl, 'sticky-disabled');
      myPlayer.resize();
  });
}

function getJWScript(url) {
  if(typeof(jwplayer) === "undefined") {
    return jQuery.getScript( url );
  }
  return '';
}

function getMoatScript(url) {
  if(typeof(moatjw) === "undefined") {
    if(typeof(pbjs) !== "undefined" && pbjs.libLoaded) {
      return jQuery.getScript( url );
    }
  }
  return '';
}

function getcomScoreScript(url) {
  if(typeof(ns_) === "undefined" || typeof(ns_.StreamingAnalytics === "undefined")) {
    return jQuery.getScript( url );
  }
  return '';
}

function initHillTVCarousel(item_width, left_value) {
  jQuery(document).ready(function() {
    jQuery('.hilltv-playlist-arrows .icon').mouseenter(function(){
      jQuery(this).attr('fill', '#831F18');
    });
    jQuery('.hilltv-playlist-arrows .icon').mouseleave(function(){
      jQuery(this).attr('fill', '#B9C3DB');
    });

    jQuery('.arrow.previous').on('click', function() {
      var left_indent = parseInt(jQuery('.playlist').css('left')) + item_width;
      jQuery('.playlist').animate({'left': left_indent}, 500, function() {
        jQuery('.playlist-item:last').insertBefore(jQuery('.playlist-item:first'));
        jQuery('.playlist').css({'left': left_value})
      });
      return false;
    });
    jQuery('.arrow.next').on('click', function() {
      var left_indent = parseInt(jQuery('.playlist').css('left')) - item_width;
      jQuery('.playlist').animate({'left': left_indent}, 500, function() {
        jQuery('.playlist-item:first').insertAfter(jQuery('.playlist-item:last'));
        jQuery('.playlist').css({'left': left_value})
      });
      return false;
    });
  });
}

function insertAd(element,resource,clickthrough,height,width) {
  var div = document.getElementById(element);
  var height = height + 'px';
  var width = width + 'px';
  jQuery(div).css({'height' : height, 'width' : width})
  div.innerHTML = "<a href='"+clickthrough+"'><img src='"+resource+"'/></a>";
}

function updateSocialLinks(link) {
  var elements = [
    '.facebook-share',
    '.twitter-share',
    '.google-share',
    '.linkedin-share',
    '.mail-share'
  ];
  for(var i=0;i < elements.length;i++) {
    jQuery(elements[i]).attr('data-link', link);
  }
}

function formatMidrollTagTimes(tags) {
  var tags = tags.split(',');
  var midrollTimes = [];
  for(var i=0;i<tags.length; i++) {
    if(tags[i].indexOf('midroll') >= 0) {
      var adTime = parseInt(tags[i].split('midroll-')[1])
      midrollTimes.push(adTime);
    }
  }
  return midrollTimes;
}

jQuery(document).ready(function() {
  var id = 'hilltv-player-target'
  var target_player = jQuery('#' + id);
  if(!target_player.length) {
    var blockJwplayer = jQuery('#block-thehill-blocks-homepage-video .jwplayer');
    if (blockJwplayer) {
      id = blockJwplayer.attr('id')
    } else {
      var path = window.location.pathname;
      var nid = path.match(/\d+/);
      if(nid === null) return;
      id = nid[0] + '-player';
    }
  }
  jQuery('#jwplayer-unmute-button').on('click', function() {
    jwplayer(id).setMute(false);
    jQuery('#jwplayer-unmute-button').hide();
  });
});

function formatPBParams(bids) {
  var params = '';
  for (var key in bids) {
    if (bids.hasOwnProperty(key)) {
        params += "%26";
        params += key + "%3D" + bids[key];
      }
  }
  return params;
}
;
(function(t){var e=function(){try{return!!Symbol.iterator}catch(e){return false}};var r=e();var n=function(t){var e={next:function(){var e=t.shift();return{done:e===void 0,value:e}}};if(r){e[Symbol.iterator]=function(){return e}}return e};var i=function(e){return encodeURIComponent(e).replace(/%20/g,"+")};var o=function(e){return decodeURIComponent(String(e).replace(/\+/g," "))};var a=function(){var a=function(e){Object.defineProperty(this,"_entries",{writable:true,value:{}});var t=typeof e;if(t==="undefined"){}else if(t==="string"){if(e!==""){this._fromString(e)}}else if(e instanceof a){var r=this;e.forEach(function(e,t){r.append(t,e)})}else if(e!==null&&t==="object"){if(Object.prototype.toString.call(e)==="[object Array]"){for(var n=0;n<e.length;n++){var i=e[n];if(Object.prototype.toString.call(i)==="[object Array]"||i.length!==2){this.append(i[0],i[1])}else{throw new TypeError("Expected [string, any] as entry at index "+n+" of URLSearchParams's input")}}}else{for(var o in e){if(e.hasOwnProperty(o)){this.append(o,e[o])}}}}else{throw new TypeError("Unsupported input's type for URLSearchParams")}};var e=a.prototype;e.append=function(e,t){if(e in this._entries){this._entries[e].push(String(t))}else{this._entries[e]=[String(t)]}};e.delete=function(e){delete this._entries[e]};e.get=function(e){return e in this._entries?this._entries[e][0]:null};e.getAll=function(e){return e in this._entries?this._entries[e].slice(0):[]};e.has=function(e){return e in this._entries};e.set=function(e,t){this._entries[e]=[String(t)]};e.forEach=function(e,t){var r;for(var n in this._entries){if(this._entries.hasOwnProperty(n)){r=this._entries[n];for(var i=0;i<r.length;i++){e.call(t,r[i],n,this)}}}};e.keys=function(){var r=[];this.forEach(function(e,t){r.push(t)});return n(r)};e.values=function(){var t=[];this.forEach(function(e){t.push(e)});return n(t)};e.entries=function(){var r=[];this.forEach(function(e,t){r.push([t,e])});return n(r)};if(r){e[Symbol.iterator]=e.entries}e.toString=function(){var r=[];this.forEach(function(e,t){r.push(i(t)+"="+i(e))});return r.join("&")};t.URLSearchParams=a};var s=function(){try{var e=t.URLSearchParams;return new e("?a=1").toString()==="a=1"&&typeof e.prototype.set==="function"&&typeof e.prototype.entries==="function"}catch(e){return false}};if(!s()){a()}var f=t.URLSearchParams.prototype;if(typeof f.sort!=="function"){f.sort=function(){var r=this;var n=[];this.forEach(function(e,t){n.push([t,e]);if(!r._entries){r.delete(t)}});n.sort(function(e,t){if(e[0]<t[0]){return-1}else if(e[0]>t[0]){return+1}else{return 0}});if(r._entries){r._entries={}}for(var e=0;e<n.length;e++){this.append(n[e][0],n[e][1])}}}if(typeof f._fromString!=="function"){Object.defineProperty(f,"_fromString",{enumerable:false,configurable:false,writable:false,value:function(e){if(this._entries){this._entries={}}else{var r=[];this.forEach(function(e,t){r.push(t)});for(var t=0;t<r.length;t++){this.delete(r[t])}}e=e.replace(/^\?/,"");var n=e.split("&");var i;for(var t=0;t<n.length;t++){i=n[t].split("=");this.append(o(i[0]),i.length>1?o(i[1]):"")}}})}})(typeof global!=="undefined"?global:typeof window!=="undefined"?window:typeof self!=="undefined"?self:this);(function(u){var e=function(){try{var e=new u.URL("b","http://a");e.pathname="c d";return e.href==="http://a/c%20d"&&e.searchParams}catch(e){return false}};var t=function(){var t=u.URL;var e=function(e,t){if(typeof e!=="string")e=String(e);if(t&&typeof t!=="string")t=String(t);var r=document,n;if(t&&(u.location===void 0||t!==u.location.href)){t=t.toLowerCase();r=document.implementation.createHTMLDocument("");n=r.createElement("base");n.href=t;r.head.appendChild(n);try{if(n.href.indexOf(t)!==0)throw new Error(n.href)}catch(e){throw new Error("URL unable to set base "+t+" due to "+e)}}var i=r.createElement("a");i.href=e;if(n){r.body.appendChild(i);i.href=i.href}var o=r.createElement("input");o.type="url";o.value=e;if(i.protocol===":"||!/:/.test(i.href)||!o.checkValidity()&&!t){throw new TypeError("Invalid URL")}Object.defineProperty(this,"_anchorElement",{value:i});var a=new u.URLSearchParams(this.search);var s=true;var f=true;var c=this;["append","delete","set"].forEach(function(e){var t=a[e];a[e]=function(){t.apply(a,arguments);if(s){f=false;c.search=a.toString();f=true}}});Object.defineProperty(this,"searchParams",{value:a,enumerable:true});var h=void 0;Object.defineProperty(this,"_updateSearchParams",{enumerable:false,configurable:false,writable:false,value:function(){if(this.search!==h){h=this.search;if(f){s=false;this.searchParams._fromString(this.search);s=true}}}})};var r=e.prototype;var n=function(t){Object.defineProperty(r,t,{get:function(){return this._anchorElement[t]},set:function(e){this._anchorElement[t]=e},enumerable:true})};["hash","host","hostname","port","protocol"].forEach(function(e){n(e)});Object.defineProperty(r,"search",{get:function(){return this._anchorElement["search"]},set:function(e){this._anchorElement["search"]=e;this._updateSearchParams()},enumerable:true});Object.defineProperties(r,{toString:{get:function(){var e=this;return function(){return e.href}}},href:{get:function(){return this._anchorElement.href.replace(/\?$/,"")},set:function(e){this._anchorElement.href=e;this._updateSearchParams()},enumerable:true},pathname:{get:function(){return this._anchorElement.pathname.replace(/(^\/?)/,"/")},set:function(e){this._anchorElement.pathname=e},enumerable:true},origin:{get:function(){var e={"http:":80,"https:":443,"ftp:":21}[this._anchorElement.protocol];var t=this._anchorElement.port!=e&&this._anchorElement.port!=="";return this._anchorElement.protocol+"//"+this._anchorElement.hostname+(t?":"+this._anchorElement.port:"")},enumerable:true},password:{get:function(){return""},set:function(e){},enumerable:true},username:{get:function(){return""},set:function(e){},enumerable:true}});e.createObjectURL=function(e){return t.createObjectURL.apply(t,arguments)};e.revokeObjectURL=function(e){return t.revokeObjectURL.apply(t,arguments)};u.URL=e};if(!e()){t()}if(u.location!==void 0&&!("origin"in u.location)){var r=function(){return u.location.protocol+"//"+u.location.hostname+(u.location.port?":"+u.location.port:"")};try{Object.defineProperty(u.location,"origin",{get:r,enumerable:true})}catch(e){setInterval(function(){u.location.origin=r()},100)}}})(typeof global!=="undefined"?global:typeof window!=="undefined"?window:typeof self!=="undefined"?self:this);;
